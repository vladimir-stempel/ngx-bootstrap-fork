{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/typeahead/models/index.ts"],"names":[],"mappings":"","sourcesContent":["import { TemplateRef } from '@angular/core';\r\n\r\nimport { TypeaheadMatch } from '../typeahead-match.class';\r\n\r\n/**\r\n * A context for the `optionsListTemplate`\r\n * input template in case you want to override default one\r\n */\r\nexport interface TypeaheadOptionListContext {\r\n  /** All matches */\r\n  matches: TypeaheadMatch[];\r\n  /** Item template */\r\n  itemTemplate: TemplateRef<TypeaheadOptionItemContext>;\r\n  /** Search query */\r\n  query: string[] | string;\r\n  /** Typeahead template methods */\r\n  $implicit: TypeaheadTemplateMethods;\r\n}\r\n\r\n/**\r\n * A context for the `typeaheadItemTemplate`\r\n * input template in case you want to override default one\r\n */\r\nexport interface TypeaheadOptionItemContext {\r\n  /** Item */\r\n  item: unknown;\r\n  /** Item index */\r\n  index: number;\r\n  /** Typeahead match */\r\n  match: TypeaheadMatch;\r\n  /** Search query */\r\n  query: string[] | string;\r\n}\r\n\r\n/**\r\n * Methods for `optionsListTemplate` context\r\n */\r\nexport interface TypeaheadTemplateMethods {\r\n  /** Function to select an option by click event */\r\n  selectMatch(value: TypeaheadMatch, e?: Event): void;\r\n  /** Function to select an option by mouseenter event */\r\n  selectActive(value: TypeaheadMatch): void;\r\n  /** Function to check if an option is active */\r\n  isActive(value: TypeaheadMatch): boolean;\r\n}\r\n"]}