{"version":3,"file":"bs-modal.service.js","sourceRoot":"","sources":["../../../../src/modal/bs-modal.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,UAAU,EAEV,YAAY,EAEZ,gBAAgB,EAChB,MAAM,EACN,QAAQ,EACT,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAmB,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,EAAE,uBAAuB,EAAE,MAAM,6BAA6B,CAAC;AACtE,OAAO,EACL,UAAU,EACV,mBAAmB,EACnB,YAAY,EACZ,oBAAoB,EACpB,6BAA6B,EAC9B,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;;;;AAGpD,MAAM,OAAO,cAAc;IAuBzB,YACE,eAAiC,EACzB,GAA2B,EACwB,kBAAgC;QADnF,QAAG,GAAH,GAAG,CAAwB;QACwB,uBAAkB,GAAlB,kBAAkB,CAAc;QAtB7F,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAC5B,YAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QAC7B,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAC5B,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAEpB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,wBAAmB,GAAG,CAAC,CAAC;QAExB,mBAAc,GAAG,CAAC,CAAC;QAIrB,gBAAW,GAAG,CAAC,CAAC;QAChB,sBAAiB,GAAG,IAAI,CAAC;QAEzB,YAAO,GAA+C,EAAE,CAAC;QAQ/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAC1C,IAAI,EACJ,IAAI,EACJ,IAAI,CACL,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC,CAAC;YAChC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAC9D,mBAAmB,CAAC;IACxB,CAAC;IAED,oBAAoB;IACpB,IAAI;IACF,8DAA8D;IAC9D,OAA+D,EAC/D,MAAwB;QAExB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,0CAA0C;QAC1C,MAAM,EAAE,GAAG,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,KAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC;QAC3D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC;YACzE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,mBAAmB,EAAE,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;QAEpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,OAAO,IAAI,CAAC,UAAU,CAAI,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,CAAC,EAAW;QACd,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE;YACxC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClF,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YACpB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,aAAa;QACX,MAAM,iBAAiB,GACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC;QAC5D,MAAM,eAAe,GACnB,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC;QAE1D,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,IAAI,iBAAiB,IAAI,eAAe,EAAE;gBACxC,IAAI,CAAC,eAAe;qBACjB,MAAM,CAAC,sBAAsB,CAAC;qBAC9B,EAAE,CAAC,MAAM,CAAC;qBACV,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;aACvD;SACF;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,QAAQ,CAAC,CAAC;IACpD,CAAC;IACD,8DAA8D;IAC9D,UAAU,CAAI,OAAY;;QACxB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YACxC,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;gBAC5C,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAC/B;SACF;QAED,8DAA8D;QAC9D,MAAM,UAAU,GAAG,IAAI,UAAU,EAAO,CAAC;QACzC,MAAM,iBAAiB,GAAG,WAAW;aAClC,OAAO,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;aACzD,OAAO,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;aACtD,MAAM,CAAC,uBAAuB,CAAC;aAC/B,EAAE,CAAC,MAAM,CAAC,CAAC;QACd,UAAU,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC1D,UAAU,CAAC,QAAQ,GAAG,CAAC,QAAgB,EAAE,EAAE;YACzC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;QACrD,CAAC,CAAC;QAEF,UAAU,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAW,CAAC;QAClD,UAAU,CAAC,MAAM,GAAG,IAAI,YAAY,EAAW,CAAC;QAEhD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC1D,0DAA0D;QAC1D,0EAA0E;QAC1E,iBAAiB,CAAC,IAAI,CAAC;YACrB,OAAO;YACP,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;YAChC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;YACtC,cAAc,EAAE,IAAI;YACpB,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;SACnB,CAAC,CAAC;QACH,iBAAiB,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAEzD,UAAU,CAAC,OAAO,GAAG,WAAW,CAAC,iBAAiB,EAAE,IAAI,IAAI,CAAC;QAC7D,UAAU,CAAC,EAAE,SAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,0CAAE,EAAE,CAAC;QAEtD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,UAAU,CAAC,EAAW;QACpB,IAAI,EAAE,IAAI,IAAI,EAAE;YACd,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACzF,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAChD,IAAI,WAAW,EAAE;gBACf,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACtB;SACF;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAClB,CAAC,MAAgD,EAAE,EAAE;gBACnD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACzC,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,MAAc;QAC7B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;IAClC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,iEAAiE;IACjE,gBAAgB;IAChB,cAAc;QACZ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACvE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACjD,CAAC;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CACjC,MAAM;aACH,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC/B,gBAAgB,CAAC,eAAe,CAAC,IAAI,GAAG,EAC3C,EAAE,CACH,CAAC;QAEF,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,IAAI,CAAC,mBAAmB;gBAC5D,IAAI,CAAC,cAAc,IAAI,CAAC;SAC3B;IACH,CAAC;IAEO,cAAc;QACpB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,IAAI,CAAC,mBAAmB,IAAI,CAAC;IACrE,CAAC;IAED,cAAc;IACN,iBAAiB;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM,cAAc,GAAG,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAErD,OAAO,cAAc,CAAC;IACxB,CAAC;IAEO,cAAc;QACpB,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAClC,IAAI,EACJ,IAAI,EACJ,IAAI,CACL,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAEO,aAAa,CAAC,EAAW;QAC/B,IAAI,EAAE,IAAI,IAAI,EAAE;YACd,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACzF,IAAI,aAAa,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,OAAO,CAAC,OAAO,CAClB,CAAC,MAAgD,EAAE,CAAS,EAAE,EAAE;oBAC9D,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,CACF,CAAC;aACH;SACF;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC7C;IACH,CAAC;IAEO,SAAS,CAAC,IAA2B,EAAE,EAAyB;QACtE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACtB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;;4EArPU,cAAc,wFA0BH,6BAA6B;sDA1BxC,cAAc,WAAd,cAAc;uFAAd,cAAc;cAD1B,UAAU;;sBA2BN,QAAQ;;sBAAI,MAAM;uBAAC,6BAA6B","sourcesContent":["import {\r\n  ComponentRef,\r\n  Injectable,\r\n  TemplateRef,\r\n  EventEmitter,\r\n  Renderer2,\r\n  RendererFactory2,\r\n  Inject,\r\n  Optional\r\n} from '@angular/core';\r\n\r\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport { ModalContainerComponent } from './modal-container.component';\r\nimport {\r\n  CLASS_NAME,\r\n  modalConfigDefaults,\r\n  ModalOptions,\r\n  TRANSITION_DURATIONS,\r\n  MODAL_CONFIG_DEFAULT_OVERRIDE\r\n} from './modal-options.class';\r\nimport { BsModalRef } from './bs-modal-ref.service';\r\n\r\n@Injectable()\r\nexport class BsModalService {\r\n  // constructor props\r\n  config: ModalOptions;\r\n\r\n  onShow = new EventEmitter();\r\n  onShown = new EventEmitter();\r\n  onHide = new EventEmitter();\r\n  onHidden = new EventEmitter();\r\n\r\n  protected isBodyOverflowing = false;\r\n  protected originalBodyPadding = 0;\r\n\r\n  protected scrollbarWidth = 0;\r\n\r\n  protected backdropRef: ComponentRef<ModalBackdropComponent>;\r\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\r\n  private modalsCount = 0;\r\n  private lastDismissReason = null;\r\n\r\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\r\n\r\n  private _renderer: Renderer2;\r\n\r\n  constructor(\r\n    rendererFactory: RendererFactory2,\r\n    private clf: ComponentLoaderFactory,\r\n    @Optional() @Inject(MODAL_CONFIG_DEFAULT_OVERRIDE) private modalDefaultOption: ModalOptions) {\r\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(\r\n      null,\r\n      null,\r\n      null\r\n    );\r\n    this._renderer = rendererFactory.createRenderer(null, null);\r\n    this.config = modalDefaultOption ?\r\n      (Object.assign({}, modalConfigDefaults, modalDefaultOption)) :\r\n      modalConfigDefaults;\r\n  }\r\n\r\n  /** Shows a modal */\r\n  show<T>(\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    content: string | TemplateRef<any> | { new(...args: any[]): T },\r\n    config?: ModalOptions<T>\r\n  ): BsModalRef<T> {\r\n    this.modalsCount++;\r\n    this._createLoaders();\r\n\r\n    // must be different per every show() call\r\n    const id = config?.id || (new Date()).getUTCMilliseconds();\r\n    this.config = this.modalDefaultOption ?\r\n      Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) :\r\n      Object.assign({}, modalConfigDefaults, config);\r\n    this.config.id = id;\r\n\r\n    this._showBackdrop();\r\n    this.lastDismissReason = null;\r\n\r\n    return this._showModal<T>(content);\r\n  }\r\n\r\n  hide(id?: number) {\r\n    if (this.modalsCount === 1 || id == null) {\r\n      this._hideBackdrop();\r\n      this.resetScrollbar();\r\n    }\r\n    this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;\r\n    setTimeout(() => {\r\n      this._hideModal(id);\r\n      this.removeLoaders(id);\r\n    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\r\n  }\r\n\r\n  _showBackdrop(): void {\r\n    const isBackdropEnabled =\r\n      this.config.backdrop || this.config.backdrop === 'static';\r\n    const isBackdropInDOM =\r\n      !this.backdropRef || !this.backdropRef.instance.isShown;\r\n\r\n    if (this.modalsCount === 1) {\r\n      this.removeBackdrop();\r\n\r\n      if (isBackdropEnabled && isBackdropInDOM) {\r\n        this._backdropLoader\r\n          .attach(ModalBackdropComponent)\r\n          .to('body')\r\n          .show({ isAnimated: this.config.animated });\r\n        this.backdropRef = this._backdropLoader._componentRef;\r\n      }\r\n    }\r\n  }\r\n\r\n  _hideBackdrop(): void {\r\n    if (!this.backdropRef) {\r\n      return;\r\n    }\r\n    this.backdropRef.instance.isShown = false;\r\n    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\r\n    setTimeout(() => this.removeBackdrop(), duration);\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  _showModal<T>(content: any): BsModalRef<T> {\r\n    const modalLoader = this.loaders[this.loaders.length - 1];\r\n    if (this.config && this.config.providers) {\r\n      for (const provider of this.config.providers) {\r\n        modalLoader.provide(provider);\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const bsModalRef = new BsModalRef<any>();\r\n    const modalContainerRef = modalLoader\r\n      .provide({ provide: ModalOptions, useValue: this.config })\r\n      .provide({ provide: BsModalRef, useValue: bsModalRef })\r\n      .attach(ModalContainerComponent)\r\n      .to('body');\r\n    bsModalRef.hide = () => modalContainerRef.instance.hide();\r\n    bsModalRef.setClass = (newClass: string) => {\r\n      modalContainerRef.instance.config.class = newClass;\r\n    };\r\n\r\n    bsModalRef.onHidden = new EventEmitter<unknown>();\r\n    bsModalRef.onHide = new EventEmitter<unknown>();\r\n\r\n    this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);\r\n    this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden);\r\n    // call 'show' method after assign setClass in bsModalRef.\r\n    // it makes modal component's bsModalRef available to call setClass method\r\n    modalContainerRef.show({\r\n      content,\r\n      isAnimated: this.config.animated,\r\n      initialState: this.config.initialState,\r\n      bsModalService: this,\r\n      id: this.config.id\r\n    });\r\n    modalContainerRef.instance.level = this.getModalsCount();\r\n\r\n    bsModalRef.content = modalLoader.getInnerComponent() || null;\r\n    bsModalRef.id = modalContainerRef.instance.config?.id;\r\n\r\n    return bsModalRef;\r\n  }\r\n\r\n  _hideModal(id?: number): void {\r\n    if (id != null) {\r\n      const indexToRemove = this.loaders.findIndex(loader => loader.instance.config.id === id);\r\n      const modalLoader = this.loaders[indexToRemove];\r\n      if (modalLoader) {\r\n        modalLoader.hide(id);\r\n      }\r\n    } else {\r\n      this.loaders.forEach(\r\n        (loader: ComponentLoader<ModalContainerComponent>) => {\r\n          loader.hide(loader.instance.config.id);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getModalsCount(): number {\r\n    return this.modalsCount;\r\n  }\r\n\r\n  setDismissReason(reason: string) {\r\n    this.lastDismissReason = reason;\r\n  }\r\n\r\n  removeBackdrop(): void {\r\n    this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\r\n    this._backdropLoader.hide();\r\n    this.backdropRef = null;\r\n  }\r\n\r\n  /** Checks if the body is overflowing and sets scrollbar width */\r\n  /** @internal */\r\n  checkScrollbar(): void {\r\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\r\n    this.scrollbarWidth = this.getScrollbarWidth();\r\n  }\r\n\r\n  setScrollbar(): void {\r\n    if (!document) {\r\n      return;\r\n    }\r\n\r\n    this.originalBodyPadding = parseInt(\r\n      window\r\n        .getComputedStyle(document.body)\r\n        .getPropertyValue('padding-right') || '0',\r\n      10\r\n    );\r\n\r\n    if (this.isBodyOverflowing) {\r\n      document.body.style.paddingRight = `${this.originalBodyPadding +\r\n        this.scrollbarWidth}px`;\r\n    }\r\n  }\r\n\r\n  private resetScrollbar(): void {\r\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\r\n  }\r\n\r\n  // thx d.walsh\r\n  private getScrollbarWidth(): number {\r\n    const scrollDiv = this._renderer.createElement('div');\r\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\r\n    this._renderer.appendChild(document.body, scrollDiv);\r\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n    this._renderer.removeChild(document.body, scrollDiv);\r\n\r\n    return scrollbarWidth;\r\n  }\r\n\r\n  private _createLoaders(): void {\r\n    const loader = this.clf.createLoader<ModalContainerComponent>(\r\n      null,\r\n      null,\r\n      null\r\n    );\r\n    this.copyEvent(loader.onBeforeShow, this.onShow);\r\n    this.copyEvent(loader.onShown, this.onShown);\r\n    this.copyEvent(loader.onBeforeHide, this.onHide);\r\n    this.copyEvent(loader.onHidden, this.onHidden);\r\n    this.loaders.push(loader);\r\n  }\r\n\r\n  private removeLoaders(id?: number): void {\r\n    if (id != null) {\r\n      const indexToRemove = this.loaders.findIndex(loader => loader.instance.config.id === id);\r\n      if (indexToRemove >= 0) {\r\n        this.loaders.splice(indexToRemove, 1);\r\n        this.loaders.forEach(\r\n          (loader: ComponentLoader<ModalContainerComponent>, i: number) => {\r\n            loader.instance.level = i + 1;\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.loaders.splice(0, this.loaders.length);\r\n    }\r\n  }\r\n\r\n  private copyEvent(from: EventEmitter<unknown>, to: EventEmitter<unknown>) {\r\n    from.subscribe((data) => {\r\n      to.emit(this.lastDismissReason || data);\r\n    });\r\n  }\r\n}\r\n"]}