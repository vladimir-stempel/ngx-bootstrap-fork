{"version":3,"file":"accordion-group.component.js","sourceRoot":"","sources":["../../../../src/accordion/accordion-group.component.ts","../../../../src/accordion/accordion-group.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component, HostBinding, Inject, Input, OnDestroy, OnInit, Output, EventEmitter\r\n} from '@angular/core';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\nimport { AccordionComponent } from './accordion.component';\r\n\r\n/**\r\n * ### Accordion heading\r\n * Instead of using `heading` attribute on the `accordion-group`, you can use\r\n * an `accordion-heading` attribute on `any` element inside of a group that\r\n * will be used as group's header template.\r\n */\r\n@Component({\r\n  selector: 'accordion-group, accordion-panel',\r\n  templateUrl: './accordion-group.component.html',\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: {\r\n    class: 'panel',\r\n    style: 'display: block'\r\n  },\r\n  styleUrls: ['./accordion.scss']\r\n})\r\nexport class AccordionPanelComponent implements OnInit, OnDestroy {\r\n  /** turn on/off animation */\r\n  isAnimated = false;\r\n  /** Clickable text in accordion's group header, check `accordion heading` below for using html in header */\r\n  @Input() heading: string;\r\n  /** Provides an ability to use Bootstrap's contextual panel classes\r\n   * (`panel-primary`, `panel-success`, `panel-info`, etc...).\r\n   * List of all available classes [available here]\r\n   * (https://getbootstrap.com/docs/3.3/components/#panels-alternatives)\r\n   */\r\n  @Input() panelClass: string;\r\n  /** if <code>true</code> â€” disables accordion group */\r\n  @Input() isDisabled: boolean;\r\n  /** Emits when the opened state changes */\r\n  @Output() isOpenChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  // Questionable, maybe .panel-open should be on child div.panel element?\r\n  /** Is accordion group open or closed. This property supports two-way binding */\r\n  @HostBinding('class.panel-open')\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._isOpen;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value !== this.isOpen) {\r\n      if (value) {\r\n        this.accordion.closeOtherPanels(this);\r\n      }\r\n      this._isOpen = value;\r\n      Promise.resolve(null).then(() => {\r\n        this.isOpenChange.emit(value);\r\n      })\r\n        .catch((error: Error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  protected _isOpen = false;\r\n  protected accordion: AccordionComponent;\r\n\r\n  constructor(@Inject(AccordionComponent) accordion: AccordionComponent) {\r\n    this.accordion = accordion;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.panelClass = this.panelClass || 'panel-default';\r\n    this.accordion.addGroup(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.accordion.removeGroup(this);\r\n  }\r\n\r\n  toggleOpen(): void {\r\n    if (!this.isDisabled) {\r\n      this.isOpen = !this.isOpen;\r\n    }\r\n  }\r\n}\r\n","<div class=\"panel card\" [ngClass]=\"panelClass\">\r\n  <div\r\n    class=\"panel-heading card-header\"\r\n    role=\"tab\"\r\n    (click)=\"toggleOpen()\"\r\n    [ngClass]=\"isDisabled ? 'panel-disabled' : 'panel-enabled'\"\r\n  >\r\n    <div class=\"panel-title\">\r\n      <div role=\"button\" class=\"accordion-toggle\" [attr.aria-expanded]=\"isOpen\">\r\n        <button class=\"btn btn-link\" *ngIf=\"heading\" [ngClass]=\"{ 'text-muted': isDisabled }\" type=\"button\">\r\n          {{ heading }}\r\n        </button>\r\n        <ng-content select=\"[accordion-heading]\"></ng-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"panel-collapse collapse\" role=\"tabpanel\" [collapse]=\"!isOpen\" [isAnimated]=\"isAnimated\">\r\n    <div class=\"panel-body card-block card-body\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}