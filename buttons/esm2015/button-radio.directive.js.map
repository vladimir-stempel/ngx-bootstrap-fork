{"version":3,"file":"button-radio.directive.js","sourceRoot":"","sources":["../../../../src/buttons/button-radio.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Provider,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\r\n\r\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ButtonRadioDirective),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Create radio buttons or groups of buttons.\r\n * A value of a selected button is bound to a variable specified via ngModel.\r\n */\r\n@Directive({\r\n  selector: '[btnRadio]',\r\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\r\n  onChange = Function.prototype;\r\n  onTouched = Function.prototype;\r\n\r\n  /** Radio button value, will be set to `ngModel` */\r\n  @Input() btnRadio: string;\r\n  /** If `true` — radio button can be unchecked */\r\n  @Input() uncheckable: boolean;\r\n  /** Current value of radio component or group */\r\n  @Input()\r\n  get value() {\r\n    return this.group ? this.group.value : this._value;\r\n  }\r\n\r\n  set value(value: null | string) {\r\n    if (this.group) {\r\n      this.group.value = value;\r\n\r\n      return;\r\n    }\r\n    this._value = value;\r\n    this._onChange(value);\r\n  }\r\n  /** If `true` — radio button is disabled */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(disabled: boolean) {\r\n    this.setDisabledState(disabled);\r\n  }\r\n\r\n  @HostBinding('attr.aria-disabled')\r\n  get controlOrGroupDisabled() {\r\n    return this.disabled || (this.group && this.group.disabled) ? true : undefined;\r\n  }\r\n\r\n  @HostBinding('class.disabled')\r\n  get hasDisabledClass() {\r\n    // Although the radio is disabled the active radio should still stand out.\r\n    // The disabled class will prevent this so don't add it on the active radio\r\n    return this.controlOrGroupDisabled && !this.isActive;\r\n  }\r\n\r\n  @HostBinding('class.active')\r\n  @HostBinding('attr.aria-checked')\r\n  get isActive(): boolean {\r\n    return this.btnRadio === this.value;\r\n  }\r\n\r\n  @HostBinding('attr.role') readonly role: string = 'radio';\r\n\r\n  @HostBinding('attr.tabindex')\r\n  get tabindex(): undefined | number {\r\n    if (this.controlOrGroupDisabled) {\r\n      // Disabled radio buttons should not receive focus\r\n      return undefined;\r\n    } else if (this.isActive || this.group == null) {\r\n      return 0;\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  get hasFocus(): boolean {\r\n    return this._hasFocus;\r\n  }\r\n\r\n  private _value: null | string;\r\n  private _disabled: boolean;\r\n  private _hasFocus = false;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    private renderer: Renderer2,\r\n    @Optional()\r\n    @Inject(forwardRef(() => ButtonRadioGroupDirective))\r\n    private group: ButtonRadioGroupDirective\r\n  ) {}\r\n\r\n  @HostListener('click')\r\n  toggleIfAllowed(): void {\r\n    if (!this.canToggle()) {\r\n      return;\r\n    }\r\n\r\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\r\n  }\r\n\r\n  @HostListener('keydown.space', ['$event'])\r\n  onSpacePressed(event: KeyboardEvent) {\r\n    this.toggleIfAllowed();\r\n    event.preventDefault();\r\n  }\r\n\r\n  focus() {\r\n    this.el.nativeElement.focus();\r\n  }\r\n\r\n  @HostListener('focus')\r\n  onFocus() {\r\n    this._hasFocus = true;\r\n  }\r\n\r\n  @HostListener('blur')\r\n  onBlur() {\r\n    this._hasFocus = false;\r\n    this.onTouched();\r\n  }\r\n\r\n  canToggle(): boolean {\r\n    return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\r\n  }\r\n\r\n  _onChange(value: string): void {\r\n    if (this.group) {\r\n      this.group.value = value;\r\n\r\n      return;\r\n    }\r\n    this.onTouched();\r\n    this.onChange(value);\r\n  }\r\n\r\n  // ControlValueAccessor\r\n  // model -> view\r\n  writeValue(value: string): void {\r\n    this.value = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this._disabled = disabled;\r\n    if (disabled) {\r\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\r\n\r\n      return;\r\n    }\r\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\r\n  }\r\n}\r\n"]}