{"version":3,"sources":["../../../../src/tabs/ng-transclude.directive.ts","../../../../src/tabs/tabset.config.ts","../../../../src/tabs/tabset.component.html","../../../../src/tabs/tabset.component.ts","../../../../src/tabs/tab.directive.ts","../../../../src/tabs/tab-heading.directive.ts","../../../../src/tabs/tabs.module.ts"],"names":["NgTranscludeDirective","viewRef","this","Object","defineProperty","prototype","_ngTransclude","templateRef","createEmbeddedView","i0","ɵɵdirectiveInject","ViewContainerRef","selectors","inputs","ngTransclude","Directive","selector","Input","type","isKeysAllowed","ariaLabel","i0.ɵɵelementStart","i0.ɵɵlistener","$event","preventDefault","ctx_r4","removeTab","tabz_r1","i0.ɵɵtext","i0.ɵɵelementEnd","TabsetConfig","factory","ɵfac","providedIn","Injectable","i0.ɵɵtemplate","i0.ɵɵclassProp","disabled","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵattribute","active","id","i0.ɵɵtextInterpolate","TabsetComponent","config","renderer","elementRef","clazz","tabs","classMap","assign","_vertical","value","setClassMap","_justified","_type","_isKeysAllowed","ngOnDestroy","isDestroyed","addTab","tab","push","length","options","reselect","emit","index","indexOf","hasAvailableTabs","newActiveIndex","getClosestTabIndex","removed","splice","nativeElement","parentNode","removeChild","keyNavActions","event","list","Array","from","querySelectorAll","keyCode","key","click","removable","focus","lastTab","shift","i","classList","contains","firstTab","previousTab","nextTab","tabsLength","step","prevIndex","nextIndex","_a","nav-stacked","vertical","flex-column","nav-justified","justified","Renderer2","ElementRef","hostVars","hostBindings","rf","ctx","i0.ɵɵprojection","Component","templateUrl","styleUrls","HostBinding","TabDirective","tabset","selectTab","EventEmitter","deselect","addClass","role","_customClass","customClass","_this","split","forEach","cssClass","removeClass","trim","_active","ngOnInit","exportAs","heading","Output","ariaLabelledby","headingRef","TabHeadingDirective","TemplateRef","TabsModule","forRoot","ngModule","providers","imports","CommonModule","declarations","exports","NgModule"],"mappings":"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","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngTransclude]'\r\n})\r\nexport class NgTranscludeDirective {\r\n  viewRef: ViewContainerRef;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  protected _ngTransclude: TemplateRef<any>;\r\n\r\n  @Input()\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  set ngTransclude(templateRef: TemplateRef<any>) {\r\n    this._ngTransclude = templateRef;\r\n    if (templateRef) {\r\n      this.viewRef.createEmbeddedView(templateRef);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  get ngTransclude(): TemplateRef<any> {\r\n    return this._ngTransclude;\r\n  }\r\n\r\n  constructor(viewRef: ViewContainerRef) {\r\n    this.viewRef = viewRef;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TabsetConfig {\r\n  /** provides default navigation context class: 'tabs' or 'pills' */\r\n  type = 'tabs';\r\n  /** provides possibility to set keyNavigations enable or disable, by default is enable */\r\n  isKeysAllowed = true;\r\n  /** aria label for tab list */\r\n  ariaLabel = 'Tabs';\r\n}\r\n","<ul class=\"nav\" [ngClass]=\"classMap\"\r\n    (click)=\"$event.preventDefault()\"\r\n    [attr.aria-label]=\"ariaLabel\"\r\n    role=\"tablist\">\r\n  <li *ngFor=\"let tabz of tabs; let i = index\" [ngClass]=\"['nav-item', tabz.customClass || '']\"\r\n      [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\" (keydown)=\"keyNavActions($event, i)\">\r\n    <a href=\"javascript:void(0);\" class=\"nav-link\" role=\"tab\"\r\n       [attr.aria-controls]=\"tabz.id ? tabz.id : ''\"\r\n       [attr.aria-selected]=\"!!tabz.active\"\r\n       [attr.id]=\"tabz.id ? tabz.id + '-link' : ''\"\r\n       [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\"\r\n       (click)=\"tabz.active = true\">\r\n      <span [ngTransclude]=\"tabz.headingRef\">{{ tabz.heading }}</span>\r\n      <span *ngIf=\"tabz.removable\" (click)=\"$event.preventDefault(); removeTab(tabz);\" class=\"bs-remove-tab\"> &#10060;</span>\r\n    </a>\r\n  </li>\r\n</ul>\r\n<div class=\"tab-content\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { Component, HostBinding, Input, OnDestroy, Renderer2, ElementRef } from '@angular/core';\r\n\r\nimport { TabDirective } from './tab.directive';\r\nimport { TabsetConfig } from './tabset.config';\r\n// todo: add active event to tab\r\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\r\n@Component({\r\n  selector: 'tabset',\r\n  templateUrl: './tabset.component.html',\r\n  styleUrls: ['./tabs.scss']\r\n})\r\nexport class TabsetComponent implements OnDestroy {\r\n  /** if true tabs will be placed vertically */\r\n  @Input()\r\n  get vertical(): boolean {\r\n    return this._vertical;\r\n  }\r\n  set vertical(value: boolean) {\r\n    this._vertical = value;\r\n    this.setClassMap();\r\n  }\r\n\r\n  /** if true tabs fill the container and have a consistent width */\r\n  @Input()\r\n  get justified(): boolean {\r\n    return this._justified;\r\n  }\r\n  set justified(value: boolean) {\r\n    this._justified = value;\r\n    this.setClassMap();\r\n  }\r\n\r\n  /** navigation context class: 'tabs' or 'pills' */\r\n  @Input()\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n  set type(value: string) {\r\n    this._type = value;\r\n    this.setClassMap();\r\n  }\r\n\r\n  get isKeysAllowed(): boolean {\r\n    return this._isKeysAllowed;\r\n  }\r\n\r\n  set isKeysAllowed(value: boolean) {\r\n    this._isKeysAllowed = value;\r\n  }\r\n\r\n\r\n  @HostBinding('class.tab-container') clazz = true;\r\n\r\n  tabs: TabDirective[] = [];\r\n  classMap: { [key: string]: boolean } = {};\r\n\r\n  /** aria label for tab list */\r\n  ariaLabel: string;\r\n\r\n  protected isDestroyed: boolean;\r\n  protected _vertical: boolean;\r\n  protected _justified: boolean;\r\n  protected _type: string;\r\n  protected _isKeysAllowed: boolean;\r\n\r\n  constructor(\r\n    config: TabsetConfig,\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef\r\n  ) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isDestroyed = true;\r\n  }\r\n\r\n  addTab(tab: TabDirective): void {\r\n    this.tabs.push(tab);\r\n    tab.active = this.tabs.length === 1 && typeof tab.active === 'undefined';\r\n  }\r\n\r\n  removeTab(\r\n    tab: TabDirective,\r\n    options = { reselect: true, emit: true }\r\n  ): void {\r\n    const index = this.tabs.indexOf(tab);\r\n    if (index === -1 || this.isDestroyed) {\r\n      return;\r\n    }\r\n    // Select a new tab if the tab to be removed is selected and not destroyed\r\n    if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\r\n      const newActiveIndex = this.getClosestTabIndex(index);\r\n      this.tabs[newActiveIndex].active = true;\r\n    }\r\n    if (options.emit) {\r\n      tab.removed.emit(tab);\r\n    }\r\n    this.tabs.splice(index, 1);\r\n    if (tab.elementRef.nativeElement.parentNode) {\r\n      this.renderer.removeChild(\r\n        tab.elementRef.nativeElement.parentNode,\r\n        tab.elementRef.nativeElement\r\n      );\r\n    }\r\n  }\r\n\r\n    keyNavActions(event: KeyboardEvent, index: number) {\r\n    if (!this.isKeysAllowed) {\r\n      return;\r\n    }\r\n    const list: HTMLElement[] = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\r\n    // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\r\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\r\n      event.preventDefault();\r\n      const currentTab = list[(index) % list.length];\r\n      currentTab.click();\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\r\n      let nextTab: HTMLElement;\r\n      let shift = 1;\r\n\r\n      do {\r\n        nextTab = list[(index + shift) % list.length];\r\n\r\n        shift++;\r\n      } while (nextTab.classList.contains('disabled'));\r\n\r\n      nextTab.focus();\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\r\n      let previousTab: HTMLElement;\r\n      let shift = 1;\r\n      let i = index;\r\n\r\n      do {\r\n        if ((i - shift) < 0) {\r\n          i = list.length - 1;\r\n          previousTab = list[i];\r\n          shift = 0;\r\n        } else {\r\n          previousTab = list[i - shift];\r\n        }\r\n\r\n        shift++;\r\n      } while (previousTab.classList.contains('disabled'));\r\n\r\n      previousTab.focus();\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 36 || event.key === 'Home') {\r\n      event.preventDefault();\r\n\r\n      let firstTab: HTMLElement;\r\n      let shift = 0;\r\n\r\n      do {\r\n        firstTab = list[shift % list.length];\r\n\r\n        shift++;\r\n      } while (firstTab.classList.contains('disabled'));\r\n\r\n      firstTab.focus();\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 35 || event.key === 'End') {\r\n      event.preventDefault();\r\n\r\n      let lastTab: HTMLElement;\r\n      let shift = 1;\r\n      let i = index;\r\n\r\n      do {\r\n        if ((i - shift) < 0) {\r\n          i = list.length - 1;\r\n          lastTab = list[i];\r\n          shift = 0;\r\n        } else {\r\n          lastTab = list[i - shift];\r\n        }\r\n\r\n        shift++;\r\n      } while (lastTab.classList.contains('disabled'));\r\n\r\n      lastTab.focus();\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 46 || event.key === 'Delete') {\r\n      if (this.tabs[index].removable) {\r\n        this.removeTab(this.tabs[index]);\r\n\r\n        if (list[index + 1]) {\r\n          list[(index + 1) % list.length].focus();\r\n\r\n          return;\r\n        }\r\n\r\n        if (list[list.length - 1]) {\r\n          list[0].focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected getClosestTabIndex(index: number): number {\r\n    const tabsLength = this.tabs.length;\r\n    if (!tabsLength) {\r\n      return -1;\r\n    }\r\n\r\n    for (let step = 1; step <= tabsLength; step += 1) {\r\n      const prevIndex = index - step;\r\n      const nextIndex = index + step;\r\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\r\n        return prevIndex;\r\n      }\r\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\r\n        return nextIndex;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  protected hasAvailableTabs(index: number): boolean {\r\n    const tabsLength = this.tabs.length;\r\n    if (!tabsLength) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < tabsLength; i += 1) {\r\n      if (!this.tabs[i].disabled && i !== index) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  protected setClassMap(): void {\r\n    this.classMap = {\r\n      'nav-stacked': this.vertical,\r\n      'flex-column': this.vertical,\r\n      'nav-justified': this.justified,\r\n      [`nav-${this.type}`]: true\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  ElementRef,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { TabsetComponent } from './tabset.component';\r\n\r\n@Directive({ selector: 'tab, [tab]', exportAs: 'tab' })\r\nexport class TabDirective implements OnInit, OnDestroy {\r\n  /** tab header text */\r\n  @Input() heading: string;\r\n  /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\r\n  @HostBinding('attr.id')\r\n  @Input() id: string;\r\n  /** if true tab can not be activated */\r\n  @Input() disabled: boolean;\r\n  /** if true tab can be removable, additional button will appear */\r\n  @Input() removable: boolean;\r\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\r\n  @Input()\r\n  get customClass(): string {\r\n    return this._customClass;\r\n  }\r\n\r\n  set customClass(customClass: string) {\r\n    if (this.customClass) {\r\n      this.customClass.split(' ').forEach((cssClass: string) => {\r\n        this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\r\n      });\r\n    }\r\n\r\n    this._customClass = customClass ? customClass.trim() : null;\r\n\r\n    if (this.customClass) {\r\n      this.customClass.split(' ').forEach((cssClass: string) => {\r\n        this.renderer.addClass(this.elementRef.nativeElement, cssClass);\r\n      });\r\n    }\r\n  }\r\n\r\n  /** tab active state toggle */\r\n  @HostBinding('class.active')\r\n  @Input()\r\n  get active(): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  set active(active: boolean) {\r\n    if (this._active === active) {\r\n      return;\r\n    }\r\n    if ((this.disabled && active) || !active) {\r\n      if (this._active && !active) {\r\n        this.deselect.emit(this);\r\n        this._active = active;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this._active = active;\r\n    this.selectTab.emit(this);\r\n    this.tabset.tabs.forEach((tab: TabDirective) => {\r\n      if (tab !== this) {\r\n        tab.active = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\r\n  @Output() selectTab: EventEmitter<TabDirective> = new EventEmitter();\r\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\r\n  @Output() deselect: EventEmitter<TabDirective> = new EventEmitter();\r\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\r\n  @Output() removed: EventEmitter<TabDirective> = new EventEmitter();\r\n\r\n  @HostBinding('class.tab-pane') addClass = true;\r\n  @HostBinding('attr.role') role = 'tabpanel';\r\n  @HostBinding('attr.aria-labelledby') get ariaLabelledby(): string {\r\n    return this.id ? `${this.id}-link` : '';\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  headingRef: TemplateRef<any>;\r\n  tabset: TabsetComponent;\r\n  protected _active: boolean;\r\n  protected _customClass: string;\r\n\r\n  constructor(\r\n    tabset: TabsetComponent,\r\n    public elementRef: ElementRef,\r\n    public renderer: Renderer2\r\n  ) {\r\n    this.tabset = tabset;\r\n    this.tabset.addTab(this);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.removable = !!this.removable;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tabset.removeTab(this, { reselect: false, emit: false });\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\nimport { TabDirective } from './tab.directive';\r\n\r\n/** Should be used to mark <ng-template> element as a template for tab heading */\r\n@Directive({ selector: '[tabHeading]' })\r\nexport class TabHeadingDirective {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  templateRef: TemplateRef<any>;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\r\n    tab.headingRef = templateRef;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { NgTranscludeDirective } from './ng-transclude.directive';\r\nimport { TabHeadingDirective } from './tab-heading.directive';\r\nimport { TabDirective } from './tab.directive';\r\nimport { TabsetComponent } from './tabset.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    NgTranscludeDirective,\r\n    TabDirective,\r\n    TabsetComponent,\r\n    TabHeadingDirective\r\n  ],\r\n  exports: [\r\n    TabDirective,\r\n    TabsetComponent,\r\n    TabHeadingDirective,\r\n    NgTranscludeDirective\r\n  ]\r\n})\r\nexport class TabsModule {\r\n  static forRoot(): ModuleWithProviders<TabsModule> {\r\n    return {\r\n      ngModule: TabsModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}