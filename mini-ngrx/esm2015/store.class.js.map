{"version":3,"file":"store.class.js","sourceRoot":"","sources":["../../../../src/mini-ngrx/store.class.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAsB,MAAM,MAAM,CAAC;AACtD,OAAO,EAAE,oBAAoB,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAG3D,MAAM,OAAO,SAAa,SAAQ,UAAa;IAC7C,YACU,WAA6B;IACrC,8DAA8D;IACtD,QAA4B;IACpC,8DAA8D;IAC9D,MAAuB;QAEvB,KAAK,EAAE,CAAC;QANA,gBAAW,GAAX,WAAW,CAAkB;QAE7B,aAAQ,GAAR,QAAQ,CAAoB;QAMhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED,MAAM,CAAI,WAA4B;QAChC,MAAM,OAAO,GAAkB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QAEtE,OAAO,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,CAAI,QAAwB;QAC9B,MAAM,KAAK,GAAG,IAAI,SAAS,CAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAClE,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE9B,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ,CAAC,MAAc;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,IAAI,CAAC,MAAc;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,8DAA8D;IAC9D,KAAK,CAAC,GAAQ;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,QAAQ;IACV,CAAC;CACF","sourcesContent":["/**\r\n * @copyright ngrx\r\n */\r\nimport { Observable, Observer, Operator } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { Action, ActionReducer } from './index';\r\n\r\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\r\n  constructor(\r\n    private _dispatcher: Observer<Action>,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    private _reducer: ActionReducer<any>,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    state$: Observable<any>\r\n  ) {\r\n    super();\r\n\r\n        this.source = state$;\r\n  }\r\n\r\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\r\n        const mapped$: Observable<R> = this.source.pipe(map(pathOrMapFn));\r\n\r\n    return mapped$.pipe(distinctUntilChanged());\r\n  }\r\n\r\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\r\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\r\n        store.operator = operator;\r\n\r\n    return store;\r\n  }\r\n\r\n  dispatch(action: Action) {\r\n    this._dispatcher.next(action);\r\n  }\r\n\r\n  next(action: Action) {\r\n    this._dispatcher.next(action);\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  error(err: any) {\r\n    this._dispatcher.error(err);\r\n  }\r\n\r\n  complete() {\r\n    /*noop*/\r\n  }\r\n}\r\n"]}