{"version":3,"file":"ngx-bootstrap-pagination.umd.js","sources":["../../../../src/pagination/pagination.config.ts","../../../../src/pagination/pager.component.ts","../../../../src/pagination/pager.component.html","../../../../src/pagination/pagination.component.html","../../../../src/pagination/pagination.component.ts","../../../../src/pagination/pagination.module.ts","../../../../src/pagination/ngx-bootstrap-pagination.ts"],"sourcesContent":["// todo: split\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { ConfigModel, PagerModel } from './models';\r\n\r\n/** Provides default values for Pagination and pager components */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaginationConfig {\r\n  main: ConfigModel = {\r\n    maxSize: void 0,\r\n    itemsPerPage: 10,\r\n    boundaryLinks: false,\r\n    directionLinks: true,\r\n    firstText: 'First',\r\n    previousText: 'Previous',\r\n    nextText: 'Next',\r\n    lastText: 'Last',\r\n    pageBtnClass: '',\r\n    rotate: true\r\n  };\r\n  pager: PagerModel = {\r\n    itemsPerPage: 15,\r\n    previousText: '« Previous',\r\n    nextText: 'Next »',\r\n    pageBtnClass: '',\r\n    align: true\r\n  };\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Provider\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PageChangedEvent } from './pagination.component';\r\nimport { PaginationConfig } from './pagination.config';\r\n\r\nimport { ConfigModel, PagesModel } from './models';\r\n\r\nexport const PAGER_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => PagerComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'pager',\r\n  templateUrl: './pager.component.html',\r\n  providers: [PAGER_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class PagerComponent implements ControlValueAccessor, OnInit {\r\n  config: ConfigModel;\r\n  /** if `true` aligns each link to the sides of pager */\r\n  @Input() align: boolean;\r\n  /** limit number for page links in pager */\r\n  @Input() maxSize: number;\r\n  /** if false first and last buttons will be hidden */\r\n  @Input() boundaryLinks: boolean;\r\n  /** if false previous and next buttons will be hidden */\r\n  @Input() directionLinks: boolean;\r\n  // labels\r\n  /** first button text */\r\n  @Input() firstText: string;\r\n  /** previous button text */\r\n  @Input() previousText: string;\r\n  /** next button text */\r\n  @Input() nextText: string;\r\n  /** last button text */\r\n  @Input() lastText: string;\r\n  /** if true current page will in the middle of pages list */\r\n  @Input() rotate: boolean;\r\n  // css\r\n  /** add class to <code><li\\></code> */\r\n  @Input() pageBtnClass: string;\r\n\r\n  /** if true pagination component will be disabled */\r\n  @Input() disabled: boolean;\r\n\r\n  /** fired when total pages count changes, $event:number equals to total pages count */\r\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\r\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to\r\n   * object with current page index and number of items per page\r\n   */\r\n  @Output()\r\n  pageChanged: EventEmitter<PageChangedEvent> = new EventEmitter<PageChangedEvent>();\r\n\r\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n  @Input()\r\n  get itemsPerPage(): number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  set itemsPerPage(v: number) {\r\n    this._itemsPerPage = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  /** total number of items in all pages */\r\n  @Input()\r\n  get totalItems(): number {\r\n    return this._totalItems;\r\n  }\r\n\r\n  set totalItems(v: number) {\r\n    this._totalItems = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return this._totalPages;\r\n  }\r\n\r\n  set totalPages(v: number) {\r\n    this._totalPages = v;\r\n    this.numPages.emit(v);\r\n    if (this.inited) {\r\n      this.selectPage(this.page);\r\n    }\r\n  }\r\n\r\n  set page(value: number) {\r\n    const _previous = this._page;\r\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\r\n    this.changeDetection.markForCheck();\r\n\r\n    if (_previous === this._page || typeof _previous === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    this.pageChanged.emit({\r\n      page: this._page,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  onChange = Function.prototype;\r\n  onTouched = Function.prototype;\r\n\r\n  classMap: string;\r\n  pages: PagesModel[];\r\n\r\n  protected _itemsPerPage: number;\r\n  protected _totalItems: number;\r\n  protected _totalPages: number;\r\n  protected inited = false;\r\n  protected _page = 1;\r\n\r\n  constructor(private elementRef: ElementRef,\r\n              paginationConfig: PaginationConfig,\r\n              private changeDetection: ChangeDetectorRef) {\r\n    this.elementRef = elementRef;\r\n    if (!this.config) {\r\n      this.configureOptions(\r\n        Object.assign({}, paginationConfig.main, paginationConfig.pager)\r\n      );\r\n    }\r\n  }\r\n\r\n  configureOptions(config: ConfigModel): void {\r\n    this.config = Object.assign({}, config);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof window !== 'undefined') {\r\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n    }\r\n    // watch for maxSize\r\n    this.maxSize =\r\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\r\n    this.rotate =\r\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\r\n    this.boundaryLinks =\r\n      typeof this.boundaryLinks !== 'undefined'\r\n        ? this.boundaryLinks\r\n        : this.config.boundaryLinks;\r\n    this.directionLinks =\r\n      typeof this.directionLinks !== 'undefined'\r\n        ? this.directionLinks\r\n        : this.config.directionLinks;\r\n    this.pageBtnClass =\r\n      typeof this.pageBtnClass !== 'undefined'\r\n        ? this.pageBtnClass\r\n        : this.config.pageBtnClass;\r\n\r\n    // base class\r\n    this.itemsPerPage =\r\n      typeof this.itemsPerPage !== 'undefined'\r\n        ? this.itemsPerPage\r\n        : this.config.itemsPerPage;\r\n    this.totalPages = this.calculateTotalPages();\r\n    // this class\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n    this.inited = true;\r\n  }\r\n\r\n  writeValue(value: number): void {\r\n    this.page = value;\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n  }\r\n\r\n  getText(key: string): string {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\r\n  }\r\n\r\n  noPrevious(): boolean {\r\n    return this.page === 1;\r\n  }\r\n\r\n  noNext(): boolean {\r\n    return this.page === this.totalPages;\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  selectPage(page: number, event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (!this.disabled) {\r\n      if (event && event.target) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const target: any = event.target;\r\n        target.blur();\r\n      }\r\n      this.writeValue(page);\r\n      this.onChange(this.page);\r\n    }\r\n  }\r\n\r\n  // Create page object used in template\r\n  protected makePage(num: number,\r\n                     text: string,\r\n                     active: boolean): { number: number; text: string; active: boolean } {\r\n    return {text, number: num, active};\r\n  }\r\n\r\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\r\n    const pages: PagesModel[] = [];\r\n\r\n    // Default page limits\r\n    let startPage = 1;\r\n    let endPage = totalPages;\r\n    const isMaxSized =\r\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n\r\n    // recompute if maxSize\r\n    if (isMaxSized) {\r\n      if (this.rotate) {\r\n        // Current page is displayed in the middle of the visible ones\r\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n        endPage = startPage + this.maxSize - 1;\r\n\r\n        // Adjust if limit is exceeded\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - this.maxSize + 1;\r\n        }\r\n      } else {\r\n        // Visible pages are paginated with maxSize\r\n        startPage =\r\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\r\n\r\n        // Adjust last page if limit is exceeded\r\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n      }\r\n    }\r\n\r\n    // Add page number links\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      const page = this.makePage(num, num.toString(), num === currentPage);\r\n      pages.push(page);\r\n    }\r\n\r\n    // Add links to move between page sets\r\n    if (isMaxSized && !this.rotate) {\r\n      if (startPage > 1) {\r\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\r\n        pages.unshift(previousPageSet);\r\n      }\r\n\r\n      if (endPage < totalPages) {\r\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\r\n        pages.push(nextPageSet);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  // base class\r\n  protected calculateTotalPages(): number {\r\n    const totalPages =\r\n      this.itemsPerPage < 1\r\n        ? 1\r\n        : Math.ceil(this.totalItems / this.itemsPerPage);\r\n\r\n    return Math.max(totalPages || 0, 1);\r\n  }\r\n}\r\n","<ul class=\"pager\">\r\n  <li [class.disabled]=\"noPrevious()\" [class.previous]=\"align\"\r\n      [ngClass]=\"{'pull-left': align, 'float-left': align}\"\r\n      class=\"{{ pageBtnClass }}\">\r\n    <a href (click)=\"selectPage(page - 1, $event)\">{{ getText('previous') }}</a>\r\n  </li>\r\n  <li [class.disabled]=\"noNext()\" [class.next]=\"align\"\r\n      [ngClass]=\"{'pull-right': align, 'float-right': align}\"\r\n      class=\"{{ pageBtnClass }}\">\r\n    <a href (click)=\"selectPage(page + 1, $event)\">{{ getText('next') }}</a>\r\n  </li>\r\n</ul>\r\n","<ul class=\"pagination\" [ngClass]=\"classMap\">\r\n  <li class=\"pagination-first page-item\"\r\n      *ngIf=\"boundaryLinks\"\r\n      [class.disabled]=\"noPrevious() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(1, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customFirstTemplate || defaultFirstTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noPrevious() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li class=\"pagination-prev page-item\"\r\n      *ngIf=\"directionLinks\"\r\n      [class.disabled]=\"noPrevious() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(page - 1, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customPreviousTemplate || defaultPreviousTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noPrevious() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li *ngFor=\"let pg of pages\"\r\n      [class.active]=\"pg.active\"\r\n      [class.disabled]=\"disabled && !pg.active\"\r\n      class=\"pagination-page page-item\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(pg.number, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customPageTemplate || defaultPageTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pg, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li class=\"pagination-next page-item\"\r\n      *ngIf=\"directionLinks\"\r\n      [class.disabled]=\"noNext() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(page + 1, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customNextTemplate || defaultNextTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noNext() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li class=\"pagination-last page-item\"\r\n      *ngIf=\"boundaryLinks\"\r\n      [class.disabled]=\"noNext() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(totalPages, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customLastTemplate || defaultLastTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noNext() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n</ul>\r\n\r\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\r\n\r\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\r\n\r\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\r\n\r\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\r\n\r\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Provider, TemplateRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PaginationConfig } from './pagination.config';\r\nimport { ConfigModel, PagesModel, PaginationLinkContext, PaginationNumberLinkContext } from './models';\r\n\r\nexport interface PageChangedEvent {\r\n  itemsPerPage: number;\r\n  page: number;\r\n}\r\n\r\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => PaginationComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'pagination',\r\n  templateUrl: './pagination.component.html',\r\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\r\n  config: ConfigModel;\r\n  /** if `true` aligns each link to the sides of pager */\r\n  @Input() align: boolean;\r\n  /** limit number for page links in pager */\r\n  @Input() maxSize: number;\r\n  /** if false first and last buttons will be hidden */\r\n  @Input() boundaryLinks: boolean;\r\n  /** if false previous and next buttons will be hidden */\r\n  @Input() directionLinks: boolean;\r\n  // labels\r\n  /** first button text */\r\n  @Input() firstText: string;\r\n  /** previous button text */\r\n  @Input() previousText: string;\r\n  /** next button text */\r\n  @Input() nextText: string;\r\n  /** last button text */\r\n  @Input() lastText: string;\r\n  /** if true current page will in the middle of pages list */\r\n  @Input() rotate: boolean;\r\n  // css\r\n  /** add class to <code><li\\></code> */\r\n  @Input() pageBtnClass: string;\r\n  /** if true pagination component will be disabled */\r\n  @Input() disabled: boolean;\r\n  /** custom template for page link */\r\n  @Input() customPageTemplate: TemplateRef<PaginationNumberLinkContext>;\r\n  /** custom template for next link */\r\n  @Input() customNextTemplate: TemplateRef<PaginationLinkContext>;\r\n  /** custom template for previous link */\r\n  @Input() customPreviousTemplate: TemplateRef<PaginationLinkContext>;\r\n  /** custom template for first link */\r\n  @Input() customFirstTemplate: TemplateRef<PaginationLinkContext>;\r\n  /** custom template for last link */\r\n  @Input() customLastTemplate: TemplateRef<PaginationLinkContext>;\r\n\r\n  /** fired when total pages count changes, $event:number equals to total pages count */\r\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\r\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object\r\n   * with current page index and number of items per page\r\n   */\r\n  @Output()\r\n  pageChanged = new EventEmitter<PageChangedEvent>();\r\n\r\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n  @Input()\r\n  get itemsPerPage(): number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  set itemsPerPage(v: number) {\r\n    this._itemsPerPage = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  /** total number of items in all pages */\r\n  @Input()\r\n  get totalItems(): number {\r\n    return this._totalItems;\r\n  }\r\n\r\n  set totalItems(v: number) {\r\n    this._totalItems = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return this._totalPages;\r\n  }\r\n\r\n  set totalPages(v: number) {\r\n    this._totalPages = v;\r\n    this.numPages.emit(v);\r\n    if (this.inited) {\r\n      this.selectPage(this.page);\r\n    }\r\n  }\r\n\r\n  set page(value: number) {\r\n    const _previous = this._page;\r\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\r\n    this.changeDetection.markForCheck();\r\n\r\n    if (_previous === this._page || typeof _previous === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    this.pageChanged.emit({\r\n      page: this._page,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  onChange = Function.prototype;\r\n  onTouched = Function.prototype;\r\n\r\n  classMap: string;\r\n  pages: PagesModel[];\r\n\r\n  protected _itemsPerPage: number;\r\n  protected _totalItems: number;\r\n  protected _totalPages: number;\r\n  protected inited = false;\r\n  protected _page = 1;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    paginationConfig: PaginationConfig,\r\n    private changeDetection: ChangeDetectorRef\r\n  ) {\r\n    this.elementRef = elementRef;\r\n    if (!this.config) {\r\n      this.configureOptions(paginationConfig.main);\r\n    }\r\n  }\r\n\r\n  configureOptions(config: ConfigModel): void {\r\n    this.config = Object.assign({}, config);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof window !== 'undefined') {\r\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n    }\r\n    // watch for maxSize\r\n    this.maxSize =\r\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\r\n    this.rotate =\r\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\r\n    this.boundaryLinks =\r\n      typeof this.boundaryLinks !== 'undefined'\r\n        ? this.boundaryLinks\r\n        : this.config.boundaryLinks;\r\n    this.directionLinks =\r\n      typeof this.directionLinks !== 'undefined'\r\n        ? this.directionLinks\r\n        : this.config.directionLinks;\r\n    this.pageBtnClass =\r\n      typeof this.pageBtnClass !== 'undefined'\r\n        ? this.pageBtnClass\r\n        : this.config.pageBtnClass;\r\n\r\n    // base class\r\n    this.itemsPerPage =\r\n      typeof this.itemsPerPage !== 'undefined'\r\n        ? this.itemsPerPage\r\n        : this.config.itemsPerPage;\r\n    this.totalPages = this.calculateTotalPages();\r\n    // this class\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n    this.inited = true;\r\n  }\r\n\r\n  writeValue(value: number): void {\r\n    this.page = value;\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n  }\r\n\r\n  getText(key: string): string {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\r\n  }\r\n\r\n  noPrevious(): boolean {\r\n    return this.page === 1;\r\n  }\r\n\r\n  noNext(): boolean {\r\n    return this.page === this.totalPages;\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  selectPage(page: number, event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (!this.disabled) {\r\n      if (event && event.target) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const target: any = event.target;\r\n        target.blur();\r\n      }\r\n      this.writeValue(page);\r\n      this.onChange(this.page);\r\n    }\r\n  }\r\n\r\n  // Create page object used in template\r\n  protected makePage(\r\n    num: number,\r\n    text: string,\r\n    active: boolean\r\n  ): { number: number; text: string; active: boolean } {\r\n    return { text, number: num, active };\r\n  }\r\n\r\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\r\n    const pages: PagesModel[] = [];\r\n\r\n    // Default page limits\r\n    let startPage = 1;\r\n    let endPage = totalPages;\r\n    const isMaxSized =\r\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n\r\n    // recompute if maxSize\r\n    if (isMaxSized) {\r\n      if (this.rotate) {\r\n        // Current page is displayed in the middle of the visible ones\r\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n        endPage = startPage + this.maxSize - 1;\r\n\r\n        // Adjust if limit is exceeded\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - this.maxSize + 1;\r\n        }\r\n      } else {\r\n        // Visible pages are paginated with maxSize\r\n        startPage =\r\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\r\n\r\n        // Adjust last page if limit is exceeded\r\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n      }\r\n    }\r\n\r\n    // Add page number links\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      const page = this.makePage(num, num.toString(), num === currentPage);\r\n      pages.push(page);\r\n    }\r\n\r\n    // Add links to move between page sets\r\n    if (isMaxSized && !this.rotate) {\r\n      if (startPage > 1) {\r\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\r\n        pages.unshift(previousPageSet);\r\n      }\r\n\r\n      if (endPage < totalPages) {\r\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\r\n        pages.push(nextPageSet);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  // base class\r\n  protected calculateTotalPages(): number {\r\n    const totalPages =\r\n      this.itemsPerPage < 1\r\n        ? 1\r\n        : Math.ceil(this.totalItems / this.itemsPerPage);\r\n\r\n    return Math.max(totalPages || 0, 1);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { PagerComponent } from './pager.component';\r\nimport { PaginationComponent } from './pagination.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PagerComponent, PaginationComponent],\r\n  exports: [PagerComponent, PaginationComponent]\r\n})\r\nexport class PaginationModule {\r\n  static forRoot(): ModuleWithProviders<PaginationModule> {\r\n    return { ngModule: PaginationModule, providers: [] };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Injectable","NG_VALUE_ACCESSOR","forwardRef","EventEmitter","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵclassMap","i0.ɵɵclassProp","i0.ɵɵproperty","i0.ɵɵtextInterpolate","Component","Input","Output","i0.ɵɵelementContainer","i0.ɵɵtemplate","CommonModule","NgModule"],"mappings":"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"}