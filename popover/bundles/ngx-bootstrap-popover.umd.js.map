{"version":3,"file":"ngx-bootstrap-popover.umd.js","sources":["../../../../src/popover/popover.config.ts","../../../../src/popover/popover-container.component.html","../../../../src/popover/popover-container.component.ts","../../../../src/popover/popover.directive.ts","../../../../src/popover/popover.module.ts","../../../../src/popover/ngx-bootstrap-popover.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the Popover directive.\r\n * You can inject this service, typically in your root component, and customize\r\n * the values of its properties in order to provide default values for all the\r\n * popovers used in the application.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PopoverConfig {\r\n  /** sets disable adaptive position */\r\n  adaptivePosition = true;\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\r\n   */\r\n  placement = 'top';\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  triggers = 'click';\r\n\r\n  outsideClick = false;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   */\r\n  container: string;\r\n  /** delay before showing the tooltip */\r\n  delay = 0;\r\n}\r\n","<div class=\"popover-arrow arrow\"></div>\r\n<h3 class=\"popover-title popover-header\" *ngIf=\"title\">{{ title }}</h3>\r\n<div class=\"popover-content popover-body\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\r\nimport { PopoverConfig } from './popover.config';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n@Component({\r\n  selector: 'popover-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: {\r\n    '[attr.id]': 'popoverId',\r\n    '[class]':\r\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\r\n    '[class.show]': '!isBs3',\r\n    '[class.bs3]': 'isBs3',\r\n    role: 'tooltip',\r\n    style: 'display:block;'\r\n  },\r\n  styles: [\r\n    `\r\n    :host.bs3.popover-top {\r\n      margin-bottom: 10px;\r\n    }\r\n    :host.bs3.popover.top>.arrow {\r\n      margin-left: -2px;\r\n    }\r\n    :host.bs3.popover.top {\r\n      margin-bottom: 10px;\r\n    }\r\n    :host.popover.bottom>.arrow {\r\n      margin-left: -4px;\r\n    }\r\n    :host.bs3.bs-popover-left {\r\n      margin-right: .5rem;\r\n    }\r\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\r\n      margin: .3rem 0;\r\n    }\r\n    `\r\n  ],\r\n  templateUrl: './popover-container.component.html'\r\n})\r\nexport class PopoverContainerComponent {\r\n  @Input() placement: string;\r\n  @Input() title: string;\r\n  containerClass: string;\r\n  popoverId: string;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  constructor(config: PopoverConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n}\r\n","import {\r\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\r\n  Renderer2, TemplateRef, ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverConfig } from './popover.config';\r\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { PopoverContainerComponent } from './popover-container.component';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\nimport { timer } from 'rxjs';\r\nimport { parseTriggers, Trigger } from 'ngx-bootstrap/utils';\r\n\r\nlet id = 0;\r\n\r\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\r\n@Directive({selector: '[popover]', exportAs: 'bs-popover'})\r\nexport class PopoverDirective implements OnInit, OnDestroy {\r\n  /** unique id popover - use for aria-describedby */\r\n  popoverId = id++;\r\n  /** sets disable adaptive position */\r\n  @Input() adaptivePosition: boolean;\r\n  /**\r\n   * Content to be displayed as popover.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  @Input() popover: string | TemplateRef<any>;\r\n  /**\r\n   * Context to be used if popover is a template.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  @Input() popoverContext: any;\r\n  /**\r\n   * Title of a popover.\r\n   */\r\n  @Input() popoverTitle: string;\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto' | 'top left' | 'top right' |\r\n    'right top' | 'right bottom' | 'bottom right' | 'bottom left' | 'left bottom' | 'left top';\r\n  /**\r\n   * Close popover on outside click\r\n   */\r\n  @Input() outsideClick = false;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * Css class for popover container\r\n   */\r\n  @Input() containerClass = '';\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._popover.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delay before showing the tooltip\r\n   */\r\n  @Input() delay: number;\r\n\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n  @Output() onShown: EventEmitter<unknown>;\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<unknown>;\r\n\r\n  protected _popoverCancelShowFn: () => void;\r\n\r\n  protected _delayTimeoutId?: number;\r\n\r\n  private _popover: ComponentLoader<PopoverContainerComponent>;\r\n  private _isInited = false;\r\n  private _ariaDescribedby: string;\r\n\r\n  constructor(\r\n    _config: PopoverConfig,\r\n    private _elementRef: ElementRef,\r\n    private _renderer: Renderer2,\r\n    _viewContainerRef: ViewContainerRef,\r\n    cis: ComponentLoaderFactory,\r\n    private _positionService: PositioningService\r\n  ) {\r\n    this._popover = cis\r\n      .createLoader<PopoverContainerComponent>(\r\n        _elementRef,\r\n        _viewContainerRef,\r\n        _renderer\r\n      )\r\n      .provide({provide: PopoverConfig, useValue: _config});\r\n\r\n    Object.assign(this, _config);\r\n\r\n    this.onShown = this._popover.onShown;\r\n    this.onHidden = this._popover.onHidden;\r\n\r\n    // fix: no focus on button on Mac OS #1795\r\n    if (typeof window !== 'undefined') {\r\n      _elementRef.nativeElement.addEventListener('click', function () {\r\n        try {\r\n          _elementRef.nativeElement.focus();\r\n        } catch (err) {\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set attribute aria-describedBy for element directive and\r\n   * set id for the popover\r\n   */\r\n  setAriaDescribedBy(): void {\r\n    this._ariaDescribedby = this.isOpen ? `ngx-popover-${this.popoverId}` : null;\r\n    if (this._ariaDescribedby) {\r\n      this._popover.instance.popoverId = this._ariaDescribedby;\r\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\r\n    } else {\r\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  show(): void {\r\n    if (this._popover.isShown || !this.popover || this._delayTimeoutId) {\r\n      return;\r\n    }\r\n\r\n    this._positionService.setOptions({\r\n      modifiers: {\r\n        flip: {\r\n          enabled: this.adaptivePosition\r\n        },\r\n        preventOverflow: {\r\n          enabled: this.adaptivePosition\r\n        }\r\n      }\r\n    });\r\n\r\n    const showPopover = () => {\r\n      if (this._delayTimeoutId) {\r\n        this._delayTimeoutId = undefined;\r\n      }\r\n\r\n      this._popover\r\n        .attach(PopoverContainerComponent)\r\n        .to(this.container)\r\n        .position({attachment: this.placement})\r\n        .show({\r\n          content: this.popover,\r\n          context: this.popoverContext,\r\n          placement: this.placement,\r\n          title: this.popoverTitle,\r\n          containerClass: this.containerClass\r\n        });\r\n\r\n      if (!this.adaptivePosition) {\r\n        this._positionService.calcPosition();\r\n        this._positionService.deletePositionElement(this._popover._componentRef.location);\r\n      }\r\n\r\n      this.isOpen = true;\r\n      this.setAriaDescribedBy();\r\n    };\r\n\r\n    const cancelDelayedTooltipShowing = () => {\r\n      if (this._popoverCancelShowFn) {\r\n        this._popoverCancelShowFn();\r\n      }\r\n    };\r\n\r\n    if (this.delay) {\r\n      const _timer = timer(this.delay).subscribe(() => {\r\n        showPopover();\r\n        cancelDelayedTooltipShowing();\r\n      });\r\n\r\n      if (this.triggers) {\r\n        parseTriggers(this.triggers)\r\n          .forEach((trigger: Trigger) => {\r\n            this._popoverCancelShowFn = this._renderer.listen(\r\n              this._elementRef.nativeElement,\r\n              trigger.close,\r\n              () => {\r\n                _timer.unsubscribe();\r\n                cancelDelayedTooltipShowing();\r\n              }\r\n            );\r\n          });\r\n      }\r\n    } else {\r\n      showPopover();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  hide(): void {\r\n    if (this._delayTimeoutId) {\r\n      clearTimeout(this._delayTimeoutId);\r\n      this._delayTimeoutId = undefined;\r\n    }\r\n\r\n    if (this.isOpen) {\r\n      this._popover.hide();\r\n      this.setAriaDescribedBy();\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s popover. This is considered a “manual” triggering of\r\n   * the popover.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // fix: seems there are an issue with `routerLinkActive`\r\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\r\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\r\n    if (this._isInited) {\r\n      return;\r\n    }\r\n    this._isInited = true;\r\n\r\n    this._popover.listen({\r\n      triggers: this.triggers,\r\n      outsideClick: this.outsideClick,\r\n      show: () => this.show(),\r\n      hide: () => this.hide()\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._popover.dispose();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\nimport { PopoverDirective } from './popover.directive';\r\nimport { PopoverContainerComponent } from './popover-container.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PopoverDirective, PopoverContainerComponent],\r\n  exports: [PopoverDirective],\r\n  entryComponents: [PopoverContainerComponent]\r\n})\r\nexport class PopoverModule {\r\n  static forRoot(): ModuleWithProviders<PopoverModule> {\r\n    return {\r\n      ngModule: PopoverModule,\r\n      providers: [ComponentLoaderFactory, PositioningService]\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Injectable","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","isBs3","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵprojection","i0.ɵɵproperty","Component","ChangeDetectionStrategy","Input","timer","parseTriggers","Directive","Output","ComponentLoaderFactory","PositioningService","CommonModule","NgModule"],"mappings":"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"}