{"version":3,"file":"preventOverflow.js","sourceRoot":"","sources":["../../../../../src/positioning/modifiers/preventOverflow.ts"],"names":[],"mappings":"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","sourcesContent":["import { getBoundaries, isModifierEnabled } from '../utils';\r\nimport { Data } from '../models';\r\n\r\nexport function preventOverflow(data: Data) {\r\n\r\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\r\n    return data;\r\n  }\r\n\r\n  // NOTE: DOM access here\r\n  // resets the target Offsets's position so that the document size can be calculated excluding\r\n  // the size of the targetOffsets element itself\r\n  const transformProp = 'transform';\r\n  const targetStyles = data.instance.target.style; // assignment to help minification\r\n  const { top, left, [transformProp]: transform } = targetStyles;\r\n  targetStyles.top = '';\r\n  targetStyles.left = '';\r\n  targetStyles[transformProp] = '';\r\n\r\n  const boundaries = getBoundaries(\r\n    data.instance.target,\r\n    data.instance.host,\r\n    0, // padding\r\n    data.options.modifiers.preventOverflow.boundariesElement || 'scrollParent',\r\n    false // positionFixed\r\n  );\r\n\r\n  // NOTE: DOM access here\r\n  // restores the original style properties after the offsets have been computed\r\n  targetStyles.top = top;\r\n  targetStyles.left = left;\r\n  targetStyles[transformProp] = transform;\r\n\r\n  const order = ['left', 'right', 'top', 'bottom'];\r\n\r\n  const check = {\r\n    primary(placement: string) {\r\n      let value = data.offsets.target[placement];\r\n      // options.escapeWithReference\r\n      if (data.offsets.target[placement] < boundaries[placement]) {\r\n        value = Math.max(data.offsets.target[placement], boundaries[placement]);\r\n      }\r\n\r\n      return { [placement]: value };\r\n    },\r\n    secondary(placement: string) {\r\n      const mainSide = placement === 'right' ? 'left' : 'top';\r\n      let value = data.offsets.target[mainSide];\r\n      // escapeWithReference\r\n      if (data.offsets.target[placement] > boundaries[placement]) {\r\n        value = Math.min(\r\n          data.offsets.target[mainSide],\r\n          boundaries[placement] -\r\n          (placement === 'right' ? data.offsets.target.width : data.offsets.target.height)\r\n        );\r\n      }\r\n\r\n      return { [mainSide]: value };\r\n    }\r\n  };\r\n\r\n  let side: string;\r\n\r\n  order.forEach(placement => {\r\n    side = ['left', 'top']\r\n      .indexOf(placement) !== -1\r\n      ? 'primary'\r\n      : 'secondary';\r\n\r\n    data.offsets.target = {\r\n      ...data.offsets.target,\r\n      ...check[side](placement)\r\n    };\r\n\r\n  });\r\n\r\n  return data;\r\n}\r\n"]}