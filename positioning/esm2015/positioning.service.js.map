{"version":3,"file":"positioning.service.js","sourceRoot":"","sources":["../../../../src/positioning/positioning.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ElementRef, RendererFactory2, Inject, PLATFORM_ID, NgZone } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport { positionElements } from './ng-positioning';\r\n\r\nimport { fromEvent, merge, of, animationFrameScheduler, Subject, Observable } from 'rxjs';\r\nimport { Options } from './models';\r\n\r\n\r\nexport interface PositioningOptions {\r\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\r\n  element?: HTMLElement | ElementRef | string;\r\n\r\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\r\n  target?: HTMLElement | ElementRef | string;\r\n\r\n  /**\r\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\r\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\r\n   * not yet supported:\r\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\r\n   * - horiz-attachment can be any of 'left', 'center', 'right'\r\n   */\r\n  attachment?: string;\r\n\r\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\r\n   * `targetAttachment` will assume the mirror image of `attachment`.\r\n   */\r\n  targetAttachment?: string;\r\n\r\n  /** A string of the form 'vert-offset horiz-offset'\r\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\r\n   */\r\n  offset?: string;\r\n\r\n  /** A string similar to `offset`, but referring to the offset of the target */\r\n  targetOffset?: string;\r\n\r\n  /** If true component will be attached to body */\r\n  appendToBody?: boolean;\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PositioningService {\r\n  private options: Options;\r\n  private update$$ = new Subject<null>();\r\n  private positionElements = new Map();\r\n  private triggerEvent$: Observable<number|Event>;\r\n  private isDisabled = false;\r\n\r\n  constructor(\r\n    ngZone: NgZone,\r\n    rendererFactory: RendererFactory2,\r\n    @Inject(PLATFORM_ID) platformId: number\r\n  ) {\r\n\r\n    if (isPlatformBrowser(platformId)) {\r\n      ngZone.runOutsideAngular(() => {\r\n        this.triggerEvent$ = merge(\r\n          fromEvent(window, 'scroll', { passive: true }),\r\n          fromEvent(window, 'resize', { passive: true }),\r\n                    of(0, animationFrameScheduler),\r\n          this.update$$\r\n        );\r\n\r\n        this.triggerEvent$.subscribe(() => {\r\n          if (this.isDisabled) {\r\n            return;\r\n          }\r\n\r\n          this.positionElements\r\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .forEach((positionElement: any) => {\r\n              positionElements(\r\n                _getHtmlElement(positionElement.target),\r\n                _getHtmlElement(positionElement.element),\r\n                positionElement.attachment,\r\n                positionElement.appendToBody,\r\n                this.options,\r\n                rendererFactory.createRenderer(null, null)\r\n              );\r\n            });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  position(options: PositioningOptions): void {\r\n    this.addPositionElement(options);\r\n  }\r\n\r\n  get event$(): Observable<number|Event> {\r\n    return this.triggerEvent$;\r\n  }\r\n\r\n  disable(): void {\r\n    this.isDisabled = true;\r\n  }\r\n\r\n  enable(): void {\r\n    this.isDisabled = false;\r\n  }\r\n\r\n  addPositionElement(options: PositioningOptions): void {\r\n    this.positionElements.set(_getHtmlElement(options.element), options);\r\n  }\r\n\r\n  calcPosition(): void {\r\n    this.update$$.next();\r\n  }\r\n\r\n  deletePositionElement(elRef: ElementRef): void {\r\n    this.positionElements.delete(_getHtmlElement(elRef));\r\n  }\r\n\r\n  setOptions(options: Options) {\r\n    this.options = options;\r\n  }\r\n}\r\n\r\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\r\n  // it means that we got a selector\r\n  if (typeof element === 'string') {\r\n    return document.querySelector(element);\r\n  }\r\n\r\n  if (element instanceof ElementRef) {\r\n    return element.nativeElement;\r\n  }\r\n\r\n  return element;\r\n}\r\n"]}