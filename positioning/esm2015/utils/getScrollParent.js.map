{"version":3,"file":"getScrollParent.js","sourceRoot":"","sources":["../../../../../src/positioning/utils/getScrollParent.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,qBAAqB;AACrB,8DAA8D;AAC9D,MAAM,UAAU,eAAe,CAAC,OAAY;IAC1C,iFAAiF;IACjF,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;IAED,QAAQ,OAAO,CAAC,QAAQ,EAAE;QACxB,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACT,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC;QACpC,KAAK,WAAW;YACd,OAAO,OAAO,CAAC,IAAI,CAAC;QACtB,QAAQ;KACT;IAED,4DAA4D;IAC5D,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,wBAAwB,CAAC,OAAO,CAAC,CAAC;IAC7E,IAAI,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE;QAC1F,OAAO,OAAO,CAAC;KAChB;IAED,OAAO,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AACjD,CAAC","sourcesContent":["/**\r\n * Returns the scrolling parent of the given element\r\n */\r\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\r\nimport { getParentNode } from './getParentNode';\r\n\r\n// todo: valorkin fix\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function getScrollParent(element: any): any {\r\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\r\n  if (!element) {\r\n    return document.body;\r\n  }\r\n\r\n  switch (element.nodeName) {\r\n    case 'HTML':\r\n    case 'BODY':\r\n      return element.ownerDocument.body;\r\n    case '#document':\r\n      return element.body;\r\n    default:\r\n  }\r\n\r\n  // Firefox want us to check `-x` and `-y` variations as well\r\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\r\n  if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\r\n    return element;\r\n  }\r\n\r\n  return getScrollParent(getParentNode(element));\r\n}\r\n"]}