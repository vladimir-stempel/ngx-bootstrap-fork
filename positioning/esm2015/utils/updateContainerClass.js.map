{"version":3,"file":"updateContainerClass.js","sourceRoot":"","sources":["../../../../../src/positioning/utils/updateContainerClass.ts"],"names":[],"mappings":"AAMA,MAAM,UAAU,oBAAoB,CAAC,IAAU,EAAE,QAAoB;IACnE,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAEpC,IAAI,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC;IAEtC,IAAI,IAAI,CAAC,aAAa,EAAE;QACtB,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,kBAAkB,EAAE,cAAc,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAC5F,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,kBAAkB,EAAE,cAAc,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAC5F,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAEzE,IAAI,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7F,cAAc,IAAI,eAAe,CAAC;SACnC;QAED,IAAI,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAK,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;YAC9F,cAAc,IAAI,eAAe,CAAC;SACnC;KACF;IAED,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,wBAAwB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAErG,IAAI,QAAQ,EAAE;QACZ,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAEvD,OAAO;KACR;IAED,MAAM,CAAC,SAAS,GAAG,cAAc,CAAC;AACpC,CAAC","sourcesContent":["/**\r\n * Update class for the given popper\r\n */\r\nimport { Renderer2 } from '@angular/core';\r\nimport { Data } from '../models';\r\n\r\nexport function updateContainerClass(data: Data, renderer?: Renderer2): void {\r\n  const target = data.instance.target;\r\n\r\n  let containerClass = target.className;\r\n\r\n  if (data.placementAuto) {\r\n    containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`);\r\n    containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`);\r\n    containerClass = containerClass.replace(/\\sauto/g, ` ${data.placement}`);\r\n\r\n    if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\r\n      containerClass += ' popover-auto';\r\n    }\r\n\r\n    if (containerClass.indexOf('tooltip') !== -1  && containerClass.indexOf('tooltip-auto') === -1) {\r\n      containerClass += ' tooltip-auto';\r\n    }\r\n  }\r\n\r\n  containerClass = containerClass.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`);\r\n\r\n  if (renderer) {\r\n    renderer.setAttribute(target, 'class', containerClass);\r\n\r\n    return;\r\n  }\r\n\r\n  target.className = containerClass;\r\n}\r\n"]}