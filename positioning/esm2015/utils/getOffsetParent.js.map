{"version":3,"file":"getOffsetParent.js","sourceRoot":"","sources":["../../../../../src/positioning/utils/getOffsetParent.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B,MAAM,UAAU,eAAe,CAAC,OAAoB;IAClD,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,QAAQ,CAAC,eAAe,CAAC;KACjC;IAED,MAAM,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAEvD,0BAA0B;IAC1B,IAAI,YAAY,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC;IAEzC,wDAAwD;IACxD,IAAI,OAA2B,CAAC;IAEhC,OAAO,YAAY,KAAK,cAAc;WAC5B,OAAO,CAAC,kBAAkB;WAC1B,OAAO,KAAK,OAAO,CAAC,kBAAkB,EAAE;QAE9C,qBAAqB;QACrB,OAAO,GAAG,OAAO,CAAC,kBAAiC,CAAC;QACpD,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;KACrC;IAEH,MAAM,QAAQ,GAAG,YAAY,IAAI,YAAY,CAAC,QAAQ,CAAC;IAEvD,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;QAC3D,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC;KACnF;IAED,gEAAgE;IAChE,IACE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3D,wBAAwB,CAAC,YAAY,EAAE,UAAU,CAAC,KAAK,QAAQ,EAC/D;QACA,OAAO,eAAe,CAAC,YAA2B,CAAC,CAAC;KACrD;IAED,OAAO,YAA2B,CAAC;AACrC,CAAC","sourcesContent":["/**\r\n * Returns the offset parent of the given element\r\n */\r\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\r\nimport { isIE } from './isIE';\r\n\r\nexport function getOffsetParent(element: HTMLElement): HTMLElement {\r\n  if (!element) {\r\n    return document.documentElement;\r\n  }\r\n\r\n  const noOffsetParent = isIE(10) ? document.body : null;\r\n\r\n  // NOTE: 1 DOM access here\r\n  let offsetParent = element?.offsetParent;\r\n\r\n  // Skip hidden elements which don't have an offsetParent\r\n  let sibling: HTMLElement | null;\r\n\r\n  while (offsetParent === noOffsetParent\r\n         && element.nextElementSibling\r\n         && sibling !== element.nextElementSibling) {\r\n\r\n      // todo: valorkin fix\r\n      sibling = element.nextElementSibling as HTMLElement;\r\n      offsetParent = sibling.offsetParent;\r\n    }\r\n\r\n  const nodeName = offsetParent && offsetParent.nodeName;\r\n\r\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\r\n    return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\r\n  }\r\n\r\n  // .offsetParent will return the closest TH, TD or TABLE in case\r\n  if (\r\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\r\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\r\n  ) {\r\n    return getOffsetParent(offsetParent as HTMLElement);\r\n  }\r\n\r\n  return offsetParent as HTMLElement;\r\n}\r\n"]}