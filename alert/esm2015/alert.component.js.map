{"version":3,"file":"alert.component.js","sourceRoot":"","sources":["../../../../src/alert/alert.component.ts","../../../../src/alert/alert.component.html"],"names":[],"mappings":";AAAA,OAAO,EACL,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;;;;;;ICPzC,iCAAyE;IAAlB,oMAAiB;IACtE,+BAAyB;IAAA,sBAAO;IAAA,iBAAO;IACvC,+BAAsB;IAAA,qBAAK;IAAA,iBAAO;IACpC,iBAAS;;;IALb,8BAAsE;IACpE,6FAKc;IACd,kBAAyB;IAC3B,iBAAM;;;IARD,2CAA+B;IAAc,wCAAmB;IACtD,eAAoB;IAApB,yCAAoB;;;ADerC,MAAM,OAAO,cAAc;IAyBzB,YAAY,OAAoB,EAAU,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QAxB5E;;;WAGG;QACM,SAAI,GAAG,SAAS,CAAC;QAC1B,gDAAgD;QACvB,gBAAW,GAAG,KAAK,CAAC;QAI7C,uBAAuB;QACd,WAAM,GAAG,IAAI,CAAC;QAEvB;;WAEG;QACO,YAAO,GAAG,IAAI,YAAY,EAAkB,CAAC;QACvD,mFAAmF;QACzE,aAAQ,GAAG,IAAI,YAAY,EAAkB,CAAC;QAGxD,YAAO,GAAG,EAAE,CAAC;QACb,sBAAiB,GAAG,IAAI,YAAY,EAAW,CAAC;QAG9C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAC,wBAAwB,EAAE,EAAE;YAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3D,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,wEAAwE;YACxE,UAAU,CACR,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAClB,QAAQ,CAAC,IAAI,CAAC,gBAA0B,EAAE,EAAE,CAAC,CAC9C,CAAC;SACH;IACH,CAAC;IAED,6EAA6E;IAC7E,gDAAgD;IAChD;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;;4EAzDU,cAAc;mDAAd,cAAc;;QCjB3B,+EAUc;;QAVD,iCAAe;;ADwBD;IAAxB,QAAQ,EAAE;;mDAAkC;uFAPlC,cAAc;cAL1B,SAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,wBAAwB;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;8FAMU,IAAI;kBAAZ,KAAK;YAEmB,WAAW;kBAArB,KAAK;YAEX,gBAAgB;kBAAxB,KAAK;YAGG,MAAM;kBAAd,KAAK;YAKI,OAAO;kBAAhB,MAAM;YAEG,QAAQ;kBAAjB,MAAM","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { AlertConfig } from './alert.config';\r\nimport { OnChange } from 'ngx-bootstrap/utils';\r\n\r\n@Component({\r\n  selector: 'alert,bs-alert',\r\n  templateUrl: './alert.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  /** Alert type.\r\n   * Provides one of four bootstrap supported contextual classes:\r\n   * `success`, `info`, `warning` and `danger`\r\n   */\r\n  @Input() type = 'warning';\r\n  /** If set, displays an inline \"Close\" button */\r\n  @OnChange()   @Input()   dismissible = false;\r\n  /** Number in milliseconds, after which alert will be closed */\r\n  @Input() dismissOnTimeout: number | string;\r\n\r\n  /** Is alert visible */\r\n  @Input() isOpen = true;\r\n\r\n  /** This event fires immediately after close instance method is called,\r\n   * $event is an instance of Alert component.\r\n   */\r\n  @Output() onClose = new EventEmitter<AlertComponent>();\r\n  /** This event fires when alert closed, $event is an instance of Alert component */\r\n  @Output() onClosed = new EventEmitter<AlertComponent>();\r\n\r\n\r\n  classes = '';\r\n  dismissibleChange = new EventEmitter<boolean>();\r\n\r\n  constructor(_config: AlertConfig, private changeDetection: ChangeDetectorRef) {\r\n    Object.assign(this, _config);\r\n    this.dismissibleChange.subscribe((/*dismissible: boolean*/) => {\r\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\r\n      this.changeDetection.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.dismissOnTimeout) {\r\n      // if dismissOnTimeout used as attr without binding, it will be a string\r\n      setTimeout(\r\n        () => this.close(),\r\n        parseInt(this.dismissOnTimeout as string, 10)\r\n      );\r\n    }\r\n  }\r\n\r\n  // todo: animation ` If the .fade and .in classes are present on the element,\r\n  // the alert will fade out before it is removed`\r\n  /**\r\n   * Closes an alert by removing it from the DOM.\r\n   */\r\n  close(): void {\r\n    if (!this.isOpen) {\r\n      return;\r\n    }\r\n\r\n    this.onClose.emit(this);\r\n    this.isOpen = false;\r\n    this.changeDetection.markForCheck();\r\n    this.onClosed.emit(this);\r\n  }\r\n}\r\n","<ng-template [ngIf]=\"isOpen\">\r\n  <div [class]=\"'alert alert-' + type\" role=\"alert\" [ngClass]=\"classes\">\r\n    <ng-template [ngIf]=\"dismissible\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        <span class=\"sr-only\">Close</span>\r\n      </button>\r\n    </ng-template>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</ng-template>\r\n"]}