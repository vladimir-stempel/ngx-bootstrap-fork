{"version":3,"file":"tooltip-container.component.js","sourceRoot":"","sources":["../../../../src/tooltip/tooltip-container.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,SAAS,EACT,uBAAuB,EACxB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;;;;AAuC5C,MAAM,OAAO,yBAAyB;IAWpC,YAAY,MAAqB;QAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAND,IAAI,KAAK;QACP,OAAO,KAAK,EAAE,CAAC;IACjB,CAAC;IAMD,eAAe;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC;QAElD,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;SAC3B;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;SAC3C;IACH,CAAC;;kGA5BU,yBAAyB;8DAAzB,yBAAyB;;;;;;QAJlC,yBAAuC;QACvC,8BAA2B;QAAA,kBAAyB;QAAA,iBAAM;;uFAGjD,yBAAyB;cArCrC,SAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,qEAAqE;gBACrE,IAAI,EAAE;oBACJ,SAAS,EACP,8GAA8G;oBAChH,cAAc,EAAE,QAAQ;oBACxB,aAAa,EAAE,OAAO;oBACtB,WAAW,EAAE,SAAS;oBACtB,IAAI,EAAE,SAAS;iBAChB;gBACD,MAAM,EAAE;oBACN;;;;;;;;;;;;;;;;;GAiBD;iBACA;gBACD,QAAQ,EAAE;;;KAGP;aACJ","sourcesContent":["import {\r\n  AfterViewInit,\r\n  Component,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n@Component({\r\n  selector: 'bs-tooltip-container',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: {\r\n    '[class]':\r\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\r\n    '[class.show]': '!isBs3',\r\n    '[class.bs3]': 'isBs3',\r\n    '[attr.id]': 'this.id',\r\n    role: 'tooltip'\r\n  },\r\n  styles: [\r\n    `\r\n    :host.tooltip {\r\n      display: block;\r\n      pointer-events: none;\r\n    }\r\n    :host.bs3.tooltip.top>.arrow {\r\n      margin-left: -2px;\r\n    }\r\n    :host.bs3.tooltip.bottom {\r\n      margin-top: 0px;\r\n    }\r\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\r\n      margin: 0px;\r\n    }\r\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\r\n      margin: .3rem 0;\r\n    }\r\n  `\r\n  ],\r\n  template: `\r\n    <div class=\"tooltip-arrow arrow\"></div>\r\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\r\n    `\r\n})\r\nexport class TooltipContainerComponent implements AfterViewInit {\r\n  classMap: { [key: string]: boolean };\r\n  placement: string;\r\n  containerClass: string;\r\n  animation: boolean;\r\n  id: string;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  constructor(config: TooltipConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.classMap = { in: false, fade: false };\r\n    this.classMap[this.placement] = true;\r\n    this.classMap[`tooltip-${this.placement}`] = true;\r\n\r\n    this.classMap.in = true;\r\n    if (this.animation) {\r\n      this.classMap.fade = true;\r\n    }\r\n\r\n    if (this.containerClass) {\r\n      this.classMap[this.containerClass] = true;\r\n    }\r\n  }\r\n}\r\n"]}