{"version":3,"file":"chain.js","sourceRoot":"","sources":["../../../../../src/chronos/testing/chain.ts"],"names":[],"mappings":"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","sourcesContent":["import { add, parseDate, subtract } from '../index';\r\nimport { DateArray, DateObject, UnitOfTime } from '../types';\r\nimport {\r\n  getDate, getFullYear, getHours, getMilliseconds, getMinutes, getMonth, getSeconds,\r\n  getUnixTime\r\n} from '../utils/date-getters';\r\nimport {\r\n  setDate, setFullYear, setHours, setMilliseconds, setMinutes, setMonth,\r\n  setSeconds\r\n} from '../utils/date-setters';\r\nimport { cloneDate } from '../create/clone';\r\nimport {\r\n  isArray,\r\n  isBoolean, isDate, isDateValid, isFunction, isNumber, isObject, isString,\r\n  isUndefined\r\n} from '../utils/type-checks';\r\nimport { formatDate } from '../format';\r\nimport { ISO_8601, RFC_2822 } from '../create/from-string-and-format';\r\nimport { Locale, LocaleData } from '../locale/locale.class';\r\nimport {\r\n  getDateOffset,\r\n  getUTCOffset, hasAlignedHourOffset, isDaylightSavingTime, setOffsetToParsedOffset,\r\n  setUTCOffset\r\n} from '../units/offset';\r\nimport { isLeapYear, parseTwoDigitYear } from '../units/year';\r\nimport { isAfter, isBefore, isBetween, isSame, isSameOrAfter, isSameOrBefore } from '../utils/date-compare';\r\nimport { daysInMonth } from '../units/month';\r\nimport {\r\n  getDayOfWeek, getISODayOfWeek, getLocaleDayOfWeek, parseWeekday, setDayOfWeek, setISODayOfWeek,\r\n  setLocaleDayOfWeek\r\n} from '../units/day-of-week';\r\nimport { getISOWeek, getWeek, setISOWeek, setWeek } from '../units/week';\r\nimport {\r\n  getISOWeeksInYear, getISOWeekYear, getSetISOWeekYear, getSetWeekYear, getWeeksInYear,\r\n  getWeekYear\r\n} from '../units/week-year';\r\nimport { endOf, startOf } from '../utils/start-end-of';\r\nimport { getQuarter, setQuarter } from '../units/quarter';\r\nimport { getDayOfYear, setDayOfYear } from '../units/day-of-year';\r\nimport { getZoneAbbr, getZoneName } from '../units/timezone';\r\nimport { diff } from '../moment/diff';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { calendar, CalendarSpec } from '../moment/calendar';\r\nimport { defineLocale, getLocale, getSetGlobalLocale, listLocales } from '../locale/locales';\r\nimport { max, min } from '../moment/min-max';\r\nimport { Duration, isDuration } from '../duration/constructor';\r\nimport { createLocalOrUTC } from '../create/from-anything';\r\nimport { createDuration } from '../duration/create';\r\n\r\nexport type DateInput = string | number | Date | string[] | DateArray | MomentInputObject;\r\n\r\nexport const moment: MomentFn = (_moment as MomentFn);\r\n\r\nexport interface MomentFn {\r\n  (input?: DateInput | Khronos, format?: string | string[], localeKey?: string | boolean, strict?: boolean, isUTC?: boolean): Khronos;\r\n\r\n  ISO_8601: string;\r\n  RFC_2822: string;\r\n\r\n  utc(input?: DateInput | Khronos, format?: string | string[], localeKey?: string | boolean, strict?: boolean): Khronos;\r\n\r\n  parseZone(input?: DateInput | Khronos, format?: string | string[], localeKey?: string | boolean, strict?: boolean): Khronos;\r\n\r\n  unix(num: number): Khronos;\r\n\r\n  locale(key?: string | string[], values?: LocaleData): string;\r\n\r\n  duration(inp?: Duration | DateInput | Khronos, unit?: MomentUnitOfTime): Duration;\r\n\r\n  defineLocale(name: string, config?: LocaleData): Locale;\r\n\r\n  parseTwoDigitYear(input: string): number;\r\n\r\n  isDate(input?: any): input is Date;\r\n\r\n  months(): string[];\r\n\r\n  months(index: number): string;\r\n\r\n  months(format: string): string[];\r\n\r\n  months(format: string, index: number): string;\r\n\r\n  monthsShort(): string[];\r\n\r\n  monthsShort(index: number): string;\r\n\r\n  monthsShort(format: string): string[];\r\n\r\n  monthsShort(format: string, index: number): string;\r\n\r\n  weekdays(): string[];\r\n\r\n  weekdays(index: number): string;\r\n\r\n  weekdays(format: string): string[];\r\n\r\n  weekdays(format: string, index: number): string;\r\n\r\n  weekdays(localeSorted: boolean): string[];\r\n\r\n  weekdays(localeSorted: boolean, index: number): string;\r\n\r\n  weekdays(localeSorted: boolean, format: string): string[];\r\n\r\n  weekdays(localeSorted: boolean, format: string, index: number): string;\r\n\r\n  weekdaysShort(): string[];\r\n\r\n  weekdaysShort(index: number): string;\r\n\r\n  weekdaysShort(format: string): string[];\r\n\r\n  weekdaysShort(format: string, index: number): string;\r\n\r\n  weekdaysShort(localeSorted: boolean): string[];\r\n\r\n  weekdaysShort(localeSorted: boolean, index: number): string;\r\n\r\n  weekdaysShort(localeSorted: boolean, format: string): string[];\r\n\r\n  weekdaysShort(localeSorted: boolean, format: string, index: number): string;\r\n\r\n  weekdaysMin(): string[];\r\n\r\n  weekdaysMin(index: number): string;\r\n\r\n  weekdaysMin(format: string): string[];\r\n\r\n  weekdaysMin(format: string, index: number): string;\r\n\r\n  weekdaysMin(localeSorted: boolean): string[];\r\n\r\n  weekdaysMin(localeSorted: boolean, index: number): string;\r\n\r\n  weekdaysMin(localeSorted: boolean, format: string): string[];\r\n\r\n  weekdaysMin(localeSorted: boolean, format: string, index: number): string;\r\n\r\n  relativeTimeThreshold(threshold: string): number | boolean;\r\n\r\n  relativeTimeThreshold(threshold: string, limit: number): boolean;\r\n\r\n  min(...dates: ((DateInput | Khronos)[] | (DateInput | Khronos))[]): Khronos;\r\n\r\n  max(...dates: ((DateInput | Khronos)[] | (DateInput | Khronos))[]): Khronos;\r\n\r\n  localeData(key?: string | string[] | Khronos): Locale;\r\n\r\n  updateLocale(language: string, localeSpec?: LocaleData): Locale;\r\n\r\n  calendarFormat(m: Date, now: Date): string;\r\n\r\n  // todo: remove this\r\n  calendarFormat(m: Khronos, now: Khronos): string;\r\n\r\n  // todo: implement\r\n  invalid(): Khronos;\r\n\r\n  locales(): string[];\r\n\r\n  // todo: implement\r\n  updateOffset(m: Khronos, keepTime?: boolean): void;\r\n}\r\n\r\nfunction _moment(input?: DateInput | Khronos, format?: string | string[], localeKey?: string | boolean, strict?: boolean, isUTC?: boolean): Khronos {\r\n  if (input instanceof Khronos) {\r\n    const _date = input.clone();\r\n\r\n    return isUTC ? _date.utc() : _date;\r\n  }\r\n\r\n  if (isBoolean(localeKey)) {\r\n    return new Khronos(input, format, null, localeKey, isUTC);\r\n  }\r\n\r\n  return new Khronos(input, format, localeKey, strict, isUTC);\r\n}\r\n\r\nmoment.utc = (input?: DateInput | Khronos, format?: string, localeKey?: string | boolean, strict?: boolean): Khronos => {\r\n  return _moment(input, format, localeKey, strict, true);\r\n};\r\n\r\nmoment.parseZone = (input?: DateInput | Khronos, format?: string, localeKey?: string | boolean, strict?: boolean): Khronos => {\r\n  return _moment(input, format, localeKey, strict, true).parseZone();\r\n};\r\n\r\nmoment.locale = getSetGlobalLocale;\r\nmoment.localeData = (key?: string | string[] | Khronos): Locale => {\r\n  if (key instanceof Khronos) {\r\n    return key.localeData();\r\n  }\r\n\r\n  return getLocale(key);\r\n};\r\n\r\n// moment.utc = createUTC;\r\nmoment.unix = (inp: number) => new Khronos(inp * 1000);\r\nmoment.ISO_8601 = ISO_8601;\r\nmoment.RFC_2822 = RFC_2822;\r\nmoment.defineLocale = defineLocale;\r\nmoment.parseTwoDigitYear = parseTwoDigitYear;\r\nmoment.isDate = isDate;\r\nmoment.invalid = function _invalid(): Khronos {\r\n  return new Khronos(new Date(NaN));\r\n};\r\n\r\n// duration(inp?: Duration | DateInput | Khronos, unit?: MomentUnitOfTime): Duration;\r\nmoment.duration = (input?: Duration | DateInput | Khronos, unit?: MomentUnitOfTime): Duration => {\r\n  const _unit = mapUnitOfTime(unit);\r\n  if (isDate(input)) {\r\n    throw new Error('todo implement');\r\n  }\r\n\r\n  if (input == null) {\r\n    return createDuration();\r\n  }\r\n\r\n  if (isDuration(input)) {\r\n    return createDuration(input, _unit, { _locale: input._locale });\r\n  }\r\n\r\n  if (isString(input) || isNumber(input) || isDuration(input) || isObject<DateObject>(input)) {\r\n    return createDuration(input, _unit);\r\n  }\r\n\r\n  throw new Error('todo implement');\r\n};\r\n\r\nmoment.min = function _min(...dates: ((DateInput | Khronos)[] | (DateInput | Khronos))[]): Khronos {\r\n  const _firstArg = dates[0];\r\n  const _dates = (isArray(_firstArg) ? _firstArg : dates)\r\n    .map((date: Khronos) => _moment(date))\r\n    .map(date => date.toDate());\r\n\r\n  const _date = min(..._dates);\r\n\r\n  return new Khronos(_date);\r\n};\r\n\r\nmoment.max = function _max(...dates: ((DateInput | Khronos)[] | (DateInput | Khronos))[]): Khronos {\r\n  const _firstArg = dates[0];\r\n  const _dates = (isArray(_firstArg) ? _firstArg : dates)\r\n    .map((date: Khronos) => _moment(date))\r\n    .map(date => date.toDate());\r\n\r\n  const _date = max(..._dates);\r\n\r\n  return new Khronos(_date);\r\n};\r\n\r\nmoment.locales = (): string[] => {\r\n  return listLocales();\r\n};\r\n\r\nexport interface MomentInputObject {\r\n  years?: number;\r\n  year?: number;\r\n  y?: number;\r\n\r\n  months?: number;\r\n  month?: number;\r\n  M?: number;\r\n\r\n  days?: number;\r\n  day?: number;\r\n  d?: number;\r\n\r\n  dates?: number;\r\n  date?: number;\r\n  D?: number;\r\n\r\n  hours?: number;\r\n  hour?: number;\r\n  h?: number;\r\n\r\n  minutes?: number;\r\n  minute?: number;\r\n  m?: number;\r\n\r\n  seconds?: number;\r\n  second?: number;\r\n  s?: number;\r\n\r\n  milliseconds?: number;\r\n  millisecond?: number;\r\n  ms?: number;\r\n\r\n  w?: number;\r\n  week?: number;\r\n  weeks?: number;\r\n\r\n  Q?: number;\r\n  quarter?: number;\r\n  quarters?: number;\r\n\r\n  weekYear?: number;\r\n}\r\n\r\nexport type MomentUnitOfTime = (\r\n  'year' | 'years' | 'y' |\r\n  'month' | 'months' | 'M' |\r\n  'week' | 'weeks' | 'w' |\r\n  'day' | 'days' | 'd' |\r\n  'hour' | 'hours' | 'h' |\r\n  'minute' | 'minutes' | 'm' |\r\n  'second' | 'seconds' | 's' |\r\n  'millisecond' | 'milliseconds' | 'ms' |\r\n  'q' | 'quarter' | 'quarters' | 'Q' |\r\n  'isoWeek' | 'isoWeeks' | 'W' |\r\n  'date' | 'dates' | 'D'\r\n  );\r\n\r\nexport type MomentAll = MomentUnitOfTime |\r\n  'weekYear' | 'weekYears' | 'gg' |\r\n  'isoWeekYear' | 'isoWeekYears' | 'GG' |\r\n  'dayOfYear' | 'dayOfYears' | 'DDD' |\r\n  'weekday' | 'weekdays' | 'e' |\r\n  'isoWeekday' | 'isoWeekdays' | 'E';\r\n\r\nconst _unitsPriority: {[key in UnitOfTime]: number} = {\r\n  year: 1,\r\n  month: 8,\r\n  week: 5,\r\n  isoWeek: 5,\r\n  day: 11,\r\n  weekday: 11,\r\n  isoWeekday: 11,\r\n  hours: 13,\r\n  weekYear: 1,\r\n  isoWeekYear: 1,\r\n  quarter: 7,\r\n  date: 9,\r\n  dayOfYear: 4,\r\n  minutes: 14,\r\n  seconds: 15,\r\n  milliseconds: 16\r\n};\r\n\r\n// todo: do I need 2 mappers?\r\nconst _timeHashMap: { [key in MomentAll]: UnitOfTime | string } = {\r\n  y: 'year',\r\n  years: 'year',\r\n  year: 'year',\r\n  M: 'month',\r\n  months: 'month',\r\n  month: 'month',\r\n  w: 'week',\r\n  weeks: 'week',\r\n  week: 'week',\r\n\r\n  d: 'day',\r\n  days: 'day',\r\n  day: 'day',\r\n\r\n  date: 'date',\r\n  dates: 'date',\r\n  D: 'date',\r\n\r\n  h: 'hours',\r\n  hour: 'hours',\r\n  hours: 'hours',\r\n  m: 'minutes',\r\n  minute: 'minutes',\r\n  minutes: 'minutes',\r\n  s: 'seconds',\r\n  second: 'seconds',\r\n  seconds: 'seconds',\r\n  ms: 'milliseconds',\r\n  millisecond: 'milliseconds',\r\n  milliseconds: 'milliseconds',\r\n  quarter: 'quarter',\r\n  quarters: 'quarter',\r\n  q: 'quarter',\r\n  Q: 'quarter',\r\n  isoWeek: 'isoWeek',\r\n  isoWeeks: 'isoWeek',\r\n  W: 'isoWeek',\r\n  weekYear: 'weekYear',\r\n  weekYears: 'weekYear',\r\n  gg: 'weekYears',\r\n  isoWeekYear: 'isoWeekYear',\r\n  isoWeekYears: 'isoWeekYear',\r\n  GG: 'isoWeekYear',\r\n  dayOfYear: 'dayOfYear',\r\n  dayOfYears: 'dayOfYear',\r\n  DDD: 'dayOfYear',\r\n  weekday: 'weekday',\r\n  weekdays: 'weekday',\r\n  e: 'weekday',\r\n  isoWeekday: 'isoWeekday',\r\n  isoWeekdays: 'isoWeekday',\r\n  E: 'isoWeekday'\r\n};\r\n\r\nfunction mapUnitOfTime(period: MomentAll): UnitOfTime {\r\n  return _timeHashMap[period] as UnitOfTime;\r\n}\r\n\r\nfunction mapMomentInputObject(obj: MomentInputObject): {[key in UnitOfTime]?: number} {\r\n  const _res: {[key in UnitOfTime]?: number} = {};\r\n\r\n  return Object.keys(obj)\r\n    .reduce((res, key: keyof MomentInputObject) => {\r\n      res[mapUnitOfTime(key)] = obj[key];\r\n\r\n      return res;\r\n    }, _res);\r\n}\r\n\r\nexport class Khronos {\r\n  _date: Date = new Date();\r\n  _isUTC = false;\r\n  _isStrict: boolean;\r\n  _locale: Locale;\r\n  _format: string | string[];\r\n  _offset: number;\r\n  _tzm: number;\r\n\r\n  constructor(input?: DateInput,\r\n              format?: string | string[],\r\n              localeKey?: string,\r\n              strict = false,\r\n              isUTC = false,\r\n              offset?: number) {\r\n    // locale will be needed to format invalid date message\r\n    this._locale = getLocale(localeKey);\r\n    // parse invalid input\r\n    if (input === '' || input === null || (isNumber(input) && isNaN(input))) {\r\n      this._date = new Date(NaN);\r\n\r\n      return this;\r\n    }\r\n\r\n    this._isUTC = isUTC;\r\n    if (this._isUTC) {\r\n      this._offset = 0;\r\n    }\r\n    if (offset || offset === 0) {\r\n      this._offset = offset;\r\n    }\r\n    this._isStrict = strict;\r\n    this._format = format;\r\n\r\n    if (!input && input !== 0 && !format) {\r\n      this._date = new Date();\r\n\r\n      return this;\r\n    }\r\n\r\n    if (isDate(input)) {\r\n      this._date = cloneDate(input);\r\n\r\n      return this;\r\n    }\r\n\r\n    // this._date = parseDate(input, format, localeKey, strict, isUTC);\r\n    const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\r\n    this._date = config._d;\r\n    this._offset = isNumber(config._offset) ? config._offset : this._offset;\r\n    this._isUTC = config._isUTC;\r\n    this._isStrict = config._strict;\r\n    this._format = config._f;\r\n    this._tzm = config._tzm;\r\n  }\r\n\r\n  _toConfig(): DateParsingConfig {\r\n    return { _isUTC: this._isUTC, _locale: this._locale, _offset: this._offset, _tzm: this._tzm };\r\n  }\r\n\r\n  // Locale\r\n  locale(): string;\r\n  locale(localeKey: string | string[] | Khronos): Khronos;\r\n  locale(localeKey?: string | string[] | Khronos): Khronos | string {\r\n    if (isUndefined(localeKey)) {\r\n      return this._locale._abbr;\r\n    }\r\n\r\n    if (localeKey instanceof Khronos) {\r\n      this._locale = localeKey._locale;\r\n\r\n      return this;\r\n    }\r\n\r\n    const newLocaleData = getLocale(localeKey);\r\n    if (newLocaleData != null) {\r\n      this._locale = newLocaleData;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  localeData(): Locale {\r\n    return this._locale;\r\n  }\r\n\r\n  // Basic\r\n\r\n  add(val: number | string | MomentInputObject, period?: UnitOfTime | MomentUnitOfTime): Khronos {\r\n    if (isString(val)) {\r\n      this._date = add(this._date, parseInt(val, 10), mapUnitOfTime(period));\r\n    }\r\n\r\n    if (isNumber(val)) {\r\n      this._date = add(this._date, val, mapUnitOfTime(period));\r\n    }\r\n\r\n    if (isObject<MomentInputObject>(val)) {\r\n      const _mapped = mapMomentInputObject(val);\r\n      Object.keys(_mapped)\r\n        .forEach((key: UnitOfTime) => add(this._date, _mapped[key], key));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  // fixme: for some reason here 'null' for time is fine\r\n  calendar(time?: DateInput | Khronos, formats?: CalendarSpec): string {\r\n    const _time = time instanceof Khronos ? time : new Khronos(time || new Date());\r\n    const _offset = (this._offset || 0) - (_time._offset || 0);\r\n    const _config = Object.assign(this._toConfig(), { _offset });\r\n\r\n    return calendar(this._date, _time._date,\r\n      formats, this._locale, _config);\r\n  }\r\n\r\n  clone(): Khronos {\r\n    const localeKey = this._locale && this._locale._abbr || 'en';\r\n\r\n    // return new Khronos(cloneDate(this._date), this._format, localeKey, this._isStrict, this._isUTC);\r\n    // fails if isUTC and offset\r\n    // return new Khronos(new Date(this.valueOf()),\r\n    return new Khronos(this._date,\r\n      this._format,\r\n      localeKey,\r\n      this._isStrict,\r\n      this._isUTC,\r\n      this._offset);\r\n  }\r\n\r\n  diff(b: DateInput | Khronos, unitOfTime?: MomentUnitOfTime, precise?: boolean): number {\r\n    const unit = mapUnitOfTime(unitOfTime);\r\n    const _b = b instanceof Khronos ? b : new Khronos(b);\r\n    // const zoneDelta = (_b.utcOffset() - this.utcOffset());\r\n    // const config = Object.assign(this._toConfig(), {\r\n    //   _offset: 0,\r\n    //   _isUTC: true,\r\n    //   _zoneDelta: zoneDelta\r\n    // });\r\n    // return diff(new Date(this.valueOf()), new Date(_b.valueOf()), unit, precise, config);\r\n\r\n    return diff(this._date, _b.toDate(), unit, precise, this._toConfig());\r\n  }\r\n\r\n  endOf(period?: MomentUnitOfTime): Khronos {\r\n    const _per = mapUnitOfTime(period);\r\n    this._date = endOf(this._date, _per, this._isUTC);\r\n\r\n    return this;\r\n  }\r\n\r\n  format(format?: string): string {\r\n    return formatDate(this._date, format, this._locale && this._locale._abbr, this._isUTC, this._offset);\r\n  }\r\n\r\n  // todo: implement\r\n  from(time?: DateInput | Khronos, withoutSuffix?: boolean): string {\r\n    const _time = _moment(time);\r\n    if (this.isValid() && _time.isValid()) {\r\n      return createDuration({ to: this.toDate(), from: _time.toDate() })\r\n        .locale(this.locale())\r\n        .humanize(!withoutSuffix);\r\n    }\r\n\r\n    return this.localeData().invalidDate;\r\n  }\r\n\r\n  fromNow(withoutSuffix?: boolean): string {\r\n    return this.from(new Date(), withoutSuffix);\r\n  }\r\n\r\n  to(inp: DateInput | Khronos, suffix?: boolean): string {\r\n    throw new Error(`TODO: Implement`);\r\n  }\r\n\r\n  toNow(withoutPrefix?: boolean): string {\r\n    throw new Error(`TODO: Implement`);\r\n  }\r\n\r\n  subtract(val: number | string | MomentInputObject, period?: UnitOfTime | MomentUnitOfTime): Khronos {\r\n    if (isString(val)) {\r\n      this._date = subtract(this._date, parseInt(val, 10), mapUnitOfTime(period));\r\n\r\n      return this;\r\n    }\r\n\r\n    if (isNumber(val)) {\r\n      this._date = subtract(this._date, val, mapUnitOfTime(period));\r\n    }\r\n\r\n    if (isObject<MomentInputObject>(val)) {\r\n      const _mapped = mapMomentInputObject(val);\r\n      Object.keys(_mapped)\r\n        .forEach((key: UnitOfTime) => subtract(this._date, _mapped[key], key));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  get(period: MomentAll): number {\r\n    if (period === 'dayOfYear') {\r\n      return this.dayOfYear();\r\n    }\r\n\r\n    const unit = mapUnitOfTime(period);\r\n    switch (unit) {\r\n      case 'year':\r\n        return this.year();\r\n      case 'month':\r\n        return this.month();\r\n      // | 'week'\r\n      case 'date':\r\n        return this.date();\r\n      case 'day':\r\n        return this.day();\r\n      case 'hours':\r\n        return this.hours();\r\n      case 'minutes':\r\n        return this.minutes();\r\n      case 'seconds':\r\n        return this.seconds();\r\n      case 'milliseconds':\r\n        return this.milliseconds();\r\n      case 'week':\r\n        return this.week();\r\n      case 'isoWeek':\r\n        return this.isoWeek();\r\n      case 'weekYear':\r\n        return this.weekYear();\r\n      case 'isoWeekYear':\r\n        return this.isoWeekYear();\r\n      case 'weekday':\r\n        return this.weekday();\r\n      case 'isoWeekday':\r\n        return this.isoWeekday();\r\n      case 'quarter':\r\n        return this.quarter();\r\n      default:\r\n        throw new Error(`Unknown moment.get('${period}')`);\r\n    }\r\n  }\r\n\r\n  set(period: MomentAll | MomentInputObject, input?: number): Khronos {\r\n\r\n    if (isString(period)) {\r\n      const unit = mapUnitOfTime(period);\r\n      switch (unit) {\r\n        case 'year':\r\n          return this.year(input);\r\n        case 'month':\r\n          return this.month(input);\r\n        // | 'week'\r\n        case 'day':\r\n          return this.day(input);\r\n        case 'date':\r\n          return this.date(input);\r\n        case 'hours':\r\n          return this.hours(input);\r\n        case 'minutes':\r\n          return this.minutes(input);\r\n        case 'seconds':\r\n          return this.seconds(input);\r\n        case 'milliseconds':\r\n          return this.milliseconds(input);\r\n        case 'week':\r\n          return this.week(input);\r\n        case 'isoWeek':\r\n          return this.isoWeek(input);\r\n        case 'weekYear':\r\n          return this.weekYear(input);\r\n        case 'isoWeekYear':\r\n          return this.isoWeekYear(input);\r\n        case 'weekday':\r\n          return this.weekday(input);\r\n        case 'isoWeekday':\r\n          return this.isoWeekday(input);\r\n        case 'quarter':\r\n          return this.quarter(input);\r\n        default:\r\n          throw new Error(`Unknown moment.get('${period}')`);\r\n      }\r\n    }\r\n\r\n    if (isObject<MomentInputObject>(period)) {\r\n      const _mapped = mapMomentInputObject(period);\r\n      Object.keys(_mapped)\r\n        .sort(function(a: UnitOfTime, b: UnitOfTime): number {\r\n          return _unitsPriority[a] - _unitsPriority[b];\r\n        })\r\n        .forEach((key: UnitOfTime) => this.set(key, _mapped[key]));\r\n    }\r\n\r\n\r\n    return this;\r\n  }\r\n\r\n  toString(): string {\r\n    return this.format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\r\n  }\r\n\r\n  toISOString(): string {\r\n    if (!this.isValid()) {\r\n      return null;\r\n    }\r\n\r\n    if (getFullYear(this._date, true) < 0 || getFullYear(this._date, true) > 9999) {\r\n      return this.format('YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\r\n    }\r\n\r\n    if (isFunction(Date.prototype.toISOString)) {\r\n      // native implementation is ~50x faster, use it when we can\r\n      return this.toDate().toISOString();\r\n    }\r\n\r\n    return this.format('YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\r\n  }\r\n\r\n  inspect(): string {\r\n    throw new Error('TODO: implement');\r\n  }\r\n\r\n  toJSON(): string {\r\n    return this.toISOString();\r\n  }\r\n\r\n  toDate(): Date {\r\n    return new Date(this.valueOf());\r\n  }\r\n\r\n  toObject(): {[key in MomentUnitOfTime]?: number} {\r\n    return {\r\n      // years: getFullYear(this._date, this._isUTC),\r\n      // months: getMonth(this._date, this._isUTC),\r\n\r\n      year: getFullYear(this._date, this._isUTC),\r\n      month: getMonth(this._date, this._isUTC),\r\n      date: getDate(this._date, this._isUTC),\r\n      hours: getHours(this._date, this._isUTC),\r\n      minutes: getMinutes(this._date, this._isUTC),\r\n      seconds: getSeconds(this._date, this._isUTC),\r\n      milliseconds: getMilliseconds(this._date, this._isUTC)\r\n    };\r\n  }\r\n\r\n  toArray(): DateArray {\r\n    return [this.year(), this.month(), this.date(), this.hour(), this.minute(), this.second(), this.millisecond()];\r\n  }\r\n\r\n\r\n  // Dates boolean algebra\r\n\r\n  isAfter(date: Khronos, unit?: MomentUnitOfTime): boolean {\r\n    const _unit = unit ? mapUnitOfTime(unit) : void 0;\r\n\r\n    return isAfter(this._date, date.toDate(), _unit);\r\n  }\r\n\r\n  isBefore(date: Khronos, unit?: MomentUnitOfTime): boolean {\r\n    const _unit = unit ? mapUnitOfTime(unit) : void 0;\r\n\r\n    return isBefore(this.toDate(), date.toDate(), _unit);\r\n  }\r\n\r\n  isBetween(from: Khronos, to: Khronos, unit?: MomentUnitOfTime, inclusivity?: string): boolean {\r\n    const _unit = unit ? mapUnitOfTime(unit) : void 0;\r\n\r\n    return isBetween(this.toDate(), from.toDate(), to.toDate(), _unit, inclusivity);\r\n  }\r\n\r\n  isSame(date: Khronos, unit?: MomentUnitOfTime): boolean {\r\n    const _unit = unit ? mapUnitOfTime(unit) : void 0;\r\n\r\n    return isSame(this._date, date.toDate(), _unit);\r\n  }\r\n\r\n  isSameOrAfter(date: Khronos, unit?: MomentUnitOfTime): boolean {\r\n    const _unit = unit ? mapUnitOfTime(unit) : void 0;\r\n\r\n    return isSameOrAfter(this._date, date.toDate(), _unit);\r\n  }\r\n\r\n  isSameOrBefore(date: Khronos, unit?: MomentUnitOfTime): boolean {\r\n    const _unit = unit ? mapUnitOfTime(unit) : void 0;\r\n\r\n    return isSameOrBefore(this._date, date.toDate(), _unit);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return isDateValid(this._date);\r\n  }\r\n\r\n  valueOf(): number {\r\n    return this._date.valueOf() - ((this._offset || 0) * 60000);\r\n  }\r\n\r\n  unix(): number {\r\n    // return getUnixTime(this._date);\r\n    return Math.floor(this.valueOf() / 1000);\r\n  }\r\n\r\n\r\n  // Offset\r\n\r\n  utcOffset(): number;\r\n  utcOffset(b: number | string, keepLocalTime?: boolean): Khronos;\r\n  utcOffset(b?: number | string, keepLocalTime?: boolean): number | Khronos {\r\n    const _config = this._toConfig();\r\n\r\n    if (!b && b !== 0) {\r\n      return getUTCOffset(this._date, _config);\r\n    }\r\n\r\n    this._date = setUTCOffset(this._date, b, keepLocalTime, false, _config);\r\n\r\n    this._offset = _config._offset;\r\n    this._isUTC = _config._isUTC;\r\n\r\n    return this;\r\n  }\r\n\r\n  utc(keepLocalTime?: boolean): Khronos {\r\n    return this.utcOffset(0, keepLocalTime);\r\n  }\r\n\r\n  local(keepLocalTime?: boolean): Khronos {\r\n    if (this._isUTC) {\r\n      this.utcOffset(0, keepLocalTime);\r\n      this._isUTC = false;\r\n\r\n      if (keepLocalTime) {\r\n        this.subtract(getDateOffset(this._date), 'm');\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  parseZone(input?: string): Khronos {\r\n    const _config = this._toConfig();\r\n    this._date = setOffsetToParsedOffset(this._date, input, _config);\r\n\r\n    this._offset = _config._offset;\r\n    this._isUTC = _config._isUTC;\r\n\r\n    return this;\r\n  }\r\n\r\n  hasAlignedHourOffset(input?: Khronos): boolean {\r\n    return hasAlignedHourOffset(this._date, input ? input._date : void 0);\r\n  }\r\n\r\n  isDST(): boolean {\r\n    return isDaylightSavingTime(this._date);\r\n  }\r\n\r\n  isLocal(): boolean {\r\n    return !this._isUTC;\r\n  }\r\n\r\n  isUtcOffset(): boolean {\r\n    return this._isUTC;\r\n  }\r\n\r\n  isUTC(): boolean {\r\n    return this.isUtc();\r\n  }\r\n\r\n  isUtc(): boolean {\r\n    return this._isUTC && this._offset === 0;\r\n  }\r\n\r\n  // Timezone\r\n\r\n  zoneAbbr(): string {\r\n    return getZoneAbbr(this._isUTC);\r\n  }\r\n\r\n  zoneName(): string {\r\n    return getZoneName(this._isUTC);\r\n  }\r\n\r\n  // Year\r\n\r\n  year(): number;\r\n  year(year: number): Khronos;\r\n  year(year?: number): Khronos | number {\r\n    if (!year && year !== 0) {\r\n      return getFullYear(this._date, this._isUTC);\r\n    }\r\n\r\n    this._date = cloneDate(setFullYear(this._date, year));\r\n\r\n    return this;\r\n  }\r\n\r\n  weekYear(): number;\r\n  weekYear(val: number): Khronos;\r\n  weekYear(val?: number): Khronos | number {\r\n    if (!val && val !== 0) {\r\n      return getWeekYear(this._date, this._locale, this.isUTC());\r\n    }\r\n\r\n    const date = getSetWeekYear(this._date, val, this._locale, this.isUTC());\r\n    if (isDate(date)) {\r\n      this._date = date;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  isoWeekYear(): number ;\r\n  isoWeekYear(val: number): Khronos ;\r\n  isoWeekYear(val?: number): Khronos | number {\r\n    if (!val && val !== 0) {\r\n      return getISOWeekYear(this._date, this.isUTC());\r\n    }\r\n\r\n    const date = getSetISOWeekYear(this._date, val, this.isUtc());\r\n\r\n    if (isDate(date)) {\r\n      this._date = date;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  isLeapYear(): boolean {\r\n    return isLeapYear(getFullYear(this.toDate(), this.isUTC()));\r\n  }\r\n\r\n  // Month\r\n\r\n  month(): number;\r\n  month(month: number | string): Khronos;\r\n  month(month?: number | string): Khronos | number {\r\n    if (!month && month !== 0) {\r\n      return getMonth(this._date, this._isUTC);\r\n    }\r\n\r\n    let _month = month;\r\n\r\n    if (isString(month)) {\r\n      const locale = this._locale || getLocale();\r\n      _month = locale.monthsParse(month);\r\n    }\r\n\r\n    if (isNumber(_month)) {\r\n      this._date = cloneDate(setMonth(this._date, _month, this._isUTC));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /** @deprecated */\r\n  hour(): number;\r\n  hour(hours: number): Khronos;\r\n  hour(hours?: number): Khronos | number {\r\n    return this.hours(hours);\r\n  }\r\n\r\n  hours(): number;\r\n  hours(hours: number): Khronos;\r\n  hours(hours?: number): Khronos | number {\r\n    if (!hours && hours !== 0) {\r\n      return getHours(this._date, this._isUTC);\r\n    }\r\n\r\n    this._date = cloneDate(setHours(this._date, hours, this._isUTC));\r\n\r\n    return this;\r\n  }\r\n\r\n  /** @deprecated */\r\n  minute(): number;\r\n  minute(minutes: number): Khronos;\r\n  minute(minutes?: number): Khronos | number {\r\n    return this.minutes(minutes);\r\n  }\r\n\r\n  minutes(): number;\r\n  minutes(minutes: number): Khronos;\r\n  minutes(minutes?: number): Khronos | number {\r\n    if (!minutes && minutes !== 0) {\r\n      return getMinutes(this._date, this._isUTC);\r\n    }\r\n\r\n    this._date = cloneDate(setMinutes(this._date, minutes, this._isUTC));\r\n\r\n    return this;\r\n  }\r\n\r\n  /** @deprecated */\r\n  second(): number;\r\n  second(seconds: number): Khronos;\r\n  second(seconds?: number): Khronos | number {\r\n    return this.seconds(seconds);\r\n  }\r\n\r\n  seconds(): number;\r\n  seconds(seconds: number): Khronos;\r\n  seconds(seconds?: number): Khronos | number {\r\n    if (!seconds && seconds !== 0) {\r\n      return getSeconds(this._date, this._isUTC);\r\n    }\r\n\r\n    this._date = cloneDate(setSeconds(this._date, seconds, this._isUTC));\r\n\r\n    return this;\r\n  }\r\n\r\n  /** @deprecated */\r\n  millisecond(): number;\r\n  millisecond(ms: number): Khronos;\r\n  millisecond(ms?: number): Khronos | number {\r\n    return this.milliseconds(ms);\r\n  }\r\n\r\n  milliseconds(): number;\r\n  milliseconds(seconds: number): Khronos;\r\n  milliseconds(seconds?: number): Khronos | number {\r\n    if (!seconds && seconds !== 0) {\r\n      return getMilliseconds(this._date, this._isUTC);\r\n    }\r\n\r\n    this._date = cloneDate(setMilliseconds(this._date, seconds, this._isUTC));\r\n\r\n    return this;\r\n  }\r\n\r\n  // Day\r\n\r\n  date(): number;\r\n  date(date: number): Khronos;\r\n  date(date?: number): Khronos | number {\r\n    if (!date && date !== 0) {\r\n      return getDate(this._date, this._isUTC);\r\n    }\r\n\r\n    this._date = cloneDate(setDate(this._date, date, this._isUTC));\r\n\r\n    return this;\r\n  }\r\n\r\n  day(): number ;\r\n  day(input: number | string): Khronos ;\r\n  day(input?: number | string): Khronos | number {\r\n    if (!input && input !== 0) {\r\n      return getDayOfWeek(this._date, this._isUTC);\r\n    }\r\n\r\n    let _input = input;\r\n\r\n    if (isString(input)) {\r\n      _input = parseWeekday(input, this._locale);\r\n    }\r\n\r\n    if (isNumber(_input)) {\r\n      this._date = setDayOfWeek(this._date, _input, this._locale, this._isUTC);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  weekday(): number ;\r\n  weekday(val: number): Khronos ;\r\n  weekday(val?: number): Khronos | number {\r\n    if (!val && val !== 0) {\r\n      return getLocaleDayOfWeek(this._date, this._locale, this._isUTC);\r\n    }\r\n\r\n    this._date = setLocaleDayOfWeek(this._date, val, { locale: this._locale, isUTC: this._isUTC });\r\n\r\n    return this;\r\n  }\r\n\r\n  isoWeekday(): number ;\r\n  isoWeekday(val: number | string): Khronos ;\r\n  isoWeekday(val?: number | string): Khronos | number {\r\n    if (!val && val !== 0) {\r\n      return getISODayOfWeek(this._date);\r\n    }\r\n\r\n    this._date = setISODayOfWeek(this._date, val);\r\n\r\n    return this;\r\n  }\r\n\r\n  dayOfYear(): number;\r\n  dayOfYear(val: number): Khronos;\r\n  dayOfYear(val?: number): Khronos | number {\r\n    if (!val && val !== 0) {\r\n      return getDayOfYear(this._date);\r\n    }\r\n\r\n    this._date = setDayOfYear(this._date, val);\r\n\r\n    return this;\r\n  }\r\n\r\n  // Week\r\n\r\n  week(): number;\r\n  week(input: number): Khronos;\r\n  week(input?: number): Khronos | number {\r\n    if (!input && input !== 0) {\r\n      return getWeek(this._date, this._locale);\r\n    }\r\n\r\n    this._date = setWeek(this._date, input, this._locale);\r\n\r\n    return this;\r\n  }\r\n\r\n  /** @deprecated */\r\n  weeks(): number;\r\n  weeks(input: number): Khronos;\r\n  weeks(input?: number): Khronos | number {\r\n    return this.week(input);\r\n  }\r\n\r\n  isoWeek(): number ;\r\n  isoWeek(val: number): Khronos ;\r\n  isoWeek(val?: number): Khronos | number {\r\n    if (!val && val !== 0) {\r\n      return getISOWeek(this._date);\r\n    }\r\n\r\n    this._date = setISOWeek(this._date, val);\r\n\r\n    return this;\r\n  }\r\n\r\n  /** @deprecated */\r\n  isoWeeks(): number ;\r\n  isoWeeks(val: number): Khronos ;\r\n  isoWeeks(val?: number): Khronos | number {\r\n    return this.isoWeek(val);\r\n  }\r\n\r\n  weeksInYear(): number {\r\n    return getWeeksInYear(this._date, this._isUTC, this._locale);\r\n  }\r\n\r\n  isoWeeksInYear(): number {\r\n    return getISOWeeksInYear(this._date, this._isUTC);\r\n  }\r\n\r\n\r\n  daysInMonth(): number {\r\n    return daysInMonth(getFullYear(this._date, this._isUTC), getMonth(this._date, this._isUTC));\r\n  }\r\n\r\n\r\n  quarter(): number;\r\n  quarter(val: number): Khronos;\r\n  quarter(val?: number): Khronos | number {\r\n    if (!val && val !== 0) {\r\n      return getQuarter(this._date, this._isUTC);\r\n    }\r\n\r\n    this._date = setQuarter(this._date, val, this._isUTC);\r\n\r\n    return this;\r\n  }\r\n\r\n  /** @deprecated */\r\n  quarters(): number;\r\n  quarters(val: number): Khronos;\r\n  quarters(val?: number): Khronos | number {\r\n    return this.quarter(val);\r\n  }\r\n\r\n  startOf(period?: MomentUnitOfTime): Khronos {\r\n    const _per = mapUnitOfTime(period);\r\n    this._date = startOf(this._date, _per, this._isUTC);\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n"]}