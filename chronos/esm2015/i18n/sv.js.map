{"version":3,"file":"sv.js","sourceRoot":"","sources":["../../../../../src/chronos/i18n/sv.ts"],"names":[],"mappings":"AAEA,kCAAkC;AAClC,yBAAyB;AACzB,gDAAgD;AAEhD,MAAM,CAAC,MAAM,QAAQ,GAAe;IAClC,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,uFAAuF,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1G,WAAW,EAAE,iDAAiD,CAAC,KAAK,CAAC,GAAG,CAAC;IACzE,QAAQ,EAAE,mDAAmD,CAAC,KAAK,CAAC,GAAG,CAAC;IACxE,aAAa,EAAE,6BAA6B,CAAC,KAAK,CAAC,GAAG,CAAC;IACvD,WAAW,EAAE,sBAAsB,CAAC,KAAK,CAAC,GAAG,CAAC;IAC9C,cAAc,EAAE;QACd,EAAE,EAAE,OAAO;QACX,GAAG,EAAE,UAAU;QACf,CAAC,EAAE,YAAY;QACf,EAAE,EAAE,aAAa;QACjB,GAAG,EAAE,yBAAyB;QAC9B,IAAI,EAAE,8BAA8B;QACpC,GAAG,EAAE,kBAAkB;QACvB,IAAI,EAAE,sBAAsB;KAC7B;IACD,QAAQ,EAAE;QACR,OAAO,EAAE,WAAW;QACpB,OAAO,EAAE,cAAc;QACvB,OAAO,EAAE,WAAW;QACpB,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE,gBAAgB;QAC1B,QAAQ,EAAE,GAAG;KACd;IACD,YAAY,EAAE;QACZ,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,cAAc;QACpB,CAAC,EAAE,gBAAgB;QACnB,EAAE,EAAE,aAAa;QACjB,CAAC,EAAE,UAAU;QACb,EAAE,EAAE,YAAY;QAChB,CAAC,EAAE,UAAU;QACb,EAAE,EAAE,WAAW;QACf,CAAC,EAAE,QAAQ;QACX,EAAE,EAAE,UAAU;QACd,CAAC,EAAE,UAAU;QACb,EAAE,EAAE,YAAY;QAChB,CAAC,EAAE,QAAQ;QACX,EAAE,EAAE,OAAO;KACZ;IACD,sBAAsB,EAAE,cAAc;IACtC,OAAO,CAAC,IAAY;QAClB,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EACd,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACzC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACf,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACf,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC9B,OAAO,GAAG,GAAG,MAAM,CAAC;IACtB,CAAC;IACD,IAAI,EAAE;QACJ,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC,CAAE,gEAAgE;KACzE;CACF,CAAC","sourcesContent":["import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Swedish [sv]\r\n//! author : Jens Alm : https://github.com/ulmus\r\n\r\nexport const svLocale: LocaleData = {\r\n  abbr: 'sv',\r\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\r\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\r\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\r\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\r\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'YYYY-MM-DD',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\r\n    lll: 'D MMM YYYY HH:mm',\r\n    llll: 'ddd D MMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Idag] LT',\r\n    nextDay: '[Imorgon] LT',\r\n    lastDay: '[Igår] LT',\r\n    nextWeek: '[På] dddd LT',\r\n    lastWeek: '[I] dddd[s] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'om %s',\r\n    past: 'för %s sedan',\r\n    s: 'några sekunder',\r\n    ss: '%d sekunder',\r\n    m: 'en minut',\r\n    mm: '%d minuter',\r\n    h: 'en timme',\r\n    hh: '%d timmar',\r\n    d: 'en dag',\r\n    dd: '%d dagar',\r\n    M: 'en månad',\r\n    MM: '%d månader',\r\n    y: 'ett år',\r\n    yy: '%d år'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    let b = num % 10,\r\n      output = (~~(num % 100 / 10) === 1) ? 'e' :\r\n        (b === 1) ? 'a' :\r\n          (b === 2) ? 'a' :\r\n            (b === 3) ? 'e' : 'e';\r\n    return num + output;\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n"]}