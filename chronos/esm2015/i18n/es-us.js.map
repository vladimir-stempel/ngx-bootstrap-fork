{"version":3,"file":"es-us.js","sourceRoot":"","sources":["../../../../../src/chronos/i18n/es-us.ts"],"names":[],"mappings":"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","sourcesContent":["import { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Spanish (United States) [es-us]\r\n//! author : bustta : https://github.com/bustta\r\n\r\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\r\nlet monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\r\n\r\nexport const esUsLocale: LocaleData = {\r\n  abbr: 'es-us',\r\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortDot[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsParseExact: true,\r\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'h:mm A',\r\n    LTS: 'h:mm:ss A',\r\n    L: 'MM/DD/YYYY',\r\n    LL: 'MMMM [de] D [de] YYYY',\r\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\r\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date): string {\r\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date): string {\r\n      return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date): string {\r\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date): string {\r\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date): string {\r\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'hace %s',\r\n    s: 'unos segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'una hora',\r\n    hh: '%d horas',\r\n    d: 'un día',\r\n    dd: '%d días',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un año',\r\n    yy: '%d años'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\r\n  ordinal: '%dº',\r\n  week: {\r\n    dow: 0, // Sunday is the first day of the week.\r\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n"]}