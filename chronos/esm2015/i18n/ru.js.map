{"version":3,"file":"ru.js","sourceRoot":"","sources":["../../../../../src/chronos/i18n/ru.ts"],"names":[],"mappings":"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","sourcesContent":["import { LocaleData } from '../locale/locale.class';\r\nimport { getWeek } from '../units/week';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Russian [ru]\r\n//! author : Viktorminator : https://github.com/Viktorminator\r\n//! Author : Menelion Elensúle : https://github.com/Oire\r\n//! author : Коренберг Марк : https://github.com/socketpair\r\n\r\nfunction plural(word: string, num: number): string {\r\n  let forms = word.split('_');\r\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\r\n}\r\n\r\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\r\n  let format: {[key: string]: string} = {\r\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\r\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\r\n    hh: 'час_часа_часов',\r\n    dd: 'день_дня_дней',\r\n    MM: 'месяц_месяца_месяцев',\r\n    yy: 'год_года_лет'\r\n  };\r\n  if (key === 'm') {\r\n    return withoutSuffix ? 'минута' : 'минуту';\r\n  }\r\n  return num + ' ' + plural(format[key], +num);\r\n}\r\n\r\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\r\n\r\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\r\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\r\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\r\nexport const ruLocale: LocaleData = {\r\n  abbr: 'ru',\r\n  months: {\r\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\r\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\r\n  },\r\n  monthsShort: {\r\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\r\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\r\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\r\n  },\r\n  weekdays: {\r\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\r\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\r\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\r\n  },\r\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n\r\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\r\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\r\n\r\n  // копия предыдущего\r\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\r\n\r\n  // полные названия с падежами\r\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\r\n\r\n  // Выражение, которое соотвествует только сокращённым формам\r\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY г.',\r\n    LLL: 'D MMMM YYYY г., H:mm',\r\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Сегодня в] LT',\r\n    nextDay: '[Завтра в] LT',\r\n    lastDay: '[Вчера в] LT',\r\n    nextWeek(date: Date, now: Date) {\r\n      if (getWeek(now) !== getWeek(date)) {\r\n        switch (getDayOfWeek(date)) {\r\n          case 0:\r\n            return '[В следующее] dddd [в] LT';\r\n          case 1:\r\n          case 2:\r\n          case 4:\r\n            return '[В следующий] dddd [в] LT';\r\n          case 3:\r\n          case 5:\r\n          case 6:\r\n            return '[В следующую] dddd [в] LT';\r\n        }\r\n      } else {\r\n        if (getDayOfWeek(date) === 2) {\r\n          return '[Во] dddd [в] LT';\r\n        } else {\r\n          return '[В] dddd [в] LT';\r\n        }\r\n      }\r\n    },\r\n    lastWeek(date: Date, now: Date) {\r\n      if (getWeek(now) !== getWeek(date)) {\r\n        switch (getDayOfWeek(date)) {\r\n          case 0:\r\n            return '[В прошлое] dddd [в] LT';\r\n          case 1:\r\n          case 2:\r\n          case 4:\r\n            return '[В прошлый] dddd [в] LT';\r\n          case 3:\r\n          case 5:\r\n          case 6:\r\n            return '[В прошлую] dddd [в] LT';\r\n        }\r\n      } else {\r\n        if (getDayOfWeek(date) === 2) {\r\n          return '[Во] dddd [в] LT';\r\n        } else {\r\n          return '[В] dddd [в] LT';\r\n        }\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'через %s',\r\n    past: '%s назад',\r\n    s: 'несколько секунд',\r\n    ss: relativeTimeWithPlural,\r\n    m: relativeTimeWithPlural,\r\n    mm: relativeTimeWithPlural,\r\n    h: 'час',\r\n    hh: relativeTimeWithPlural,\r\n    d: 'день',\r\n    dd: relativeTimeWithPlural,\r\n    M: 'месяц',\r\n    MM: relativeTimeWithPlural,\r\n    y: 'год',\r\n    yy: relativeTimeWithPlural\r\n  },\r\n  meridiemParse: /ночи|утра|дня|вечера/i,\r\n  isPM(input) {\r\n    return /^(дня|вечера)$/.test(input);\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 4) {\r\n      return 'ночи';\r\n    } else if (hour < 12) {\r\n      return 'утра';\r\n    } else if (hour < 17) {\r\n      return 'дня';\r\n    } else {\r\n      return 'вечера';\r\n    }\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\r\n  ordinal(_num: number, period: string): string {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      case 'M':\r\n      case 'd':\r\n      case 'DDD':\r\n        return num + '-й';\r\n      case 'D':\r\n        return num + '-го';\r\n      case 'w':\r\n      case 'W':\r\n        return num + '-я';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n"]}