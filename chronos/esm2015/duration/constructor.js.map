{"version":3,"file":"constructor.js","sourceRoot":"","sources":["../../../../../src/chronos/duration/constructor.ts"],"names":[],"mappings":"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","sourcesContent":["import { getLocale } from '../locale/locales';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { isDurationValid } from './valid';\r\nimport { bubble, daysToMonths, monthsToDays } from './bubble';\r\nimport { DateObject } from '../types';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { normalizeUnits } from '../units/aliases';\r\nimport { relativeTime } from './humanize';\r\nimport { toInt } from '../utils/type-checks';\r\n\r\nexport class Duration {\r\n  _milliseconds: number;\r\n  _days: number;\r\n  _months: number;\r\n  _data: Partial<DateObject> = {};\r\n  _locale: Locale = getLocale();\r\n  _isValid: boolean;\r\n\r\n  constructor(duration: Partial<DateObject>, config: DateParsingConfig = {}) {\r\n    this._locale = config && config._locale || getLocale();\r\n    // const normalizedInput = normalizeObjectUnits(duration);\r\n    const normalizedInput = duration;\r\n    const years = normalizedInput.year || 0;\r\n    const quarters = normalizedInput.quarter || 0;\r\n    const months = normalizedInput.month || 0;\r\n    const weeks = normalizedInput.week || 0;\r\n    const days = normalizedInput.day || 0;\r\n    const hours = normalizedInput.hours || 0;\r\n    const minutes = normalizedInput.minutes || 0;\r\n    const seconds = normalizedInput.seconds || 0;\r\n    const milliseconds = normalizedInput.milliseconds || 0;\r\n\r\n    this._isValid = isDurationValid(normalizedInput);\r\n\r\n    // representation for dateAddRemove\r\n    this._milliseconds = +milliseconds +\r\n      seconds * 1000 +\r\n      minutes * 60 * 1000 + // 1000 * 60\r\n      hours * 1000 * 60 * 60; // using 1000 * 60 * 60\r\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\r\n    // Because of dateAddRemove treats 24 hours as different from a\r\n    // day when working around DST, we need to store them separately\r\n    this._days = +days +\r\n      weeks * 7;\r\n    // It is impossible to translate months into days without knowing\r\n    // which months you are are talking about, so we have to store\r\n    // it separately.\r\n    this._months = +months +\r\n      quarters * 3 +\r\n      years * 12;\r\n\r\n    // this._data = {};\r\n\r\n    // this._locale = getLocale();\r\n\r\n    // this._bubble();\r\n    return bubble(this);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return this._isValid;\r\n  }\r\n\r\n  humanize(withSuffix?: boolean): string {\r\n    // throw new Error(`TODO: implement`);\r\n\r\n    if (!this.isValid()) {\r\n      return this.localeData().invalidDate;\r\n    }\r\n\r\n    const locale = this.localeData();\r\n    let output = relativeTime(this, !withSuffix, locale);\r\n\r\n    if (withSuffix) {\r\n      output = locale.pastFuture(+this, output);\r\n    }\r\n\r\n    return locale.postformat(output);\r\n  }\r\n\r\n  localeData(): Locale {\r\n    return this._locale;\r\n  }\r\n\r\n  locale(): string;\r\n  locale(localeKey: string): Duration;\r\n  locale(localeKey?: string): Duration | string {\r\n    if (!localeKey) {\r\n      return this._locale._abbr;\r\n    }\r\n\r\n    this._locale = getLocale(localeKey) || this._locale;\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  abs(): Duration {\r\n    const mathAbs = Math.abs;\r\n\r\n    const data = this._data;\r\n\r\n    this._milliseconds = mathAbs(this._milliseconds);\r\n    this._days = mathAbs(this._days);\r\n    this._months = mathAbs(this._months);\r\n\r\n    data.milliseconds = mathAbs(data.milliseconds);\r\n    data.seconds = mathAbs(data.seconds);\r\n    data.minutes = mathAbs(data.minutes);\r\n    data.hours = mathAbs(data.hours);\r\n    data.month = mathAbs(data.month);\r\n    data.year = mathAbs(data.year);\r\n\r\n    return this;\r\n  }\r\n\r\n  as(_units: string): number {\r\n    if (!this.isValid()) {\r\n      return NaN;\r\n    }\r\n    let days;\r\n    let months;\r\n    const milliseconds = this._milliseconds;\r\n\r\n    const units = normalizeUnits(_units);\r\n\r\n    if (units === 'month' || units === 'year') {\r\n      days = this._days + milliseconds / 864e5;\r\n      months = this._months + daysToMonths(days);\r\n\r\n      return units === 'month' ? months : months / 12;\r\n    }\r\n\r\n    // handle milliseconds separately because of floating point math errors (issue #1867)\r\n    days = this._days + Math.round(monthsToDays(this._months));\r\n    switch (units) {\r\n      case 'week'   :\r\n        return days / 7 + milliseconds / 6048e5;\r\n      case 'day'    :\r\n        return days + milliseconds / 864e5;\r\n      case 'hours'   :\r\n        return days * 24 + milliseconds / 36e5;\r\n      case 'minutes' :\r\n        return days * 1440 + milliseconds / 6e4;\r\n      case 'seconds' :\r\n        return days * 86400 + milliseconds / 1000;\r\n      // Math.floor prevents floating point math errors here\r\n      case 'milliseconds':\r\n        return Math.floor(days * 864e5) + milliseconds;\r\n      default:\r\n        throw new Error(`Unknown unit ${units}`);\r\n    }\r\n  }\r\n\r\n  valueOf () {\r\n    if (!this.isValid()) {\r\n      return NaN;\r\n    }\r\n\r\n    return (\r\n      this._milliseconds +\r\n      this._days * 864e5 +\r\n      (this._months % 12) * 2592e6 +\r\n      toInt(this._months / 12) * 31536e6\r\n    );\r\n  }\r\n}\r\n\r\nexport function isDuration(obj: any): obj is Duration {\r\n  return obj instanceof Duration;\r\n}\r\n"]}