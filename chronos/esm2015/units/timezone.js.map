{"version":3,"file":"timezone.js","sourceRoot":"","sources":["../../../../../src/chronos/units/timezone.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAGlD,kCAAkC;AAElC,MAAM,UAAU,YAAY;IAC1B,aAAa;IACb,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAC5B,UAAS,IAAU,EAAE,IAA0B;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IACjC,CAAC,CACF,CAAC;IACF,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAC7B,UAAS,IAAU,EAAE,IAA0B;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC;IACxD,CAAC,CACF,CAAC;AACJ,CAAC;AAED,UAAU;AAEV,MAAM,UAAU,WAAW,CAAC,KAAc;IACxC,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAC5B,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAAc;IACxC,OAAO,KAAK,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC;AACnD,CAAC","sourcesContent":["import { addFormatToken } from '../format/format';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n// todo: add support for timezones\r\n\r\nexport function initTimezone() {\r\n  // FORMATTING\r\n  addFormatToken('z', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.isUTC ? 'UTC' : '';\r\n    }\r\n  );\r\n  addFormatToken('zz', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.isUTC ? 'Coordinated Universal Time' : '';\r\n    }\r\n  );\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getZoneAbbr(isUTC: boolean) {\r\n  return isUTC ? 'UTC' : '';\r\n}\r\n\r\nexport function getZoneName(isUTC: boolean) {\r\n  return isUTC ? 'Coordinated Universal Time' : '';\r\n}\r\n"]}