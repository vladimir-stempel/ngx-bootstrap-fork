{"version":3,"file":"parsing.types.js","sourceRoot":"","sources":["../../../../../src/chronos/create/parsing.types.ts"],"names":[],"mappings":"","sourcesContent":["import { Locale } from '../locale/locale.class';\r\nimport { DateArray, DateObject, WeekParsing } from '../types';\r\nimport { DateInput } from '../testing/chain';\r\n\r\nexport interface DateParsingConfig {\r\n  /** date value */\r\n  _d?: Date;\r\n  /** DateArray [year, month, date, .....] */\r\n  _a?: DateArray;\r\n  /** date meridiem */\r\n  _meridiem?: string;\r\n  /** is PM */\r\n  _isPm?: boolean;\r\n  // duplicate param?\r\n  _isUTC?: boolean;\r\n  _useUTC?: boolean;\r\n  /** input to parse: could be string, number[], number, Date, object */\r\n  _i?: DateInput;\r\n  /** locale key, 'en' by default */\r\n  _l?: string;\r\n  /** date locale obj */\r\n  _locale?: Locale;\r\n  /** date format */\r\n  _f?: string | string[];\r\n  /** use strict parse format */\r\n  _strict?: boolean;\r\n  /** add one day to result at the end of parsing */\r\n  _nextDay?: boolean;\r\n  /** utc time offset */\r\n  _offset?: number;\r\n  /** time zone */\r\n  _tzm?: number;\r\n  /** is valid */\r\n  _isValid?: boolean;\r\n  /** date parsing flags */\r\n  _pf?: DateParsingFlags;\r\n\r\n  /** date specific info */\r\n\r\n  /** week */\r\n  _w?: WeekParsing;\r\n  _dayOfYear?: number;\r\n  /** used in set offset */\r\n  _changeInProgress?: boolean;\r\n  /* used only in diff method */\r\n  _zoneDelta?: number;\r\n}\r\n\r\nexport interface DateParsingFlags {\r\n  _overflowDayOfYear?: boolean;\r\n  _overflowWeeks?: boolean;\r\n  _overflowWeekday?: boolean;\r\n  score?: number;\r\n  bigHour?: boolean;\r\n  empty: boolean;\r\n  unusedTokens: string[];\r\n  unusedInput: string[];\r\n  overflow: number;\r\n  charsLeftOver: number;\r\n  nullInput: boolean;\r\n  invalidMonth: boolean;\r\n  invalidWeekday?: boolean;\r\n  invalidFormat: boolean;\r\n  userInvalidated: boolean;\r\n  iso: boolean;\r\n  parsedDateParts: DateArray;\r\n  meridiem: string;\r\n  rfc2822: boolean;\r\n  weekdayMismatch: boolean;\r\n}\r\n"]}