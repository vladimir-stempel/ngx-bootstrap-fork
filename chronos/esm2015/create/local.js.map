{"version":3,"file":"local.js","sourceRoot":"","sources":["../../../../../src/chronos/create/local.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAE9C,MAAM,UAAU,SAAS,CAAC,KAAgB,EAAE,MAA0B,EAC5C,SAAkB,EAAE,MAAgB,EAAE,KAAe;IAC7E,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,KAAK,CAAC;KACd;IAED,MAAM,MAAM,GAAG,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAEzE,OAAO,MAAM,CAAC,EAAE,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,IAAI;IAC7B,IAAI,CAAC,CAAC,IAAI,YAAY,IAAI,CAAC,EAAE;QAC3B,OAAO,IAAI,CAAC;KACb;IAED,OAAO,IAAI,IAAI,CACb,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,WAAW,EAAE,EAClB,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,WAAW,EAAE,EAClB,IAAI,CAAC,aAAa,EAAE,EACpB,IAAI,CAAC,aAAa,EAAE,EACpB,IAAI,CAAC,kBAAkB,EAAE,CAC1B,CAAC;AACJ,CAAC","sourcesContent":["import { createLocalOrUTC } from './from-anything';\r\nimport { DateInput } from '../testing/chain';\r\nimport { isDate } from '../utils/type-checks';\r\n\r\nexport function parseDate(input: DateInput, format?: string | string[],\r\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\r\n  if (isDate(input)) {\r\n    return input;\r\n  }\r\n\r\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\r\n\r\n  return config._d;\r\n}\r\n\r\nexport function utcAsLocal(date) {\r\n  if (!(date instanceof Date)) {\r\n    return null;\r\n  }\r\n\r\n  return new Date(\r\n    date.getUTCFullYear(),\r\n    date.getUTCMonth(),\r\n    date.getUTCDate(),\r\n    date.getUTCHours(),\r\n    date.getUTCMinutes(),\r\n    date.getUTCSeconds(),\r\n    date.getUTCMilliseconds()\r\n  );\r\n}\r\n"]}