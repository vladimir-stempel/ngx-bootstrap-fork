{"version":3,"sources":["../../../../src/chronos/utils.ts","../../../../src/chronos/utils/type-checks.ts","../../../../src/chronos/units/aliases.ts","../../../../src/chronos/utils/zero-fill.ts","../../../../src/chronos/format/format.ts","../../../../src/chronos/create/date-from-array.ts","../../../../src/chronos/utils/date-getters.ts","../../../../src/chronos/parse/regex.ts","../../../../src/chronos/parse/token.ts","../../../../src/chronos/units/priorities.ts","../../../../src/chronos/create/parsing-flags.ts","../../../../src/chronos/units/year.ts","../../../../src/chronos/units/month.ts","../../../../src/chronos/utils/date-setters.ts","../../../../src/chronos/create/clone.ts","../../../../src/chronos/utils/start-end-of.ts","../../../../src/chronos/units/day-of-week.ts","../../../../src/chronos/units/day-of-year.ts","../../../../src/chronos/units/week-calendar-utils.ts","../../../../src/chronos/locale/locale.class.ts","../../../../src/chronos/locale/calendar.ts","../../../../src/chronos/locale/locale.defaults.ts","../../../../src/chronos/utils/compare-arrays.ts","../../../../src/chronos/units/week.ts","../../../../src/chronos/units/week-year.ts","../../../../src/chronos/units/timestamp.ts","../../../../src/chronos/units/quarter.ts","../../../../src/chronos/units/constants.ts","../../../../src/chronos/units/offset.ts","../../../../src/chronos/units/hour.ts","../../../../src/chronos/locale/locales.ts","../../../../src/chronos/units/timezone.ts","../../../../src/chronos/units/second.ts","../../../../src/chronos/units/minute.ts","../../../../src/chronos/units/millisecond.ts","../../../../src/chronos/units/day-of-month.ts","../../../../src/chronos/duration/valid.ts","../../../../src/chronos/utils/abs-ceil.ts","../../../../src/chronos/duration/bubble.ts","../../../../src/chronos/duration/humanize.ts","../../../../src/chronos/duration/constructor.ts","../../../../src/chronos/create/valid.ts","../../../../src/chronos/create/from-string.ts","../../../../src/chronos/format.ts","../../../../src/chronos/utils/defaults.ts","../../../../src/chronos/create/from-array.ts","../../../../src/chronos/create/check-overflow.ts","../../../../src/chronos/create/from-string-and-format.ts","../../../../src/chronos/create/from-object.ts","../../../../src/chronos/create/from-anything.ts","../../../../src/chronos/create/from-string-and-array.ts","../../../../src/chronos/create/local.ts","../../../../src/chronos/utils/abs-round.ts","../../../../src/chronos/utils/date-compare.ts","../../../../src/chronos/duration/create.ts","../../../../src/chronos/moment/add-subtract.ts","../../../../src/chronos/i18n/ar.ts","../../../../src/chronos/i18n/bg.ts","../../../../src/chronos/i18n/ca.ts","../../../../src/chronos/i18n/cs.ts","../../../../src/chronos/i18n/da.ts","../../../../src/chronos/i18n/de.ts","../../../../src/chronos/i18n/en-gb.ts","../../../../src/chronos/i18n/es-do.ts","../../../../src/chronos/i18n/es.ts","../../../../src/chronos/i18n/es-us.ts","../../../../src/chronos/i18n/et.ts","../../../../src/chronos/i18n/fi.ts","../../../../src/chronos/i18n/fr.ts","../../../../src/chronos/i18n/gl.ts","../../../../src/chronos/i18n/he.ts","../../../../src/chronos/i18n/hi.ts","../../../../src/chronos/i18n/hu.ts","../../../../src/chronos/i18n/hr.ts","../../../../src/chronos/i18n/id.ts","../../../../src/chronos/i18n/it.ts","../../../../src/chronos/i18n/ja.ts","../../../../src/chronos/i18n/ka.ts","../../../../src/chronos/i18n/kk.ts","../../../../src/chronos/i18n/ko.ts","../../../../src/chronos/i18n/lt.ts","../../../../src/chronos/i18n/lv.ts","../../../../src/chronos/i18n/mn.ts","../../../../src/chronos/i18n/nb.ts","../../../../src/chronos/i18n/nl-be.ts","../../../../src/chronos/i18n/nl.ts","../../../../src/chronos/i18n/pl.ts","../../../../src/chronos/i18n/pt-br.ts","../../../../src/chronos/i18n/ro.ts","../../../../src/chronos/i18n/ru.ts","../../../../src/chronos/i18n/sk.ts","../../../../src/chronos/i18n/sl.ts","../../../../src/chronos/i18n/sq.ts","../../../../src/chronos/i18n/sv.ts","../../../../src/chronos/i18n/th.ts","../../../../src/chronos/i18n/th-be.ts","../../../../src/chronos/i18n/tr.ts","../../../../src/chronos/i18n/uk.ts","../../../../src/chronos/i18n/vi.ts","../../../../src/chronos/i18n/zh-cn.ts"],"names":["absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","length","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","removeFormattingTokens","match","replace","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","isUTC","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","isSameMonth","date1","date2","isSameYear","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","array","config","i","addWeekParseToken","_w","addTimeToArrayFromToken","_a","priorities","addUnitPriority","priority","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getYear","parseTwoDigitYear","daysInYear","year","isLeapYear","daysInMonth","month","NaN","x","modMonth","defaultTimeUnit","day","seconds","getNum","def","setMonth","dayOfMonth","min","setUTCMonth","setDate","setUTCDate","cloneDate","startOf","_date","setUTCHours","setHours","setUTCMinutes","setMinutes","setUTCSeconds","setSeconds","setUTCMilliseconds","setMilliseconds","weekday","getLocaleDayOfWeek","add","setLocaleDayOfWeek","getLocale","weekdaysParse","parseIsoWeekday","setDayOfWeek","getDayOfWeek","setISODayOfWeek","endOf","subtract","getDayOfYear","someDate","round","firstWeekOffset","dow","doy","fwd","dayOfYearFromWeeks","week","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultMonthsShortRegex","defaultMonthsRegex","Locale","this","set","confKey","prop","_config","calendar","key","now","output","_calendar","sameElse","longDateFormat","format","_longDateFormat","formatUpper","toUpperCase","val","slice","defineProperty","_invalidDate","_ordinal","preparse","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","months","_months","standalone","isFormat","test","monthsShort","_monthsShort","monthsParse","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","monthsRegex","computeMonthsParse","_monthsStrictRegex","_monthsRegex","monthsShortRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfWeek","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","ii","mom","llc","toLocaleLowerCase","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","baseConfig","sameDay","nextDay","nextWeek","lastDay","lastWeek","invalidDate","dayOfMonthOrdinalParse","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","getWeek","getISOWeek","addWeekYearFormatToken","getter","_getWeekYearFormatCb","getWeekYear","_getISOWeekYearFormatCb","getISOWeekYear","initTimestamp","valueOf","unix","_d","parseFloat","initQuarter","getQuarter","addOffsetFormatToken","separator","offset","getUTCOffset","_isUTC","_offset","sign","chunkOffset","offsetFromString","matcher","matches","parts","parseInt","_min","getDateOffset","getTimezoneOffset","initHour","hFormat","lowercase","matchMeridiem","_meridiemParse","kFormat","kInput","_isPm","_locale","_meridiem","bigHour","pos","pos1","pos2","globalLocale","locales","localeFamilies","normalizeLocale","mergeConfigs","parentConfig","childConfig","res","assign","childProp","parentProp","loadLocale","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","_useUTC","_tzm","_strict","parseMs","initMillisecond","_dayOfYear","getISODayOfWeek","invalidWeekday","_dayOfMonthOrdinalParse","_ordinalParse","setDefaultLocale","names","next","j","chooseLocale","ordering","orderingHash","reduce","mem","order","absCeil","number","daysToMonths","monthsToDays","thresholds","substituteTimeAgo","Duration","duration","_data","normalizedInput","years","quarters","quarter","weeks","days","milliseconds","_isValid","keys","some","unitHasDecimal","isDurationValid","_milliseconds","_days","dur","monthsFromDays","bubble","isValid","humanize","withSuffix","localeData","posNegDuration","createDuration","as","localeKey","mathAbs","_units","Error","flags","parsedParts","isNowValid","isFrozen","createInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","allowTime","dateFormat","timeFormat","tzFormat","l","exec","_f","configFromStringAndFormat","untruncateYear","yearStr","configFromRFC2822","trim","markInvalid","monthStr","dayStr","hourStr","minuteStr","secondStr","result","parsedArray","weekdayStr","parsedInput","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","expandFormat","_format","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","configFromArray","yearToUse","currentDate","nowValue","currentDateArray","weekYear","temp","weekdayOverflow","w","GG","W","E","curWeek","gg","e","_overflowWeeks","_overflowWeekday","dayOfYearFromWeekInfo","_overflowDayOfYear","_nextDay","expectedWeekday","checkOverflow","skipped","totalParsedInputLength","inputLength","_hour","meridiemHour","isPm","meridiemFixWrap","configFromObject","inputObject","normalizedProp","normalizeObjectUnits","map","obj","createFromConfig","_l","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","configFromString","_arr","configFromInput","prepareConfig","createLocalOrUTC","_input","getOwnPropertyNames","k","isObjectEmpty","parseDate","absRound","isAfter","isBefore","isSame","inputMs","aspNetRegex","isoRegex","parseIso","diffRes","base","other","_other","offsetDiff","setTime","cloneWithOffset","positiveMomentsDifference","momentsDifference","from","to","convertDuration","inp","period","addSubtract","isAdding","_num","_weekDay","parseWeekday","symbolMap","1","2","3","4","5","6","7","8","9","0","numberMap","١","٢","٣","٤","٥","٦","٧","٨","٩","٠","pluralForm","plurals","pluralize","u","f","arLocale","weekdaysParseExact","bgLocale","Number","lastDigit","last2Digits","monthsShortDot","caLocale","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","plural","translate","csLocale","months$1","monthsShort$1","daLocale","processRelativeTime","deLocale","monthsParseExact","enGbLocale","esDoLocale","monthsRegex$1","monthsParse$1","esLocale","monthsRegex$2","monthsParse$2","esUsLocale","etLocale","numbersPast","numbersFuture","verbalNumber","fiLocale","ll","lll","llll","frLocale","glLocale","monthsRegex$3","monthsParse$3","heLocale","१","२","३","४","५","६","७","८","९","०","hiLocale","weekEndings","huLocale","hrLocale","idLocale","itLocale","jaLocale","kaLocale","st","_period","suffixes","10","20","30","40","50","60","70","80","90","100","kkLocale","koLocale","isUpper","translateSingular","forms","special","ltLocale","lvLocale","mnLocale","nbLocale","monthsShortWithDots","monthsShortWithoutDots","nlBeLocale","monthsRegex$4","monthsParse$4","nlLocale","monthsRegex$5","monthsParse$5","monthsNominative","monthsSubjective","plLocale","ptBrLocale","relativeTimeWithPlural","roLocale","word","ruLocale","monthsParse$6","skLocale","slLocale","sqLocale","svLocale","thLocale","thBeLocale","trLocale","processHoursFunction","ukLocale","nominative","accusative","genitive","viLocale","zhCnLocale","formatArr","makeFormatFunction","formatMoment","daysDisabled","tmpLocale"],"mappings":"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","sourcesContent":["\r\n\r\nexport function mod(n: number, x: number): number {\r\n  return (n % x + x) % x;\r\n}\r\n\r\nexport function absFloor(num: number): number {\r\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\r\n}\r\n\r\n","import { absFloor } from '../utils';\r\n\r\nexport function isString(str: any): str is string {\r\n  return typeof str === 'string';\r\n}\r\n\r\nexport function isDate(value: any): value is Date {\r\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\r\n}\r\n\r\nexport function isBoolean(value: any): value is boolean {\r\n  return value === true || value === false;\r\n}\r\n\r\nexport function isDateValid(date: Date): boolean {\r\n  return date && date.getTime && !isNaN(date.getTime());\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function isFunction(fn: any): fn is Function {\r\n  return (\r\n    fn instanceof Function ||\r\n    Object.prototype.toString.call(fn) === '[object Function]'\r\n  );\r\n}\r\n\r\nexport function isNumber(value?: any): value is number {\r\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\r\n}\r\n\r\nexport function isArray<T>(input?: any): input is T[] {\r\n  return (\r\n    input instanceof Array ||\r\n    Object.prototype.toString.call(input) === '[object Array]'\r\n  );\r\n}\r\n\r\nexport function hasOwnProp<T>(a: T /*object*/, b: string): b is Extract<keyof T, string> {\r\n  return Object.prototype.hasOwnProperty.call(a, b);\r\n}\r\n\r\nexport function isObject<T>(input: any /*object*/): input is T {\r\n  // IE8 will treat undefined and null as object if it wasn't for\r\n  // input != null\r\n  return (\r\n    input != null && Object.prototype.toString.call(input) === '[object Object]'\r\n  );\r\n}\r\n\r\nexport function isObjectEmpty(obj: any): boolean {\r\n  if (Object.getOwnPropertyNames) {\r\n    return (Object.getOwnPropertyNames(obj).length === 0);\r\n  }\r\n  let k;\r\n  for (k in obj) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (obj.hasOwnProperty(k)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n\r\nexport function isUndefined(input: any): boolean {\r\n  return input === void 0;\r\n}\r\n\r\nexport function toInt<T>(argumentForCoercion: string | number | T): number {\r\n  const coercedNumber = +argumentForCoercion;\r\n  let value = 0;\r\n\r\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\r\n    value = absFloor(coercedNumber);\r\n  }\r\n\r\n  return value;\r\n}\r\n","import { hasOwnProp, isString } from '../utils/type-checks';\r\nimport { DateObject, UnitOfTime } from '../types';\r\n\r\nconst aliases: { [key: string]: string } = {};\r\n\r\nexport type ExtendedUnitOfTime = UnitOfTime | 'date' | 'week' | 'isoWeek' | 'dayOfYear' |\r\n  'weekday' | 'isoWeekday' | 'second' | 'millisecond' | 'minute' | 'hour' | 'quarter' | 'weekYear' | 'isoWeekYear';\r\n\r\nconst _mapUnits: { [key: string]: UnitOfTime } = {\r\n  date: 'day',\r\n  hour: 'hours',\r\n  minute: 'minutes',\r\n  second: 'seconds',\r\n  millisecond: 'milliseconds'\r\n};\r\n\r\nexport function addUnitAlias(unit: ExtendedUnitOfTime, shorthand: string): void {\r\n  const lowerCase = unit.toLowerCase();\r\n  let _unit = unit;\r\n  if (lowerCase in _mapUnits) {\r\n    _unit = _mapUnits[lowerCase];\r\n  }\r\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\r\n}\r\n\r\nexport function normalizeUnits(units: string | string[]): string {\r\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\r\n}\r\n\r\nexport function normalizeObjectUnits(inputObject: Record<string, unknown>): DateObject {\r\n  const normalizedInput: Record<string, unknown> = {};\r\n  let normalizedProp;\r\n  let prop;\r\n\r\n  for (prop in inputObject) {\r\n    if (hasOwnProp(inputObject, prop)) {\r\n      normalizedProp = normalizeUnits(prop);\r\n      if (normalizedProp) {\r\n        normalizedInput[normalizedProp] = inputObject[prop];\r\n      }\r\n    }\r\n  }\r\n\r\n  return normalizedInput;\r\n}\r\n","export function zeroFill(num: number,\r\n                         targetLength: number,\r\n                         forceSign?: boolean): string {\r\n  const absNumber = `${Math.abs(num)}`;\r\n  const zerosToFill = targetLength - absNumber.length;\r\n  const sign = num >= 0;\r\n  const _sign = sign ? (forceSign ? '+' : '') : '-';\r\n  // todo: this is crazy slow\r\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\r\n\r\n  return (_sign + _zeros + absNumber);\r\n}\r\n","import { Locale } from '../locale/locale.class';\r\nimport { zeroFill } from '../utils/zero-fill';\r\nimport { isFunction } from '../utils/type-checks';\r\nimport { DateFormatterOptions, DateFormatterFn } from '../types';\r\n\r\nexport const formatFunctions: {\r\n  [key: string]: (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string;\r\n} = {};\r\nexport const formatTokenFunctions: { [key: string]: DateFormatterFn } = {};\r\n\r\nexport const formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\r\n\r\n// token:    'M'\r\n// padded:   ['MM', 2]\r\n// ordinal:  'Mo'\r\n// callback: function () { this.month() + 1 }\r\nexport function addFormatToken(token: string,\r\n                               padded: [string, number, boolean],\r\n                               ordinal: string,\r\n                               callback: DateFormatterFn): void {\r\n\r\n  if (token) {\r\n    formatTokenFunctions[token] = callback;\r\n  }\r\n\r\n  if (padded) {\r\n    formatTokenFunctions[padded[0]] = function (): string {\r\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\r\n    };\r\n  }\r\n\r\n  if (ordinal) {\r\n    formatTokenFunctions[ordinal] = function (date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\r\n    };\r\n  }\r\n}\r\n\r\nexport function makeFormatFunction(format: string):\r\n  (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string {\r\n\r\n  const array: string[] = format.match(formattingTokens);\r\n  const length = array.length;\r\n\r\n  const formatArr: string[] | DateFormatterFn[] = new Array(length);\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    formatArr[i] = formatTokenFunctions[array[i]]\r\n      ? formatTokenFunctions[array[i]]\r\n      : removeFormattingTokens(array[i]);\r\n  }\r\n\r\n  return function (date: Date, locale: Locale, isUTC: boolean, offset = 0): string {\r\n\r\n    let output = '';\r\n    for (let j = 0; j < length; j++) {\r\n      output += isFunction(formatArr[j])\r\n        ? (formatArr[j] as DateFormatterFn).call(null, date, {format, locale, isUTC, offset})\r\n        : formatArr[j];\r\n    }\r\n\r\n    return output;\r\n  };\r\n}\r\n\r\nfunction removeFormattingTokens(input: string): string {\r\n  if (input.match(/\\[[\\s\\S]/)) {\r\n    return input.replace(/^\\[|\\]$/g, '');\r\n  }\r\n\r\n  return input.replace(/\\\\/g, '');\r\n}\r\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport function createUTCDate(y?: number, m?: number, d?: number): Date {\r\n  // eslint-disable-next-line prefer-rest-params\r\n  const date = new Date(Date.UTC.apply(null, arguments));\r\n\r\n  // the Date.UTC function remaps years 0-99 to 1900-1999\r\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\r\n    date.setUTCFullYear(y);\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nexport function createDate(y?: number,\r\n                           m = 0,\r\n                           d = 1,\r\n                           h = 0,\r\n                           M = 0,\r\n                           s = 0,\r\n                           ms = 0): Date {\r\n  const date = new Date(y, m, d, h, M, s, ms);\r\n\r\n  // the date constructor remaps years 0-99 to 1900-1999\r\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\r\n    date.setFullYear(y);\r\n  }\r\n\r\n  return date;\r\n}\r\n","import { createDate } from '../create/date-from-array';\r\n\r\nexport function getHours(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCHours() : date.getHours();\r\n}\r\n\r\nexport function getMinutes(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\r\n}\r\n\r\nexport function getSeconds(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\r\n}\r\n\r\nexport function getMilliseconds(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\r\n}\r\nexport function getTime(date: Date): number {\r\n  return date.getTime();\r\n}\r\n\r\nexport function getDay(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCDay() : date.getDay();\r\n}\r\n\r\nexport function getDate(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCDate() : date.getDate();\r\n}\r\n\r\nexport function getMonth(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCMonth() : date.getMonth();\r\n}\r\n\r\nexport function getFullYear(date: Date, isUTC = false): number {\r\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\r\n}\r\n\r\nexport function getUnixTime(date: Date): number {\r\n  return Math.floor(date.valueOf() / 1000);\r\n}\r\n\r\nexport function unix(date: Date): number {\r\n  return Math.floor(date.valueOf() / 1000);\r\n}\r\n\r\nexport function getFirstDayOfMonth(date: Date): Date {\r\n  return createDate(\r\n    date.getFullYear(),\r\n    date.getMonth(),\r\n    1,\r\n    date.getHours(),\r\n    date.getMinutes(),\r\n    date.getSeconds()\r\n  );\r\n}\r\n\r\nexport function daysInMonth(date: Date): number {\r\n  return _daysInMonth(date.getFullYear(), date.getMonth());\r\n}\r\n\r\nexport function _daysInMonth(year: number, month: number): number {\r\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\r\n}\r\n\r\nexport function isFirstDayOfWeek(date: Date, firstDayOfWeek: number): boolean {\r\n  return date.getDay() === firstDayOfWeek;\r\n}\r\n\r\nexport function isSameMonth(date1: Date, date2: Date) {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\r\n}\r\n\r\nexport function isSameYear(date1: Date, date2: Date) {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  return getFullYear(date1) === getFullYear(date2);\r\n}\r\n\r\nexport function isSameDay(date1: Date, date2: Date): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    isSameYear(date1, date2) &&\r\n    isSameMonth(date1, date2) &&\r\n    getDate(date1) === getDate(date2)\r\n  );\r\n}\r\n","import { hasOwnProp, isFunction } from '../utils/type-checks';\r\nimport { Locale } from '../locale/locale.class';\r\n\r\nexport const match1 = /\\d/;            //       0 - 9\r\nexport const match2 = /\\d\\d/;          //      00 - 99\r\nexport const match3 = /\\d{3}/;         //     000 - 999\r\nexport const match4 = /\\d{4}/;         //    0000 - 9999\r\nexport const match6 = /[+-]?\\d{6}/;    // -999999 - 999999\r\nexport const match1to2 = /\\d\\d?/;         //       0 - 99\r\nexport const match3to4 = /\\d\\d\\d\\d?/;     //     999 - 9999\r\nexport const match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\r\nexport const match1to3 = /\\d{1,3}/;       //       0 - 999\r\nexport const match1to4 = /\\d{1,4}/;       //       0 - 9999\r\nexport const match1to6 = /[+-]?\\d{1,6}/;  // -999999 - 999999\r\n\r\nexport const matchUnsigned = /\\d+/;           //       0 - inf\r\nexport const matchSigned = /[+-]?\\d+/;      //    -inf - inf\r\n\r\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\r\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\r\n\r\nexport const matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\r\n\r\n// any word (or two) characters or numbers including two/three word month in arabic.\r\n// includes scottish gaelic two word and hyphenated months\r\nexport const matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\r\n\r\nexport type RegExpTokenFn = (isStrict: boolean, locale: Locale) => RegExp;\r\nconst regexes: {[key: string]: RegExpTokenFn} = {};\r\n\r\n\r\nexport function addRegexToken(token: string, regex: RegExp | RegExpTokenFn, strictRegex?: RegExp): void {\r\n  if (isFunction(regex)) {\r\n    regexes[token] = regex;\r\n\r\n    return;\r\n  }\r\n\r\n  regexes[token] = function (isStrict: boolean, locale: Locale) {\r\n    return (isStrict && strictRegex) ? strictRegex : regex;\r\n  };\r\n}\r\n\r\nexport function getParseRegexForToken(token: string, locale: Locale): RegExp {\r\n  const _strict = false;\r\n  if (!hasOwnProp(regexes, token)) {\r\n    return new RegExp(unescapeFormat(token));\r\n  }\r\n\r\n  return regexes[token](_strict, locale);\r\n}\r\n\r\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\r\nfunction unescapeFormat(str: string): string {\r\n  return regexEscape(str\r\n    .replace('\\\\', '')\r\n    .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)\r\n  );\r\n}\r\n\r\nexport function regexEscape(str: string): string {\r\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n","import { hasOwnProp, isArray, isFunction, isNumber, isString, toInt } from '../utils/type-checks';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { DateArray, DateParseTokenFn } from '../types';\r\n\r\nconst tokens: {[key: string]: DateParseTokenFn} = {};\r\n\r\nexport function addParseToken(token: string | string[], callback: DateParseTokenFn | number) {\r\n  const _token = isString(token) ? [token] : token;\r\n  let func = callback;\r\n\r\n  if (isNumber(callback)) {\r\n    func = function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      array[callback] = toInt(input);\r\n\r\n      return config;\r\n    };\r\n  }\r\n\r\n  if (isArray<string>(_token) && isFunction(func)) {\r\n    let i;\r\n    for (i = 0; i < _token.length; i++) {\r\n      tokens[_token[i]] = func;\r\n    }\r\n  }\r\n}\r\n\r\nexport function addWeekParseToken(token: string[], callback: DateParseTokenFn): void {\r\n  addParseToken(token, function (input: string, array: DateArray, config: DateParsingConfig, _token: string): DateParsingConfig {\r\n    config._w = config._w || {};\r\n\r\n    return callback(input, config._w, config, _token);\r\n  });\r\n}\r\n\r\n\r\nexport function addTimeToArrayFromToken(token: string, input: string, config: DateParsingConfig): DateParsingConfig {\r\n  if (input != null && hasOwnProp(tokens, token)) {\r\n    tokens[token](input, config._a, config, token);\r\n  }\r\n\r\n  return config;\r\n}\r\n","const priorities: {[key: string]: number} = {};\r\n\r\nexport function addUnitPriority(unit: string, priority: number): void {\r\n  priorities[unit] = priority;\r\n}\r\n\r\n/*\r\nexport function getPrioritizedUnits(unitsObj) {\r\n  const units = [];\r\n  let unit;\r\n  for (unit in unitsObj) {\r\n    if (unitsObj.hasOwnProperty(unit)) {\r\n      units.push({ unit, priority: priorities[unit] });\r\n    }\r\n  }\r\n  units.sort(function (a, b) {\r\n    return a.priority - b.priority;\r\n  });\r\n\r\n  return units;\r\n}\r\n*/\r\n","import { DateParsingConfig, DateParsingFlags } from './parsing.types';\r\n\r\nfunction defaultParsingFlags(): DateParsingFlags {\r\n  // We need to deep clone this object.\r\n  return {\r\n    empty: false,\r\n    unusedTokens: [],\r\n    unusedInput: [],\r\n    overflow: -2,\r\n    charsLeftOver: 0,\r\n    nullInput: false,\r\n    invalidMonth: null,\r\n    invalidFormat: false,\r\n    userInvalidated: false,\r\n    iso: false,\r\n    parsedDateParts: [],\r\n    meridiem: null,\r\n    rfc2822: false,\r\n    weekdayMismatch: false\r\n  };\r\n}\r\n\r\nexport function getParsingFlags(config: DateParsingConfig): DateParsingFlags {\r\n  if (config._pf == null) {\r\n    config._pf = defaultParsingFlags();\r\n  }\r\n\r\n  return config._pf;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getFullYear } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { YEAR } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n// FORMATTING\r\n\r\nfunction getYear(date: Date, opts: DateFormatterOptions): string {\r\n  if (opts.locale.getFullYear) {\r\n    return opts.locale.getFullYear(date, opts.isUTC).toString();\r\n  }\r\n  return getFullYear(date, opts.isUTC).toString();\r\n}\r\n\r\nexport function initYear() {\r\n  addFormatToken('Y', null, null,\r\n    function (date: Date, opts: DateFormatterOptions): string {\r\n    const y = getFullYear(date, opts.isUTC);\r\n\r\n    return y <= 9999 ? y.toString(10) : `+${y}`;\r\n  });\r\n\r\n  addFormatToken(null, ['YY', 2, false], null,\r\n    function (date: Date, opts: DateFormatterOptions): string {\r\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\r\n  });\r\n\r\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\r\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\r\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\r\n\r\n  // ALIASES\r\n\r\n  addUnitAlias('year', 'y');\r\n\r\n  // PRIORITIES\r\n\r\n  addUnitPriority('year', 1);\r\n\r\n  // PARSING\r\n\r\n  addRegexToken('Y', matchSigned);\r\n  addRegexToken('YY', match1to2, match2);\r\n  addRegexToken('YYYY', match1to4, match4);\r\n  addRegexToken('YYYYY', match1to6, match6);\r\n  addRegexToken('YYYYYY', match1to6, match6);\r\n\r\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\r\n  addParseToken('YYYY', function (input, array, config) {\r\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\r\n\r\n    return config;\r\n  });\r\n  addParseToken('YY', function (input, array, config) {\r\n    array[YEAR] = parseTwoDigitYear(input);\r\n\r\n    return config;\r\n  });\r\n  addParseToken('Y', function (input, array, config) {\r\n    array[YEAR] = parseInt(input, 10);\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\nexport function parseTwoDigitYear(input: string): number {\r\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\r\n}\r\n\r\nexport function daysInYear(year: number): number {\r\n  return isLeapYear(year) ? 366 : 365;\r\n}\r\n\r\nexport function isLeapYear(year: number): boolean {\r\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { isLeapYear } from './year';\r\nimport { mod } from '../utils';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { MONTH } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\n\r\n// todo: this is duplicate, source in date-getters.ts\r\nexport function daysInMonth(year: number, month: number): number {\r\n  if (isNaN(year) || isNaN(month)) {\r\n    return NaN;\r\n  }\r\n  const modMonth = mod(month, 12);\r\n  const _year = year + (month - modMonth) / 12;\r\n\r\n  return modMonth === 1\r\n    ? isLeapYear(_year) ? 29 : 28\r\n    : (31 - modMonth % 7 % 2);\r\n}\r\n\r\nexport function initMonth() {\r\n// FORMATTING\r\n\r\n  addFormatToken('M', ['MM', 2, false], 'Mo',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMonth(date, opts.isUTC) + 1).toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('MMM', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.monthsShort(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('MMMM', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.months(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('month', 'M');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('month', 8);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('M', match1to2);\r\n  addRegexToken('MM', match1to2, match2);\r\n  addRegexToken('MMM', function(isStrict, locale) {\r\n    return locale.monthsShortRegex(isStrict);\r\n  });\r\n  addRegexToken('MMMM', function(isStrict, locale) {\r\n    return locale.monthsRegex(isStrict);\r\n  });\r\n\r\n  addParseToken(['M', 'MM'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[MONTH] = toInt(input) - 1;\r\n\r\n    return config;\r\n  });\r\n\r\n  addParseToken(\r\n    ['MMM', 'MMMM'],\r\n    function(input: string, array: DateArray, config: DateParsingConfig, token: string): DateParsingConfig {\r\n      const month = config._locale.monthsParse(input, token, config._strict);\r\n      // if we didn't find a month name, mark the date as invalid.\r\n      if (month != null) {\r\n        array[MONTH] = month;\r\n      } else {\r\n        getParsingFlags(config).invalidMonth = !!input;\r\n      }\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n","import { TimeUnit } from '../types';\r\nimport { daysInMonth } from '../units/month';\r\nimport { isNumber } from './type-checks';\r\nimport { getDate, getFullYear, getMonth } from './date-getters';\r\nimport { isLeapYear } from '../units/year';\r\nimport { createDate } from '../create/date-from-array';\r\n\r\nconst defaultTimeUnit: TimeUnit = {\r\n  year: 0,\r\n  month: 0,\r\n  day: 0,\r\n  hour: 0,\r\n  minute: 0,\r\n  seconds: 0\r\n};\r\n\r\nexport function shiftDate(date: Date, unit: TimeUnit): Date {\r\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\r\n  const year = date.getFullYear() + (_unit.year || 0);\r\n  const month = date.getMonth() + (_unit.month || 0);\r\n  let day = date.getDate() + (_unit.day || 0);\r\n  if (_unit.month && !_unit.day) {\r\n    day = Math.min(day, daysInMonth(year, month));\r\n  }\r\n\r\n  return createDate(\r\n    year,\r\n    month,\r\n    day,\r\n    date.getHours() + (_unit.hour || 0),\r\n    date.getMinutes() + (_unit.minute || 0),\r\n    date.getSeconds() + (_unit.seconds || 0)\r\n  );\r\n}\r\n\r\nexport function setFullDate(date: Date, unit: TimeUnit): Date {\r\n  return createDate(\r\n    getNum(date.getFullYear(), unit.year),\r\n    getNum(date.getMonth(), unit.month),\r\n    1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\r\n    getNum(date.getHours(), unit.hour),\r\n    getNum(date.getMinutes(), unit.minute),\r\n    getNum(date.getSeconds(), unit.seconds),\r\n    getNum(date.getMilliseconds(), unit.milliseconds)\r\n  );\r\n}\r\n\r\nfunction getNum(def: number, num?: number): number {\r\n  return isNumber(num) ? num : def;\r\n}\r\n\r\nexport function setFullYear(date: Date, value: number, isUTC?: boolean): Date {\r\n  const _month = getMonth(date, isUTC);\r\n  const _date = getDate(date, isUTC);\r\n  const _year = getFullYear(date, isUTC);\r\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\r\n    const _daysInMonth = daysInMonth(value, _month);\r\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\r\n  }\r\n\r\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setMonth(date: Date, value: number, isUTC?: boolean): Date {\r\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\r\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setDay(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setHours(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setMinutes(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setSeconds(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setMilliseconds(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setDate(date: Date, value: number, isUTC?: boolean): Date {\r\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\r\n\r\n  return date;\r\n}\r\n\r\nexport function setTime(date: Date, value: number): Date {\r\n  date.setTime(value);\r\n\r\n  return date;\r\n}\r\n","// fastest way to clone date\r\n// https://jsperf.com/clone-date-object2\r\nexport function cloneDate(date: Date): Date {\r\n  return new Date(date.getTime());\r\n}\r\n","import { TimeUnit, UnitOfTime } from '../types';\r\nimport {\r\n  setDate, setFullDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds,\r\n  shiftDate\r\n} from './date-setters';\r\nimport { cloneDate } from '../create/clone';\r\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\r\nimport { getMonth } from './date-getters';\r\nimport { add, subtract } from '../moment/add-subtract';\r\n\r\nexport function startOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\r\n  const _date = cloneDate(date);\r\n  // the following switch intentionally omits break keywords\r\n  // to utilize falling through the cases.\r\n  switch (unit) {\r\n    case 'year':\r\n      setMonth(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'quarter':\r\n    case 'month':\r\n      setDate(_date, 1, isUTC);\r\n    /* falls through */\r\n    case 'week':\r\n    case 'isoWeek':\r\n    case 'day':\r\n    case 'date':\r\n      setHours(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'hours':\r\n      setMinutes(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'minutes':\r\n      setSeconds(_date, 0, isUTC);\r\n    /* falls through */\r\n    case 'seconds':\r\n      setMilliseconds(_date, 0, isUTC);\r\n  }\r\n\r\n  // weeks are a special case\r\n  if (unit === 'week') {\r\n    setLocaleDayOfWeek(_date, 0, {isUTC});\r\n  }\r\n  if (unit === 'isoWeek') {\r\n    setISODayOfWeek(_date, 1);\r\n  }\r\n\r\n  // quarters are also special\r\n  if (unit === 'quarter') {\r\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\r\n  }\r\n\r\n  return _date;\r\n}\r\n\r\nexport function endOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\r\n  let _unit = unit;\r\n  // 'date' is an alias for 'day', so it should be considered as such.\r\n  if (_unit === 'date') {\r\n    _unit = 'day';\r\n  }\r\n\r\n  const start = startOf(date, _unit, isUTC);\r\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\r\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\r\n\r\n  return res;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { getDay } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2 } from '../parse/regex';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addWeekParseToken } from '../parse/token';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\nimport { isNumber, isString, toInt } from '../utils/type-checks';\r\nimport { DateFormatterOptions, WeekParsing } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { add } from '../moment/add-subtract';\r\nimport { getLocale } from '../locale/locales';\r\n\r\n\r\nexport function initDayOfWeek() {\r\n// FORMATTING\r\n\r\n  addFormatToken('d', null, 'do',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getDay(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('dd', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('ddd', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('dddd', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.locale.weekdays(date, opts.format, opts.isUTC);\r\n    }\r\n  );\r\n\r\n  addFormatToken('e', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\r\n        .toString(10);\r\n      // return getDay(date, opts.isUTC).toString(10);\r\n    }\r\n  );\r\n  addFormatToken('E', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getISODayOfWeek(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('day', 'd');\r\n  addUnitAlias('weekday', 'e');\r\n  addUnitAlias('isoWeekday', 'E');\r\n\r\n// PRIORITY\r\n  addUnitPriority('day', 11);\r\n  addUnitPriority('weekday', 11);\r\n  addUnitPriority('isoWeekday', 11);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('d', match1to2);\r\n  addRegexToken('e', match1to2);\r\n  addRegexToken('E', match1to2);\r\n\r\n  addRegexToken('dd', function(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale.weekdaysMinRegex(isStrict);\r\n  });\r\n\r\n  addRegexToken('ddd', function(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale.weekdaysShortRegex(isStrict);\r\n  });\r\n  addRegexToken('dddd', function(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale.weekdaysRegex(isStrict);\r\n  });\r\n\r\n  addWeekParseToken(\r\n    ['dd', 'ddd', 'dddd'],\r\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token) {\r\n      const weekday = config._locale.weekdaysParse(input, token, config._strict);\r\n      // if we didn't get a weekday name, mark the date as invalid\r\n      if (weekday != null) {\r\n        week.d = weekday;\r\n      } else {\r\n        getParsingFlags(config).invalidWeekday = !!input;\r\n      }\r\n\r\n      return config;\r\n    }\r\n  );\r\n\r\n  addWeekParseToken(\r\n    ['d', 'e', 'E'],\r\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\r\n      week[token] = toInt(input);\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n\r\n// HELPERS\r\n\r\nexport function parseWeekday(input: string | number, locale: Locale): number {\r\n  if (!isString(input)) {\r\n    return input;\r\n  }\r\n\r\n  const _num = parseInt(input, 10);\r\n  if (!isNaN(_num)) {\r\n    return _num;\r\n  }\r\n\r\n  const _weekDay = locale.weekdaysParse(input);\r\n  if (isNumber(_weekDay)) {\r\n    return _weekDay;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function parseIsoWeekday(input: string | number, locale: Locale = getLocale()): number {\r\n  if (isString(input)) {\r\n    return locale.weekdaysParse(input) % 7 || 7;\r\n  }\r\n\r\n  return isNumber(input) && isNaN(input) ? null : input;\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getSetDayOfWeek(date: Date, input: number, opts: { isUTC?: boolean; locale: Locale }): Date | number {\r\n  if (!input) {\r\n    return getDayOfWeek(date, opts.isUTC);\r\n  }\r\n\r\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\r\n}\r\n\r\nexport function setDayOfWeek(date: Date, input: number, locale = getLocale(), isUTC?: boolean): Date {\r\n  const day = getDay(date, isUTC);\r\n  const _input = parseWeekday(input, locale);\r\n\r\n  return add(date, _input - day, 'day');\r\n}\r\n\r\nexport function getDayOfWeek(date: Date, isUTC?: boolean): number {\r\n  return getDay(date, isUTC);\r\n}\r\n\r\n/********************************************/\r\n\r\n// todo: utc\r\n// getSetLocaleDayOfWeek\r\nexport function getLocaleDayOfWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\r\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\r\n}\r\n\r\nexport function setLocaleDayOfWeek(date: Date, input: number, opts: { locale?: Locale; isUTC?: boolean } = {}): Date {\r\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\r\n\r\n  return add(date, input - weekday, 'day');\r\n}\r\n\r\n\r\n// getSetISODayOfWeek\r\nexport function getISODayOfWeek(date: Date, isUTC?: boolean): number {\r\n  return getDay(date, isUTC) || 7;\r\n}\r\n\r\nexport function setISODayOfWeek(date: Date, input: number | string, opts: { locale?: Locale } = {}): Date {\r\n  // behaves the same as moment#day except\r\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\r\n  // as a setter, sunday should belong to the previous week.\r\n\r\n  const weekday = parseIsoWeekday(input, opts.locale);\r\n\r\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { startOf } from '../utils/start-end-of';\r\nimport { addRegexToken, match1to3, match3 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { add } from '../moment/add-subtract';\r\n\r\n\r\nexport function initDayOfYear() {\r\n// FORMATTING\r\n\r\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\r\n    function(date: Date): string {\r\n      return getDayOfYear(date)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('dayOfYear', 'DDD');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('dayOfYear', 4);\r\n\r\n  addRegexToken('DDD', match1to3);\r\n  addRegexToken('DDDD', match3);\r\n  addParseToken(\r\n    ['DDD', 'DDDD'],\r\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      config._dayOfYear = toInt(input);\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n\r\nexport function getDayOfYear(date: Date, isUTC?: boolean): number {\r\n  const date1 = +startOf(date, 'day', isUTC);\r\n  const date2 = +startOf(date, 'year', isUTC);\r\n  const someDate = date1 - date2;\r\n  const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n  return Math.round(someDate / oneDay) + 1;\r\n}\r\n\r\nexport function setDayOfYear(date: Date, input: number): Date {\r\n  const dayOfYear = getDayOfYear(date);\r\n\r\n  return add(date, (input - dayOfYear), 'day');\r\n}\r\n","/**\r\n *\r\n * @param {number} year\r\n * @param {number} dow - start-of-first-week\r\n * @param {number} doy - start-of-year\r\n * @returns {number}\r\n */\r\nimport { createUTCDate } from '../create/date-from-array';\r\nimport { daysInYear } from './year';\r\nimport { getDayOfYear } from './day-of-year';\r\nimport { getFullYear } from '../utils/date-getters';\r\n\r\nfunction firstWeekOffset(year: number, dow: number, doy: number): number {\r\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\r\n  const fwd = dow - doy + 7;\r\n  // first-week day local weekday -- which local weekday is fwd\r\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\r\n\r\n  return -fwdlw + fwd - 1;\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\r\nexport function dayOfYearFromWeeks(\r\n  year: number,\r\n  week: number,\r\n  weekday: number,\r\n  dow: number,\r\n  doy: number\r\n): { year: number; dayOfYear: number } {\r\n  const localWeekday = (7 + weekday - dow) % 7;\r\n  const weekOffset = firstWeekOffset(year, dow, doy);\r\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\r\n  let resYear: number;\r\n  let resDayOfYear: number;\r\n\r\n  if (dayOfYear <= 0) {\r\n    resYear = year - 1;\r\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\r\n  } else if (dayOfYear > daysInYear(year)) {\r\n    resYear = year + 1;\r\n    resDayOfYear = dayOfYear - daysInYear(year);\r\n  } else {\r\n    resYear = year;\r\n    resDayOfYear = dayOfYear;\r\n  }\r\n\r\n  return {\r\n    year: resYear,\r\n    dayOfYear: resDayOfYear\r\n  };\r\n}\r\n\r\nexport function weekOfYear(date: Date, dow: number, doy: number, isUTC?: boolean): { week: number; year: number } {\r\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\r\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\r\n  let resWeek: number;\r\n  let resYear: number;\r\n\r\n  if (week < 1) {\r\n    resYear = getFullYear(date, isUTC) - 1;\r\n    resWeek = week + weeksInYear(resYear, dow, doy);\r\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\r\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\r\n    resYear = getFullYear(date, isUTC) + 1;\r\n  } else {\r\n    resYear = getFullYear(date, isUTC);\r\n    resWeek = week;\r\n  }\r\n\r\n  return {\r\n    week: resWeek,\r\n    year: resYear\r\n  };\r\n}\r\n\r\nexport function weeksInYear(year: number, dow: number, doy: number): number {\r\n  const weekOffset = firstWeekOffset(year, dow, doy);\r\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\r\n\r\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\r\n}\r\n","import { weekOfYear } from '../units/week-calendar-utils';\r\nimport { hasOwnProp, isArray, isFunction } from '../utils/type-checks';\r\nimport { getDay, getMonth, getFullYear } from '../utils/date-getters';\r\nimport { matchWord, regexEscape } from '../parse/regex';\r\nimport { setDayOfWeek } from '../units/day-of-week';\r\n\r\nexport interface LocaleOptionsFormat {\r\n  format: string[];\r\n  standalone: string[];\r\n  isFormat?: RegExp;\r\n}\r\n\r\nexport type LocaleOptions = string[] | LocaleOptionsFormat;\r\n\r\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\r\nexport const defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(\r\n  '_'\r\n);\r\nexport const defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\r\nexport const defaultLongDateFormat: { [index: string]: string } = {\r\n  LTS: 'h:mm:ss A',\r\n  LT: 'h:mm A',\r\n  L: 'MM/DD/YYYY',\r\n  LL: 'MMMM D, YYYY',\r\n  LLL: 'MMMM D, YYYY h:mm A',\r\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\r\n};\r\n\r\nexport const defaultOrdinal = '%d';\r\nexport const defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\r\n\r\nconst defaultMonthsShortRegex = matchWord;\r\nconst defaultMonthsRegex = matchWord;\r\n\r\nexport type OrdinalDateFn = (num: number, token?: string) => string;\r\nexport type PluralizeDateFn = (num: number, withoutSuffix: boolean,\r\n                               key?: string, isFuture?: boolean) => string;\r\n\r\nexport interface LocaleData {\r\n  abbr?: string;\r\n  parentLocale?: string;\r\n\r\n  months?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  monthsShort?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  monthsParseExact?: boolean;\r\n\r\n  weekdays?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  weekdaysShort?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  weekdaysMin?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\r\n  weekdaysParseExact?: boolean;\r\n\r\n  longDateFormat?: { [index: string]: string };\r\n  calendar?: {\r\n    [key: string]: (string\r\n      | ((date: Date, now?: Date) => string)\r\n      | ((dayOfWeek: number, isNextWeek: boolean) => string))\r\n  };\r\n  relativeTime?: { [key: string]: string | PluralizeDateFn };\r\n  dayOfMonthOrdinalParse?: RegExp;\r\n  ordinal?: string | OrdinalDateFn;\r\n\r\n  week?: { dow?: number; doy?: number };\r\n\r\n  invalidDate?: string;\r\n\r\n  monthsRegex?: RegExp;\r\n  monthsParse?: RegExp[];\r\n  monthsShortRegex?: RegExp;\r\n  monthsStrictRegex?: RegExp;\r\n  monthsShortStrictRegex?: RegExp;\r\n  longMonthsParse?: RegExp[];\r\n  shortMonthsParse?: RegExp[];\r\n\r\n  meridiemParse?: RegExp;\r\n\r\n  meridiemHour?(hour: number, meridiem: string): number;\r\n\r\n  preparse?(str: string, format?: string | string[]): string;\r\n\r\n  postformat?(str: string | number): string;\r\n\r\n  meridiem?(hour: number, minute?: number, isLower?: boolean): string;\r\n\r\n  isPM?(input: string): boolean;\r\n\r\n  getFullYear?(date: Date, isUTC: boolean): number;\r\n}\r\n\r\nexport class Locale {\r\n  parentLocale?: Locale;\r\n  _abbr: string;\r\n  _config: LocaleData;\r\n  meridiemHour: (hour: number, meridiem: string) => number;\r\n\r\n  _invalidDate: string;\r\n  _week: { dow: number; doy: number };\r\n  _dayOfMonthOrdinalParse: RegExp;\r\n  _ordinalParse: RegExp;\r\n  _meridiemParse: RegExp;\r\n\r\n  private _calendar: { [key: string]: string };\r\n  private _relativeTime: { future: string; past: string };\r\n  private _months: LocaleOptions;\r\n  private _monthsShort: LocaleOptions;\r\n  private _monthsRegex: RegExp;\r\n  private _monthsShortRegex: RegExp;\r\n  private _monthsStrictRegex: RegExp;\r\n  private _monthsShortStrictRegex: RegExp;\r\n  private _monthsParse: RegExp[];\r\n  private _longMonthsParse: string[] | RegExp[];\r\n  private _shortMonthsParse: string[] | RegExp[];\r\n  private _monthsParseExact: RegExp;\r\n  private _weekdaysParseExact: boolean;\r\n  private _weekdaysRegex: RegExp;\r\n  private _weekdaysShortRegex: RegExp;\r\n  private _weekdaysMinRegex: RegExp;\r\n\r\n  private _weekdaysStrictRegex: RegExp;\r\n  private _weekdaysShortStrictRegex: RegExp;\r\n  private _weekdaysMinStrictRegex: RegExp;\r\n\r\n  private _weekdays: LocaleOptions;\r\n  private _weekdaysShort: string[];\r\n  private _weekdaysMin: string[];\r\n  private _weekdaysParse: string[] | RegExp[];\r\n  private _minWeekdaysParse: string[] | RegExp[];\r\n  private _shortWeekdaysParse: string[] | RegExp[];\r\n  private _fullWeekdaysParse: RegExp[];\r\n  private _longDateFormat: { [key: string]: string };\r\n\r\n  private _ordinal: string;\r\n\r\n  constructor(config: LocaleData) {\r\n    if (config) {\r\n      this.set(config);\r\n    }\r\n  }\r\n\r\n  set(config: LocaleData): void {\r\n    let confKey;\r\n    for (confKey in config) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (!config.hasOwnProperty(confKey)) {\r\n        continue;\r\n      }\r\n      const prop = config[confKey as keyof LocaleData];\r\n      const key = (isFunction(prop) ? confKey : `_${confKey}`) as keyof Locale;\r\n\r\n      this[key] = prop as any;\r\n    }\r\n\r\n    this._config = config;\r\n  }\r\n\r\n  calendar(key: string, date: Date, now: Date): string {\r\n    const output = this._calendar[key] || this._calendar.sameElse;\r\n\r\n    return isFunction(output) ? output.call(null, date, now) : output;\r\n  }\r\n\r\n  longDateFormat(key: string) {\r\n    const format = this._longDateFormat[key];\r\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\r\n\r\n    if (format || !formatUpper) {\r\n      return format;\r\n    }\r\n\r\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val: string) {\r\n      return val.slice(1);\r\n    });\r\n\r\n    return this._longDateFormat[key];\r\n  }\r\n\r\n  get invalidDate(): string {\r\n    return this._invalidDate;\r\n  }\r\n\r\n  set invalidDate(val: string) {\r\n    this._invalidDate = val;\r\n  }\r\n\r\n  ordinal(num: number, token?: string): string {\r\n    return this._ordinal.replace('%d', num.toString(10));\r\n  }\r\n\r\n  preparse(str: string, format?: string | string[]) {\r\n    return str;\r\n  }\r\n\r\n\r\n  getFullYear(date: Date, isUTC = false): number {\r\n    return getFullYear(date, isUTC);\r\n  }\r\n\r\n  postformat(str: string) {\r\n    return str;\r\n  }\r\n\r\n  relativeTime(num: number, withoutSuffix: boolean, str: 'future' | 'past', isFuture: boolean): string {\r\n    const output = this._relativeTime[str];\r\n\r\n    return (isFunction(output)) ?\r\n      output(num, withoutSuffix, str, isFuture) :\r\n      output.replace(/%d/i, num.toString(10));\r\n  }\r\n\r\n  pastFuture(diff: number, output: string): string {\r\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\r\n\r\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\r\n  }\r\n\r\n  /** Months */\r\n  months(): string[];\r\n  months(date: Date, format?: string, isUTC?: boolean): string;\r\n  months(date?: Date, format?: string, isUTC = false): string | string[] {\r\n    if (!date) {\r\n      return isArray<string>(this._months)\r\n        ? this._months\r\n        : this._months.standalone;\r\n    }\r\n\r\n    if (isArray<string>(this._months)) {\r\n      return this._months[getMonth(date, isUTC)];\r\n    }\r\n\r\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\r\n      ? 'format'\r\n      : 'standalone';\r\n\r\n    return this._months[key][getMonth(date, isUTC)];\r\n  }\r\n\r\n  monthsShort(): string[];\r\n  monthsShort(date?: Date, format?: string, isUTC?: boolean): string;\r\n  monthsShort(date?: Date, format?: string, isUTC = false): string | string[] {\r\n    if (!date) {\r\n      return isArray<string>(this._monthsShort)\r\n        ? this._monthsShort\r\n        : this._monthsShort.standalone;\r\n    }\r\n\r\n    if (isArray<string>(this._monthsShort)) {\r\n      return this._monthsShort[getMonth(date, isUTC)];\r\n    }\r\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\r\n\r\n    return this._monthsShort[key][getMonth(date, isUTC)];\r\n  }\r\n\r\n  monthsParse(monthName: string, format?: string, strict?: boolean): number {\r\n    let date;\r\n    let regex;\r\n\r\n    if (this._monthsParseExact) {\r\n      return this.handleMonthStrictParse(monthName, format, strict);\r\n    }\r\n\r\n    if (!this._monthsParse) {\r\n      this._monthsParse = [];\r\n      this._longMonthsParse = [];\r\n      this._shortMonthsParse = [];\r\n    }\r\n\r\n    // TODO: add sorting\r\n    // Sorting makes sure if one month (or abbr) is a prefix of another\r\n    // see sorting in computeMonthsParse\r\n    let i;\r\n    for (i = 0; i < 12; i++) {\r\n      // make the regex if we don't have it already\r\n      date = new Date(Date.UTC(2000, i));\r\n      if (strict && !this._longMonthsParse[i]) {\r\n        const _months = this.months(date, '', true).replace('.', '');\r\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\r\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\r\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\r\n      }\r\n      if (!strict && !this._monthsParse[i]) {\r\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\r\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n      }\r\n      // testing the regex\r\n      if (strict && format === 'MMMM' && (this._longMonthsParse[i] as RegExp).test(monthName)) {\r\n        return i;\r\n      }\r\n\r\n      if (strict && format === 'MMM' && (this._shortMonthsParse[i] as RegExp).test(monthName)) {\r\n        return i;\r\n      }\r\n\r\n      if (!strict && this._monthsParse[i].test(monthName)) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  monthsRegex(isStrict: boolean): RegExp {\r\n    if (this._monthsParseExact) {\r\n      if (!hasOwnProp(this, '_monthsRegex')) {\r\n        this.computeMonthsParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._monthsStrictRegex;\r\n      }\r\n\r\n      return this._monthsRegex;\r\n    }\r\n\r\n    if (!hasOwnProp(this, '_monthsRegex')) {\r\n      this._monthsRegex = defaultMonthsRegex;\r\n    }\r\n\r\n    return this._monthsStrictRegex && isStrict ?\r\n      this._monthsStrictRegex : this._monthsRegex;\r\n  }\r\n\r\n  monthsShortRegex(isStrict: boolean): RegExp {\r\n    if (this._monthsParseExact) {\r\n      if (!hasOwnProp(this, '_monthsRegex')) {\r\n        this.computeMonthsParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._monthsShortStrictRegex;\r\n      }\r\n\r\n      return this._monthsShortRegex;\r\n    }\r\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\r\n      this._monthsShortRegex = defaultMonthsShortRegex;\r\n    }\r\n\r\n    return this._monthsShortStrictRegex && isStrict ?\r\n      this._monthsShortStrictRegex : this._monthsShortRegex;\r\n  }\r\n\r\n  /** Week */\r\n  week(date: Date, isUTC?: boolean): number {\r\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\r\n  }\r\n\r\n  firstDayOfWeek(): number {\r\n    return this._week.dow;\r\n  }\r\n\r\n  firstDayOfYear(): number {\r\n    return this._week.doy;\r\n  }\r\n\r\n  /** Day of Week */\r\n  weekdays(): string[];\r\n  weekdays(date: Date, format?: string, isUTC?: boolean): string;\r\n  weekdays(date?: Date, format?: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return isArray<string>(this._weekdays)\r\n        ? this._weekdays\r\n        : this._weekdays.standalone;\r\n    }\r\n\r\n    if (isArray<string>(this._weekdays)) {\r\n      return this._weekdays[getDay(date, isUTC)];\r\n    }\r\n\r\n    const _key = this._weekdays.isFormat.test(format)\r\n      ? 'format'\r\n      : 'standalone';\r\n\r\n    return this._weekdays[_key][getDay(date, isUTC)];\r\n  }\r\n\r\n  weekdaysMin(): string[];\r\n  weekdaysMin(date: Date, format?: string, isUTC?: boolean): string;\r\n  weekdaysMin(date?: Date, format?: string, isUTC?: boolean): string | string[] {\r\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\r\n  }\r\n\r\n  weekdaysShort(): string[];\r\n  weekdaysShort(date: Date, format?: string, isUTC?: boolean): string;\r\n  weekdaysShort(date?: Date, format?: string, isUTC?: boolean): string | string[] {\r\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\r\n  }\r\n\r\n\r\n  // proto.weekdaysParse  =        localeWeekdaysParse;\r\n  weekdaysParse(weekdayName?: string, format?: string, strict?: boolean): number {\r\n    let i;\r\n    let regex;\r\n\r\n    if (this._weekdaysParseExact) {\r\n      return this.handleWeekStrictParse(weekdayName, format, strict);\r\n    }\r\n\r\n    if (!this._weekdaysParse) {\r\n      this._weekdaysParse = [];\r\n      this._minWeekdaysParse = [];\r\n      this._shortWeekdaysParse = [];\r\n      this._fullWeekdaysParse = [];\r\n    }\r\n\r\n    for (i = 0; i < 7; i++) {\r\n      // make the regex if we don't have it already\r\n      // fix: here is the issue\r\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\r\n      if (strict && !this._fullWeekdaysParse[i]) {\r\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\r\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\r\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\r\n      }\r\n      if (!this._weekdaysParse[i]) {\r\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\r\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n      }\r\n\r\n      if (!isArray<RegExp>(this._fullWeekdaysParse)\r\n        || !isArray<RegExp>(this._shortWeekdaysParse)\r\n        || !isArray<RegExp>(this._minWeekdaysParse)\r\n        || !isArray<RegExp>(this._weekdaysParse)) {\r\n        return;\r\n      }\r\n\r\n      // testing the regex\r\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  // proto.weekdaysRegex       =        weekdaysRegex;\r\n  weekdaysRegex(isStrict: boolean) {\r\n    if (this._weekdaysParseExact) {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this.computeWeekdaysParse();\r\n      }\r\n\r\n      if (isStrict) {\r\n        return this._weekdaysStrictRegex;\r\n      } else {\r\n        return this._weekdaysRegex;\r\n      }\r\n    } else {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this._weekdaysRegex = matchWord;\r\n      }\r\n\r\n      return this._weekdaysStrictRegex && isStrict ?\r\n        this._weekdaysStrictRegex : this._weekdaysRegex;\r\n    }\r\n  }\r\n\r\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\r\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\r\n\r\n\r\n  weekdaysShortRegex(isStrict?: boolean): RegExp {\r\n    if (this._weekdaysParseExact) {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this.computeWeekdaysParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._weekdaysShortStrictRegex;\r\n      } else {\r\n        return this._weekdaysShortRegex;\r\n      }\r\n    } else {\r\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\r\n        this._weekdaysShortRegex = matchWord;\r\n      }\r\n\r\n      return this._weekdaysShortStrictRegex && isStrict ?\r\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\r\n    }\r\n  }\r\n\r\n  weekdaysMinRegex(isStrict?: boolean): RegExp {\r\n    if (this._weekdaysParseExact) {\r\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n        this.computeWeekdaysParse();\r\n      }\r\n      if (isStrict) {\r\n        return this._weekdaysMinStrictRegex;\r\n      } else {\r\n        return this._weekdaysMinRegex;\r\n      }\r\n    } else {\r\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\r\n        this._weekdaysMinRegex = matchWord;\r\n      }\r\n\r\n      return this._weekdaysMinStrictRegex && isStrict ?\r\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\r\n    }\r\n  }\r\n\r\n  isPM(input: string): boolean {\r\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\r\n    // Using charAt should be more compatible.\r\n    return input.toLowerCase().charAt(0) === 'p';\r\n  }\r\n\r\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\r\n    if (hours > 11) {\r\n      return isLower ? 'pm' : 'PM';\r\n    }\r\n\r\n    return isLower ? 'am' : 'AM';\r\n  }\r\n\r\n  formatLongDate(key: string) {\r\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\r\n    const format = this._longDateFormat[key];\r\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\r\n\r\n    if (format || !formatUpper) {\r\n      return format;\r\n    }\r\n\r\n    this._longDateFormat[\r\n      key\r\n      ] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val: string) => {\r\n      return val.slice(1);\r\n    });\r\n\r\n    return this._longDateFormat[key];\r\n  }\r\n\r\n  private handleMonthStrictParse(monthName: string, format: string, strict?: boolean) {\r\n    const llc = monthName.toLocaleLowerCase();\r\n    let i;\r\n    let ii;\r\n    let mom;\r\n    if (!this._monthsParse) {\r\n      // this is not used\r\n      this._monthsParse = [];\r\n      this._longMonthsParse = [];\r\n      this._shortMonthsParse = [];\r\n      for (i = 0; i < 12; ++i) {\r\n        mom = new Date(2000, i);\r\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\r\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\r\n      }\r\n    }\r\n\r\n    if (strict) {\r\n      if (format === 'MMM') {\r\n        ii = (this._shortMonthsParse as string[]).indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      }\r\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\r\n\r\n      return ii !== -1 ? ii : null;\r\n    }\r\n\r\n    if (format === 'MMM') {\r\n      ii = (this._shortMonthsParse as string[]).indexOf(llc);\r\n      if (ii !== -1) {\r\n        return ii;\r\n      }\r\n\r\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\r\n\r\n      return ii !== -1 ? ii : null;\r\n    }\r\n\r\n    ii = (this._longMonthsParse as string[]).indexOf(llc);\r\n    if (ii !== -1) {\r\n      return ii;\r\n    }\r\n    ii = (this._shortMonthsParse as string[]).indexOf(llc);\r\n\r\n    return ii !== -1 ? ii : null;\r\n  }\r\n\r\n  private handleWeekStrictParse(weekdayName: string, format: string, strict: boolean): number {\r\n    let ii;\r\n    const llc = weekdayName.toLocaleLowerCase();\r\n    if (!this._weekdaysParse) {\r\n      this._weekdaysParse = [];\r\n      this._shortWeekdaysParse = [];\r\n      this._minWeekdaysParse = [];\r\n\r\n      let i;\r\n      for (i = 0; i < 7; ++i) {\r\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\r\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\r\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\r\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\r\n      }\r\n    }\r\n\r\n    if (!isArray<string>(this._weekdaysParse)\r\n      || !isArray<string>(this._shortWeekdaysParse)\r\n      || !isArray<string>(this._minWeekdaysParse)) {\r\n      return;\r\n    }\r\n\r\n    if (strict) {\r\n      if (format === 'dddd') {\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else if (format === 'ddd') {\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else {\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      }\r\n    } else {\r\n      if (format === 'dddd') {\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else if (format === 'ddd') {\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      } else {\r\n        ii = this._minWeekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._weekdaysParse.indexOf(llc);\r\n        if (ii !== -1) {\r\n          return ii;\r\n        }\r\n        ii = this._shortWeekdaysParse.indexOf(llc);\r\n\r\n        return ii !== -1 ? ii : null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private computeMonthsParse() {\r\n    const shortPieces: string[] = [];\r\n    const longPieces: string[] = [];\r\n    const mixedPieces: string[] = [];\r\n    let date;\r\n\r\n    let i;\r\n    for (i = 0; i < 12; i++) {\r\n      // make the regex if we don't have it already\r\n      date = new Date(2000, i);\r\n      shortPieces.push(this.monthsShort(date, ''));\r\n      longPieces.push(this.months(date, ''));\r\n      mixedPieces.push(this.months(date, ''));\r\n      mixedPieces.push(this.monthsShort(date, ''));\r\n    }\r\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\r\n    // will match the longer piece.\r\n    shortPieces.sort(cmpLenRev);\r\n    longPieces.sort(cmpLenRev);\r\n    mixedPieces.sort(cmpLenRev);\r\n    for (i = 0; i < 12; i++) {\r\n      shortPieces[i] = regexEscape(shortPieces[i]);\r\n      longPieces[i] = regexEscape(longPieces[i]);\r\n    }\r\n    for (i = 0; i < 24; i++) {\r\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n    }\r\n\r\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\r\n    this._monthsShortRegex = this._monthsRegex;\r\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\r\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\r\n  }\r\n\r\n  private computeWeekdaysParse() {\r\n    const minPieces = [];\r\n    const shortPieces = [];\r\n    const longPieces = [];\r\n    const mixedPieces = [];\r\n\r\n    let i;\r\n    for (i = 0; i < 7; i++) {\r\n      // make the regex if we don't have it already\r\n      // let mom = createUTC([2000, 1]).day(i);\r\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\r\n      const minp = this.weekdaysMin(date);\r\n      const shortp = this.weekdaysShort(date);\r\n      const longp = this.weekdays(date);\r\n      minPieces.push(minp);\r\n      shortPieces.push(shortp);\r\n      longPieces.push(longp);\r\n      mixedPieces.push(minp);\r\n      mixedPieces.push(shortp);\r\n      mixedPieces.push(longp);\r\n    }\r\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\r\n    // will match the longer piece.\r\n    minPieces.sort(cmpLenRev);\r\n    shortPieces.sort(cmpLenRev);\r\n    longPieces.sort(cmpLenRev);\r\n    mixedPieces.sort(cmpLenRev);\r\n    for (i = 0; i < 7; i++) {\r\n      shortPieces[i] = regexEscape(shortPieces[i]);\r\n      longPieces[i] = regexEscape(longPieces[i]);\r\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n    }\r\n\r\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\r\n    this._weekdaysShortRegex = this._weekdaysRegex;\r\n    this._weekdaysMinRegex = this._weekdaysRegex;\r\n\r\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\r\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\r\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\r\n  }\r\n}\r\n\r\nfunction cmpLenRev(a: string, b: string): number {\r\n  return b.length - a.length;\r\n}\r\n","export const defaultCalendar = {\r\n  sameDay: '[Today at] LT',\r\n  nextDay: '[Tomorrow at] LT',\r\n  nextWeek: 'dddd [at] LT',\r\n  lastDay: '[Yesterday at] LT',\r\n  lastWeek: '[Last] dddd [at] LT',\r\n  sameElse: 'L'\r\n};\r\n","import {\r\n  defaultDayOfMonthOrdinalParse,\r\n  defaultLocaleMonths,\r\n  defaultLocaleMonthsShort,\r\n  defaultLocaleWeekdays,\r\n  defaultLocaleWeekdaysMin,\r\n  defaultLocaleWeekdaysShort, defaultLongDateFormat, defaultOrdinal,\r\n  LocaleData\r\n} from './locale.class';\r\nimport { defaultCalendar } from './calendar';\r\n\r\nexport const defaultInvalidDate = 'Invalid date';\r\n\r\nexport const defaultLocaleWeek = {\r\n  dow: 0, // Sunday is the first day of the week.\r\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\r\n};\r\n\r\nexport const defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\r\n\r\nexport const defaultRelativeTime: {[key: string]: string} = {\r\n  future : 'in %s',\r\n  past   : '%s ago',\r\n  s  : 'a few seconds',\r\n  ss : '%d seconds',\r\n  m  : 'a minute',\r\n  mm : '%d minutes',\r\n  h  : 'an hour',\r\n  hh : '%d hours',\r\n  d  : 'a day',\r\n  dd : '%d days',\r\n  M  : 'a month',\r\n  MM : '%d months',\r\n  y  : 'a year',\r\n  yy : '%d years'\r\n};\r\n\r\nexport const baseConfig: LocaleData = {\r\n  calendar: defaultCalendar,\r\n  longDateFormat: defaultLongDateFormat,\r\n  invalidDate: defaultInvalidDate,\r\n  ordinal: defaultOrdinal,\r\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\r\n  relativeTime: defaultRelativeTime,\r\n\r\n  months: defaultLocaleMonths,\r\n  monthsShort: defaultLocaleMonthsShort,\r\n\r\n  week: defaultLocaleWeek,\r\n\r\n  weekdays: defaultLocaleWeekdays,\r\n  weekdaysMin: defaultLocaleWeekdaysMin,\r\n  weekdaysShort: defaultLocaleWeekdaysShort,\r\n\r\n  meridiemParse: defaultLocaleMeridiemParse\r\n};\r\n","// compare two arrays, return the number of differences\r\nimport { toInt } from './type-checks';\r\n\r\nexport function compareArrays<T>(array1: T[], array2: T[], dontConvert: boolean) {\r\n  const len = Math.min(array1.length, array2.length);\r\n  const lengthDiff = Math.abs(array1.length - array2.length);\r\n  let diffs = 0;\r\n  let i;\r\n  for (i = 0; i < len; i++) {\r\n    if ((dontConvert && array1[i] !== array2[i])\r\n      || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\r\n      diffs++;\r\n    }\r\n  }\r\n\r\n  return diffs + lengthDiff;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { weekOfYear } from './week-calendar-utils';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addWeekParseToken } from '../parse/token';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateFormatterOptions, WeekParsing } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { getLocale } from '../locale/locales';\r\nimport { add } from '../moment/add-subtract';\r\n\r\n// FORMATTING\r\n\r\nexport function initWeek() {\r\n  addFormatToken('w', ['ww', 2, false], 'wo',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getWeek(date, opts.locale)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('W', ['WW', 2, false], 'Wo',\r\n    function(date: Date): string {\r\n      return getISOWeek(date)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('week', 'w');\r\n  addUnitAlias('isoWeek', 'W');\r\n\r\n// PRIORITIES\r\n\r\n  addUnitPriority('week', 5);\r\n  addUnitPriority('isoWeek', 5);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('w', match1to2);\r\n  addRegexToken('ww', match1to2, match2);\r\n  addRegexToken('W', match1to2);\r\n  addRegexToken('WW', match1to2, match2);\r\n\r\n  addWeekParseToken(\r\n    ['w', 'ww', 'W', 'WW'],\r\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\r\n      week[token.substr(0, 1)] = toInt(input);\r\n\r\n      return config;\r\n    }\r\n  );\r\n\r\n// export function getSetWeek (input) {\r\n//   var week = this.localeData().week(this);\r\n//   return input == null ? week : this.add((input - week) * 7, 'd');\r\n// }\r\n}\r\n\r\nexport function setWeek(date: Date, input: number, locale = getLocale()): Date {\r\n  const week = getWeek(date, locale);\r\n\r\n  return add(date, (input - week) * 7, 'day');\r\n}\r\n\r\nexport function getWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\r\n  return locale.week(date, isUTC);\r\n}\r\n\r\n// export function getSetISOWeek (input) {\r\n//   var week = weekOfYear(this, 1, 4).week;\r\n//   return input == null ? week : this.add((input - week) * 7, 'd');\r\n// }\r\n\r\nexport function setISOWeek(date: Date, input: number): Date {\r\n  const week = getISOWeek(date);\r\n\r\n  return add(date, (input - week) * 7, 'day');\r\n}\r\n\r\nexport function getISOWeek(date: Date, isUTC?: boolean): number {\r\n  return weekOfYear(date, 1, 4, isUTC).week;\r\n}\r\n\r\n","import { addFormatToken } from '../format/format';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\r\nimport { addWeekParseToken } from '../parse/token';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { parseTwoDigitYear } from './year';\r\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from './week-calendar-utils';\r\nimport { createUTCDate } from '../create/date-from-array';\r\nimport { getISOWeek, getWeek } from './week';\r\nimport { getISODayOfWeek, getLocaleDayOfWeek } from './day-of-week';\r\nimport { getLocale } from '../locale/locales';\r\nimport { setDate, setFullYear, setMonth } from '../utils/date-setters';\r\nimport { getDate, getFullYear, getMonth } from '../utils/date-getters';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { DateFormatterFn, DateFormatterOptions, WeekParsing } from '../types';\r\n\r\n// FORMATTING\r\n\r\nexport function initWeekYear() {\r\n  addFormatToken(null, ['gg', 2, false], null,\r\n    function (date: Date, opts: DateFormatterOptions): string {\r\n      // return this.weekYear() % 100;\r\n      return (getWeekYear(date, opts.locale) % 100).toString();\r\n    }\r\n  );\r\n\r\n  addFormatToken(null, ['GG', 2, false], null,\r\n    function (date: Date): string {\r\n      // return this.isoWeekYear() % 100;\r\n      return (getISOWeekYear(date) % 100).toString();\r\n    }\r\n  );\r\n\r\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\r\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\r\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\r\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('weekYear', 'gg');\r\n  addUnitAlias('isoWeekYear', 'GG');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('weekYear', 1);\r\n  addUnitPriority('isoWeekYear', 1);\r\n\r\n\r\n// PARSING\r\n\r\n  addRegexToken('G', matchSigned);\r\n  addRegexToken('g', matchSigned);\r\n  addRegexToken('GG', match1to2, match2);\r\n  addRegexToken('gg', match1to2, match2);\r\n  addRegexToken('GGGG', match1to4, match4);\r\n  addRegexToken('gggg', match1to4, match4);\r\n  addRegexToken('GGGGG', match1to6, match6);\r\n  addRegexToken('ggggg', match1to6, match6);\r\n\r\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\r\n    function (input, week: WeekParsing, config, token) {\r\n      week[token.substr(0, 2)] = toInt(input);\r\n\r\n      return config;\r\n    });\r\n\r\n  addWeekParseToken(['gg', 'GG'], function (input, week: WeekParsing, config, token) {\r\n    week[token] = parseTwoDigitYear(input);\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\nfunction addWeekYearFormatToken(token: string, getter: DateFormatterFn): void {\r\n  addFormatToken(null, [token, token.length, false], null, getter);\r\n}\r\n\r\nfunction _getWeekYearFormatCb(date: Date, opts: DateFormatterOptions): string {\r\n  return getWeekYear(date, opts.locale).toString();\r\n}\r\n\r\nfunction _getISOWeekYearFormatCb(date: Date): string {\r\n  return getISOWeekYear(date).toString();\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getSetWeekYear(date: Date, input: number, locale = getLocale(), isUTC?: boolean): number | Date {\r\n  return getSetWeekYearHelper(date,\r\n    input,\r\n    // this.week(),\r\n    getWeek(date, locale, isUTC),\r\n    // this.weekday(),\r\n    getLocaleDayOfWeek(date, locale, isUTC),\r\n    locale.firstDayOfWeek(),\r\n    locale.firstDayOfYear(),\r\n    isUTC);\r\n}\r\n\r\nexport function getWeekYear(date: Date, locale = getLocale(), isUTC?: boolean): number {\r\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\r\n}\r\n\r\nexport function getSetISOWeekYear(date: Date, input: number, isUTC?: boolean): number | Date {\r\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\r\n}\r\n\r\nexport function getISOWeekYear(date: Date, isUTC?: boolean): number {\r\n  return weekOfYear(date, 1, 4, isUTC).year;\r\n}\r\n\r\nexport function getISOWeeksInYear(date: Date, isUTC?: boolean) {\r\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\r\n}\r\n\r\nexport function getWeeksInYear(date: Date, isUTC?: boolean, locale: Locale = getLocale()): number {\r\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\r\n}\r\n\r\nfunction getSetWeekYearHelper(date: Date, input: number, week: number,\r\n                              weekday: number, dow: number, doy: number, isUTC?: boolean): number | Date {\r\n  if (!input) {\r\n    return getWeekYear(date, void 0, isUTC);\r\n  }\r\n\r\n  const weeksTarget = weeksInYear(input, dow, doy);\r\n  const _week = week > weeksTarget ? weeksTarget : week;\r\n\r\n  return setWeekAll(date, input, _week, weekday, dow, doy);\r\n}\r\n\r\nfunction setWeekAll(date: Date, weekYear: number, week: number,\r\n                    weekday: number, dow: number, doy: number): Date {\r\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\r\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\r\n  setFullYear(date, getFullYear(_date, true), true);\r\n  setMonth(date, getMonth(_date, true), true);\r\n  setDate(date, getDate(_date, true), true);\r\n\r\n  return date;\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { unix } from '../utils/date-getters';\r\nimport { addRegexToken, matchSigned, matchTimestamp } from '../parse/regex';\r\nimport { addParseToken} from '../parse/token';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateArray } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\n\r\n\r\nexport function initTimestamp() {\r\n// FORMATTING\r\n\r\n  addFormatToken('X', null, null, function(date: Date): string {\r\n    return unix(date)\r\n      .toString(10);\r\n  });\r\n  addFormatToken('x', null, null, function(date: Date): string {\r\n    return date.valueOf()\r\n      .toString(10);\r\n  });\r\n\r\n// PARSING\r\n\r\n  addRegexToken('x', matchSigned);\r\n  addRegexToken('X', matchTimestamp);\r\n\r\n  addParseToken('X', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._d = new Date(parseFloat(input) * 1000);\r\n\r\n    return config;\r\n  });\r\n  addParseToken('x', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._d = new Date(toInt(input));\r\n\r\n    return config;\r\n  });\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { addRegexToken, match1 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { MONTH } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { setMonth } from '../utils/date-setters';\r\n\r\n\r\nexport function initQuarter() {\r\n// FORMATTING\r\n\r\n  addFormatToken('Q', null, 'Qo',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getQuarter(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('quarter', 'Q');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('quarter', 7);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('Q', match1);\r\n  addParseToken('Q', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[MONTH] = (toInt(input) - 1) * 3;\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getQuarter(date: Date, isUTC = false): number {\r\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\r\n}\r\n\r\nexport function setQuarter(date: Date, quarter: number, isUTC?: boolean): Date {\r\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\r\n}\r\n\r\n// export function getSetQuarter(input) {\r\n//   return input == null\r\n//     ? Math.ceil((this.month() + 1) / 3)\r\n//     : this.month((input - 1) * 3 + this.month() % 3);\r\n// }\r\n","// place in new Date([array])\r\nexport const YEAR = 0;\r\nexport const MONTH = 1;\r\nexport const DATE = 2;\r\nexport const HOUR = 3;\r\nexport const MINUTE = 4;\r\nexport const SECOND = 5;\r\nexport const MILLISECOND = 6;\r\nexport const WEEK = 7;\r\nexport const WEEKDAY = 8;\r\n","// FORMATTING\r\n\r\nimport { addFormatToken } from '../format/format';\r\nimport { zeroFill } from '../utils/zero-fill';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { isNumber, isString, toInt } from '../utils/type-checks';\r\nimport { addRegexToken, matchOffset, matchShortOffset } from '../parse/regex';\r\nimport { add } from '../moment/add-subtract';\r\nimport { addParseToken } from '../parse/token';\r\nimport { DateArray } from '../types';\r\nimport { cloneDate } from '../create/clone';\r\nimport { setMonth } from '../utils/date-setters';\r\n\r\nfunction addOffsetFormatToken(token: string, separator: string): void {\r\n  addFormatToken(token, null, null, function (date: Date, config): string {\r\n    let offset = getUTCOffset(date, {_isUTC: config.isUTC, _offset: config.offset});\r\n    let sign = '+';\r\n    if (offset < 0) {\r\n      offset = -offset;\r\n      sign = '-';\r\n    }\r\n\r\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\r\n  });\r\n}\r\n\r\nexport function initOffset() {\r\n  addOffsetFormatToken('Z', ':');\r\n  addOffsetFormatToken('ZZ', '');\r\n\r\n// PARSING\r\n\r\n  addRegexToken('Z', matchShortOffset);\r\n  addRegexToken('ZZ', matchShortOffset);\r\n  addParseToken(['Z', 'ZZ'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._useUTC = true;\r\n    config._tzm = offsetFromString(matchShortOffset, input);\r\n\r\n    return config;\r\n  });\r\n}\r\n\r\n// HELPERS\r\n\r\n// timezone chunker\r\n// '+10:00' > ['10',  '00']\r\n// '-1530'  > ['-15', '30']\r\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\r\n\r\nfunction offsetFromString(matcher: RegExp, str: string): number {\r\n  const matches = (str || '').match(matcher);\r\n\r\n  if (matches === null) {\r\n    return null;\r\n  }\r\n\r\n  const chunk = matches[matches.length - 1];\r\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\r\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\r\n  const _min = parts[0] === '+' ? minutes : -minutes;\r\n\r\n  return minutes === 0 ? 0 : _min;\r\n}\r\n\r\n// Return a moment from input, that is local/utc/zone equivalent to model.\r\nexport function cloneWithOffset(input: Date, date: Date,\r\n                                config: DateParsingConfig = {}): Date {\r\n  if (!config._isUTC) {\r\n    return input;\r\n  }\r\n\r\n  const res = cloneDate(date);\r\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\r\n  const offsetDiff = (config._offset || 0) * 60000;\r\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\r\n  // Use low-level api, because this fn is low-level api.\r\n  res.setTime(res.valueOf() + diff);\r\n  // todo: add timezone handling\r\n  // hooks.updateOffset(res, false);\r\n\r\n  return res;\r\n}\r\n\r\nexport function getDateOffset(date: Date): number {\r\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\r\n  // https://github.com/moment/moment/pull/1871\r\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\r\n}\r\n\r\n// HOOKS\r\n\r\n// This function will be called whenever a moment is mutated.\r\n// It is intended to keep the offset in sync with the timezone.\r\n// todo: it's from moment timezones\r\n// hooks.updateOffset = function () {\r\n// };\r\n\r\n// MOMENTS\r\n\r\n// keepLocalTime = true means only change the timezone, without\r\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\r\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\r\n// +0200, so we adjust the time as needed, to be valid.\r\n//\r\n// Keeping the time actually adds/subtracts (one hour)\r\n// from the actual represented time. That is why we call updateOffset\r\n// a second time. In case it wants us to change the offset again\r\n// _changeInProgress == true case, then we have to adjust, because\r\n// there is no such time in the given timezone.\r\nexport function getUTCOffset(date: Date, config: DateParsingConfig = {}): number {\r\n  const _offset = config._offset || 0;\r\n\r\n  return config._isUTC ? _offset : getDateOffset(date);\r\n}\r\n\r\nexport function setUTCOffset(date: Date, input: number | string, keepLocalTime?: boolean, keepMinutes?: boolean, config: DateParsingConfig = {}): Date {\r\n  const offset = config._offset || 0;\r\n  let localAdjust;\r\n  let _input = input;\r\n  let _date = date;\r\n\r\n  if (isString(_input)) {\r\n    _input = offsetFromString(matchShortOffset, _input);\r\n    if (_input === null) {\r\n      return _date;\r\n    }\r\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\r\n    _input = _input * 60;\r\n  }\r\n\r\n  if (!config._isUTC && keepLocalTime) {\r\n    localAdjust = getDateOffset(_date);\r\n  }\r\n  config._offset = _input;\r\n  config._isUTC = true;\r\n  if (localAdjust != null) {\r\n    _date = add(_date, localAdjust, 'minutes');\r\n  }\r\n  if (offset !== _input) {\r\n    if (!keepLocalTime || config._changeInProgress) {\r\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\r\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\r\n    } else if (!config._changeInProgress) {\r\n      config._changeInProgress = true;\r\n      // todo: add timezone handling\r\n      // hooks.updateOffset(this, true);\r\n      config._changeInProgress = null;\r\n    }\r\n  }\r\n\r\n  return _date;\r\n}\r\n\r\n/*\r\nexport function getSetZone(input, keepLocalTime) {\r\n  if (input != null) {\r\n    if (typeof input !== 'string') {\r\n      input = -input;\r\n    }\r\n\r\n    this.utcOffset(input, keepLocalTime);\r\n\r\n    return this;\r\n  } else {\r\n    return -this.utcOffset();\r\n  }\r\n}\r\n*/\r\n\r\nexport function setOffsetToUTC(date: Date, keepLocalTime?: boolean): Date {\r\n  return setUTCOffset(date, 0, keepLocalTime);\r\n}\r\n\r\nexport function isDaylightSavingTime(date: Date): boolean {\r\n\r\n  return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\r\n    || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\r\n}\r\n\r\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\r\n  if (this._isUTC) {\r\n    this.utcOffset(0, keepLocalTime);\r\n    this._isUTC = false;\r\n\r\n    if (keepLocalTime) {\r\n      this.subtract(getDateOffset(this), 'm');\r\n    }\r\n  }\r\n  return this;\r\n}*/\r\n\r\nexport function setOffsetToParsedOffset(date: Date, input: string, config: DateParsingConfig = {}): Date {\r\n  if (config._tzm != null) {\r\n    return setUTCOffset(date, config._tzm, false, true, config);\r\n  }\r\n\r\n  if (isString(input)) {\r\n    const tZone = offsetFromString(matchOffset, input);\r\n    if (tZone != null) {\r\n      return setUTCOffset(date, tZone, false, false, config);\r\n    }\r\n\r\n    return setUTCOffset(date, 0, true, false, config);\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nexport function hasAlignedHourOffset(date: Date, input?: Date) {\r\n  const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\r\n\r\n  return (getUTCOffset(date) - _input) % 60 === 0;\r\n}\r\n\r\n\r\n// DEPRECATED\r\n/*export function isDaylightSavingTimeShifted() {\r\n  if (!isUndefined(this._isDSTShifted)) {\r\n    return this._isDSTShifted;\r\n  }\r\n\r\n  const c = {};\r\n\r\n  copyConfig(c, this);\r\n  c = prepareConfig(c);\r\n\r\n  if (c._a) {\r\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\r\n    this._isDSTShifted = this.isValid() &&\r\n      compareArrays(c._a, other.toArray()) > 0;\r\n  } else {\r\n    this._isDSTShifted = false;\r\n  }\r\n\r\n  return this._isDSTShifted;\r\n}*/\r\n\r\n// in Khronos\r\n/*export function isLocal() {\r\n  return this.isValid() ? !this._isUTC : false;\r\n}\r\n\r\nexport function isUtcOffset() {\r\n  return this.isValid() ? this._isUTC : false;\r\n}\r\n\r\nexport function isUtc() {\r\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\r\n}*/\r\n","import { getHours, getMinutes, getSeconds } from '../utils/date-getters';\r\nimport { addFormatToken } from '../format/format';\r\nimport { zeroFill } from '../utils/zero-fill';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { HOUR, MINUTE, SECOND } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\n\r\n\r\nexport function initHour() {\r\n// FORMATTING\r\n\r\n  function hFormat(date: Date, isUTC: boolean): number {\r\n    return getHours(date, isUTC) % 12 || 12;\r\n  }\r\n\r\n  function kFormat(date: Date, isUTC: boolean): number {\r\n    return getHours(date, isUTC) || 24;\r\n  }\r\n\r\n  addFormatToken('H', ['HH', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getHours(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n  addFormatToken('h', ['hh', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return hFormat(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n  addFormatToken('k', ['kk', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return kFormat(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken('hmm', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _h = hFormat(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n\r\n      return `${_h}${_mm}`;\r\n    }\r\n  );\r\n\r\n  addFormatToken('hmmss', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _h = hFormat(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\r\n\r\n      return `${_h}${_mm}${_ss}`;\r\n    }\r\n  );\r\n\r\n  addFormatToken('Hmm', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _H = getHours(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n\r\n      return `${_H}${_mm}`;\r\n    }\r\n  );\r\n\r\n  addFormatToken('Hmmss', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      const _H = getHours(date, opts.isUTC);\r\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\r\n\r\n      return `${_H}${_mm}${_ss}`;\r\n    }\r\n  );\r\n\r\n  function meridiem(token: string, lowercase: boolean): void {\r\n    addFormatToken(token, null, null,\r\n      function(date: Date, opts: DateFormatterOptions): string {\r\n        return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\r\n      }\r\n    );\r\n  }\r\n\r\n  meridiem('a', true);\r\n  meridiem('A', false);\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('hour', 'h');\r\n\r\n// PRIORITY\r\n  addUnitPriority('hour', 13);\r\n\r\n\r\n// PARSING\r\n\r\n  function matchMeridiem(isStrict: boolean, locale: Locale): RegExp {\r\n    return locale._meridiemParse;\r\n  }\r\n\r\n  addRegexToken('a', matchMeridiem);\r\n  addRegexToken('A', matchMeridiem);\r\n  addRegexToken('H', match1to2);\r\n  addRegexToken('h', match1to2);\r\n  addRegexToken('k', match1to2);\r\n  addRegexToken('HH', match1to2, match2);\r\n  addRegexToken('hh', match1to2, match2);\r\n  addRegexToken('kk', match1to2, match2);\r\n\r\n  addRegexToken('hmm', match3to4);\r\n  addRegexToken('hmmss', match5to6);\r\n  addRegexToken('Hmm', match3to4);\r\n  addRegexToken('Hmmss', match5to6);\r\n\r\n  addParseToken(['H', 'HH'], HOUR);\r\n  addParseToken(\r\n    ['k', 'kk'],\r\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      const kInput = toInt(input);\r\n      array[HOUR] = kInput === 24 ? 0 : kInput;\r\n\r\n      return config;\r\n    }\r\n  );\r\n  addParseToken(['a', 'A'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    config._isPm = config._locale.isPM(input);\r\n    config._meridiem = input;\r\n\r\n    return config;\r\n  });\r\n  addParseToken(['h', 'hh'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[HOUR] = toInt(input);\r\n    getParsingFlags(config).bigHour = true;\r\n\r\n    return config;\r\n  });\r\n  addParseToken('hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n    getParsingFlags(config).bigHour = true;\r\n\r\n    return config;\r\n  });\r\n  addParseToken('hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos1 = input.length - 4;\r\n    const pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n    getParsingFlags(config).bigHour = true;\r\n\r\n    return config;\r\n  });\r\n  addParseToken('Hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n\r\n    return config;\r\n  });\r\n  addParseToken('Hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    const pos1 = input.length - 4;\r\n    const pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n\r\n    return config;\r\n  });\r\n\r\n}\r\n","// internal storage for locale config files\r\nimport { Locale, LocaleData } from './locale.class';\r\nimport { baseConfig } from './locale.defaults';\r\nimport { hasOwnProp, isArray, isObject, isString, isUndefined, toInt } from '../utils/type-checks';\r\nimport { compareArrays } from '../utils/compare-arrays';\r\n\r\nimport { initWeek } from '../units/week';\r\nimport { initWeekYear } from '../units/week-year';\r\nimport { initYear } from '../units/year';\r\nimport { initTimezone } from '../units/timezone';\r\nimport { initTimestamp } from '../units/timestamp';\r\nimport { initSecond } from '../units/second';\r\nimport { initQuarter } from '../units/quarter';\r\nimport { initOffset } from '../units/offset';\r\nimport { initMinute } from '../units/minute';\r\nimport { initMillisecond } from '../units/millisecond';\r\nimport { initMonth } from '../units/month';\r\nimport { initHour } from '../units/hour';\r\nimport { initDayOfYear } from '../units/day-of-year';\r\nimport { initDayOfWeek } from '../units/day-of-week';\r\nimport { initDayOfMonth } from '../units/day-of-month';\r\n\r\nconst locales: { [key: string]: Locale } = {};\r\nconst localeFamilies: { [key: string]: {name: string; config: LocaleData}[] } = {};\r\nlet globalLocale: Locale;\r\n\r\nfunction normalizeLocale(key: string): string {\r\n  return key ? key.toLowerCase().replace('_', '-') : key;\r\n}\r\n\r\n// pick the locale from the array\r\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\r\n// substring from most specific to least,\r\n// but move to the next array item if it's a more specific variant than the current root\r\nfunction chooseLocale(names: string[]): Locale {\r\n  let next;\r\n  let locale;\r\n  let i = 0;\r\n\r\n  while (i < names.length) {\r\n    const split = normalizeLocale(names[i]).split('-');\r\n    let j = split.length;\r\n    next = normalizeLocale(names[i + 1]);\r\n    next = next ? next.split('-') : null;\r\n    while (j > 0) {\r\n      locale = loadLocale(split.slice(0, j).join('-'));\r\n      if (locale) {\r\n        return locale;\r\n      }\r\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\r\n        // the next array item is better than a shallower substring of this one\r\n        break;\r\n      }\r\n      j--;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function mergeConfigs(parentConfig: LocaleData,\r\n                             childConfig: LocaleData) {\r\n  const res: LocaleData = Object.assign({}, parentConfig);\r\n\r\n  for (const childProp in childConfig) {\r\n    if (!hasOwnProp(childConfig, childProp)) {\r\n      continue;\r\n    }\r\n\r\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\r\n      res[childProp as any] = {};\r\n      Object.assign(res[childProp], parentConfig[childProp]);\r\n      Object.assign(res[childProp], childConfig[childProp]);\r\n    } else if (childConfig[childProp] != null) {\r\n      res[childProp as any] = childConfig[childProp];\r\n    } else {\r\n      delete res[childProp as any];\r\n    }\r\n  }\r\n  for (const parentProp in parentConfig) {\r\n    if (\r\n      hasOwnProp(parentConfig, parentProp) &&\r\n      !hasOwnProp(childConfig, parentProp) &&\r\n      isObject(parentConfig[parentProp as keyof LocaleData])\r\n    ) {\r\n      // make sure changes to properties don't modify parent config\r\n      res[parentProp as any] = Object.assign({}, res[parentProp as keyof LocaleData]);\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n\r\nfunction loadLocale(name: string): Locale {\r\n  // no way!\r\n  /* var oldLocale = null;\r\n   // TODO: Find a better way to register and load all the locales in Node\r\n   if (!locales[name] && (typeof module !== 'undefined') &&\r\n     module && module.exports) {\r\n     try {\r\n       oldLocale = globalLocale._abbr;\r\n       var aliasedRequire = require;\r\n       aliasedRequire('./locale/' + name);\r\n       getSetGlobalLocale(oldLocale);\r\n     } catch (e) {}\r\n   }*/\r\n  if (!locales[name]) {\r\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\r\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\r\n  }\r\n\r\n  return locales[name];\r\n}\r\n\r\n// This function will load locale and then set the global locale.  If\r\n// no arguments are passed in, it will simply return the current global\r\n// locale key.\r\nexport function getSetGlobalLocale(key?: string | string[], values?: LocaleData): string {\r\n  let data: Locale;\r\n\r\n  if (key) {\r\n    if (isUndefined(values)) {\r\n      data = getLocale(key);\r\n    } else if (isString(key)) {\r\n      data = defineLocale(key, values);\r\n    }\r\n\r\n    if (data) {\r\n      globalLocale = data;\r\n    }\r\n  }\r\n\r\n  return globalLocale && globalLocale._abbr;\r\n}\r\n\r\nexport function defineLocale(name: string, config?: LocaleData): Locale {\r\n  if (config === null) {\r\n    // useful for testing\r\n    delete locales[name];\r\n    globalLocale = getLocale('en');\r\n\r\n    return null;\r\n  }\r\n\r\n  if (!config) {\r\n    return;\r\n  }\r\n\r\n  let parentConfig = baseConfig;\r\n  config.abbr = name;\r\n  if (config.parentLocale != null) {\r\n    if (locales[config.parentLocale] != null) {\r\n      parentConfig = locales[config.parentLocale]._config;\r\n    } else {\r\n      if (!localeFamilies[config.parentLocale]) {\r\n        localeFamilies[config.parentLocale] = [];\r\n      }\r\n      localeFamilies[config.parentLocale].push({ name, config });\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\r\n\r\n  if (localeFamilies[name]) {\r\n    localeFamilies[name].forEach(function (x) {\r\n      defineLocale(x.name, x.config);\r\n    });\r\n  }\r\n\r\n  // backwards compat for now: also set the locale\r\n  // make sure we set the locale AFTER all child locales have been\r\n  // created, so we won't end up with the child locale set.\r\n  getSetGlobalLocale(name);\r\n\r\n\r\n  return locales[name];\r\n}\r\n\r\nexport function updateLocale(name: string, config?: LocaleData): Locale {\r\n  let _config = config;\r\n\r\n  if (_config != null) {\r\n    let parentConfig = baseConfig;\r\n    // MERGE\r\n    const tmpLocale = loadLocale(name);\r\n    if (tmpLocale != null) {\r\n      parentConfig = tmpLocale._config;\r\n    }\r\n    _config = mergeConfigs(parentConfig, _config);\r\n    const locale = new Locale(_config);\r\n    locale.parentLocale = locales[name];\r\n    locales[name] = locale;\r\n\r\n    // backwards compat for now: also set the locale\r\n    getSetGlobalLocale(name);\r\n  } else {\r\n    // pass null for config to unupdate, useful for tests\r\n    if (locales[name] != null) {\r\n      if (locales[name].parentLocale != null) {\r\n        locales[name] = locales[name].parentLocale;\r\n      } else if (locales[name] != null) {\r\n        delete locales[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  return locales[name];\r\n}\r\n\r\n// returns locale data\r\nexport function getLocale(key?: string | string[]): Locale {\r\n  setDefaultLocale();\r\n\r\n  if (!key) {\r\n    return globalLocale;\r\n  }\r\n  // let locale;\r\n  const _key = isArray(key) ? key : [key];\r\n\r\n  return chooseLocale(_key);\r\n}\r\n\r\nexport function listLocales(): string[] {\r\n  return Object.keys(locales);\r\n}\r\n\r\nfunction setDefaultLocale(): void {\r\n  if (locales[`en`]) {\r\n\r\n    return undefined;\r\n  }\r\n\r\n  getSetGlobalLocale('en', {\r\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\r\n    ordinal(num: number): string {\r\n      const b = num % 10;\r\n      const output =\r\n        toInt((num % 100) / 10) === 1\r\n          ? 'th'\r\n          : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\r\n\r\n      return num + output;\r\n    }\r\n  });\r\n\r\n  initWeek();\r\n  initWeekYear();\r\n  initYear();\r\n  initTimezone();\r\n  initTimestamp();\r\n  initSecond();\r\n  initQuarter();\r\n  initOffset();\r\n  initMonth();\r\n  initMinute();\r\n  initMillisecond();\r\n  initHour();\r\n  initDayOfYear();\r\n  initDayOfWeek();\r\n  initDayOfMonth();\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n// todo: add support for timezones\r\n\r\nexport function initTimezone() {\r\n  // FORMATTING\r\n  addFormatToken('z', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.isUTC ? 'UTC' : '';\r\n    }\r\n  );\r\n  addFormatToken('zz', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return opts.isUTC ? 'Coordinated Universal Time' : '';\r\n    }\r\n  );\r\n}\r\n\r\n// MOMENTS\r\n\r\nexport function getZoneAbbr(isUTC: boolean) {\r\n  return isUTC ? 'UTC' : '';\r\n}\r\n\r\nexport function getZoneName(isUTC: boolean) {\r\n  return isUTC ? 'Coordinated Universal Time' : '';\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getSeconds } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { SECOND } from './constants';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n\r\nexport function initSecond() {\r\n// FORMATTING\r\n\r\n  addFormatToken('s', ['ss', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getSeconds(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('second', 's');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('second', 15);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('s', match1to2);\r\n  addRegexToken('ss', match1to2, match2);\r\n  addParseToken(['s', 'ss'], SECOND);\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getMinutes } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { MINUTE } from './constants';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { DateFormatterOptions } from '../types';\r\n\r\n\r\nexport function initMinute() {\r\n// FORMATTING\r\n\r\n  addFormatToken('m', ['mm', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getMinutes(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('minute', 'm');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('minute', 14);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('m', match1to2);\r\n  addRegexToken('mm', match1to2, match2);\r\n  addParseToken(['m', 'mm'], MINUTE);\r\n}\r\n","// FORMATTING\r\n\r\nimport { addFormatToken } from '../format/format';\r\nimport { addRegexToken, match1, match1to3, match2, match3, matchUnsigned } from '../parse/regex';\r\nimport { MILLISECOND } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { addParseToken } from '../parse/token';\r\nimport { DateArray, DateFormatterOptions, WeekParsing } from '../types';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { getMilliseconds } from '../utils/date-getters';\r\n\r\n\r\nexport function initMillisecond() {\r\n  addFormatToken('S', null, null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken(null, ['SS', 2, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\r\n    }\r\n  );\r\n\r\n  addFormatToken(null, ['SSS', 3, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC)).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSS', 4, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSS', 5, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSS', 6, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\r\n    }\r\n  );\r\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\r\n    }\r\n  );\r\n\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('millisecond', 'ms');\r\n\r\n// PRIORITY\r\n\r\n  addUnitPriority('millisecond', 16);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('S', match1to3, match1);\r\n  addRegexToken('SS', match1to3, match2);\r\n  addRegexToken('SSS', match1to3, match3);\r\n\r\n  let token;\r\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\r\n    addRegexToken(token, matchUnsigned);\r\n  }\r\n\r\n  function parseMs(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\r\n\r\n    return config;\r\n  }\r\n\r\n  for (token = 'S'; token.length <= 9; token += 'S') {\r\n    addParseToken(token, parseMs);\r\n  }\r\n// MOMENTS\r\n}\r\n","import { addFormatToken } from '../format/format';\r\nimport { getDate } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { DATE } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\n\r\n\r\nexport function initDayOfMonth() {\r\n// FORMATTING\r\n\r\n  addFormatToken('D', ['DD', 2, false], 'Do',\r\n    function(date: Date, opts: DateFormatterOptions): string {\r\n      return getDate(date, opts.isUTC)\r\n        .toString(10);\r\n    }\r\n  );\r\n\r\n// ALIASES\r\n\r\n  addUnitAlias('date', 'D');\r\n\r\n// PRIOROITY\r\n  addUnitPriority('date', 9);\r\n\r\n// PARSING\r\n\r\n  addRegexToken('D', match1to2);\r\n  addRegexToken('DD', match1to2, match2);\r\n  addRegexToken('Do', function(isStrict, locale) {\r\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\r\n  });\r\n\r\n  addParseToken(['D', 'DD'], DATE);\r\n  addParseToken(\r\n    'Do',\r\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n      array[DATE] = toInt(input.match(match1to2)[0]);\r\n\r\n      return config;\r\n    }\r\n  );\r\n}\r\n","import { toInt } from '../utils/type-checks';\r\nimport { createDuration } from './create';\r\nimport { Duration } from './constructor';\r\nimport { DateObject } from '../types';\r\n\r\nconst ordering: (keyof DateObject)[] = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\r\nconst orderingHash = ordering.reduce((mem: { [key: string]: boolean }, order) => {\r\n  mem[order] = true;\r\n\r\n  return mem;\r\n}, {});\r\n\r\nexport function isDurationValid(duration: Partial<DateObject>): boolean {\r\n  const durationKeys = Object.keys(duration);\r\n  if (durationKeys\r\n      .some((key: keyof DateObject) => {\r\n        return (key in orderingHash)\r\n          && duration[key] === null\r\n          || isNaN(duration[key]);\r\n      })) {\r\n    return false;\r\n  }\r\n  // for (let key in duration) {\r\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  let unitHasDecimal = false;\r\n  for (let i = 0; i < ordering.length; ++i) {\r\n    if (duration[ordering[i]]) {\r\n      // only allow non-integers for smallest unit\r\n      if (unitHasDecimal) {\r\n        return false;\r\n      }\r\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\r\n        unitHasDecimal = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// export function isValid() {\r\n//   return this._isValid;\r\n// }\r\n//\r\n// export function createInvalid(): Duration {\r\n//   return createDuration(NaN);\r\n// }\r\n","export function absCeil (number: number): number {\r\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\r\n}\r\n","import { Duration } from './constructor';\r\nimport { absFloor } from '../utils';\r\nimport { absCeil } from '../utils/abs-ceil';\r\n\r\nexport function bubble(dur: Duration): Duration {\r\n  let milliseconds = dur._milliseconds;\r\n  let days = dur._days;\r\n  let months = dur._months;\r\n  const data = dur._data;\r\n\r\n  // if we have a mix of positive and negative values, bubble down first\r\n  // check: https://github.com/moment/moment/issues/2166\r\n  if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\r\n      (milliseconds <= 0 && days <= 0 && months <= 0))) {\r\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\r\n    days = 0;\r\n    months = 0;\r\n  }\r\n\r\n  // The following code bubbles up values, see the tests for\r\n  // examples of what that means.\r\n  data.milliseconds = milliseconds % 1000;\r\n\r\n  const seconds = absFloor(milliseconds / 1000);\r\n  data.seconds = seconds % 60;\r\n\r\n  const minutes = absFloor(seconds / 60);\r\n  data.minutes = minutes % 60;\r\n\r\n  const hours = absFloor(minutes / 60);\r\n  data.hours = hours % 24;\r\n\r\n  days += absFloor(hours / 24);\r\n\r\n  // convert days to months\r\n  const monthsFromDays = absFloor(daysToMonths(days));\r\n  months += monthsFromDays;\r\n  days -= absCeil(monthsToDays(monthsFromDays));\r\n\r\n  // 12 months -> 1 year\r\n  const years = absFloor(months / 12);\r\n  months %= 12;\r\n\r\n  data.day = days;\r\n  data.month = months;\r\n  data.year = years;\r\n\r\n  return dur;\r\n}\r\n\r\nexport function daysToMonths(day: number): number {\r\n  // 400 years have 146097 days (taking into account leap year rules)\r\n  // 400 years have 12 months === 4800\r\n  return day * 4800 / 146097;\r\n}\r\n\r\nexport function monthsToDays(month: number): number {\r\n  // the reverse of daysToMonths\r\n  return month * 146097 / 4800;\r\n}\r\n","import { createDuration } from './create';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { Duration } from './constructor';\r\n\r\nlet round = Math.round;\r\nconst thresholds: { [key: string]: number } = {\r\n  ss: 44,         // a few seconds to seconds\r\n  s: 45,         // seconds to minute\r\n  m: 45,         // minutes to hour\r\n  h: 22,         // hours to day\r\n  d: 26,         // days to month\r\n  M: 11          // months to year\r\n};\r\n\r\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\r\nfunction substituteTimeAgo(str: 'future' | 'past', num: number,\r\n                           withoutSuffix: boolean, isFuture: boolean,\r\n                           locale: Locale): string {\r\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\r\n}\r\n\r\nexport function relativeTime(posNegDuration: Duration, withoutSuffix: boolean, locale: Locale): string {\r\n  const duration = createDuration(posNegDuration).abs();\r\n  const seconds = round(duration.as('s'));\r\n  const minutes = round(duration.as('m'));\r\n  const hours = round(duration.as('h'));\r\n  const days = round(duration.as('d'));\r\n  const months = round(duration.as('M'));\r\n  const years = round(duration.as('y'));\r\n\r\n  const a: [string] | [string, number] =\r\n    seconds <= thresholds.ss && ['s', seconds] ||\r\n    seconds < thresholds.s && ['ss', seconds] ||\r\n    minutes <= 1 && ['m'] ||\r\n    minutes < thresholds.m && ['mm', minutes] ||\r\n    hours <= 1 && ['h'] ||\r\n    hours < thresholds.h && ['hh', hours] ||\r\n    days <= 1 && ['d'] ||\r\n    days < thresholds.d && ['dd', days] ||\r\n    months <= 1 && ['M'] ||\r\n    months < thresholds.M && ['MM', months] ||\r\n    years <= 1 && ['y'] || ['yy', years];\r\n\r\n  const b: [string, number | string, boolean, boolean, Locale] =\r\n    [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\r\n  // a[2] = withoutSuffix;\r\n  // a[3] = +posNegDuration > 0;\r\n  // a[4] = locale;\r\n\r\n  return substituteTimeAgo.apply(null, b);\r\n}\r\n\r\n// This function allows you to set the rounding function for relative time strings\r\nexport function getSetRelativeTimeRounding(roundingFunction: any): boolean | ((x: number) => number) {\r\n  if (roundingFunction === undefined) {\r\n    return round;\r\n  }\r\n  if (typeof(roundingFunction) === 'function') {\r\n    round = roundingFunction;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// This function allows you to set a threshold for relative time strings\r\nexport function getSetRelativeTimeThreshold(threshold: string, limit: number): boolean | number {\r\n  if (thresholds[threshold] === undefined) {\r\n    return false;\r\n  }\r\n  if (limit === undefined) {\r\n    return thresholds[threshold];\r\n  }\r\n  thresholds[threshold] = limit;\r\n  if (threshold === 's') {\r\n    thresholds.ss = limit - 1;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// export function humanize(withSuffix) {\r\n//   if (!this.isValid()) {\r\n//     return this.localeData().invalidDate();\r\n//   }\r\n//\r\n//   const locale = this.localeData();\r\n//   let output = relativeTime(this, !withSuffix, locale);\r\n//\r\n//   if (withSuffix) {\r\n//     output = locale.pastFuture(+this, output);\r\n//   }\r\n//\r\n//   return locale.postformat(output);\r\n// }\r\n","import { getLocale } from '../locale/locales';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { isDurationValid } from './valid';\r\nimport { bubble, daysToMonths, monthsToDays } from './bubble';\r\nimport { DateObject } from '../types';\r\nimport { Locale } from '../locale/locale.class';\r\nimport { normalizeUnits } from '../units/aliases';\r\nimport { relativeTime } from './humanize';\r\nimport { toInt } from '../utils/type-checks';\r\n\r\nexport class Duration {\r\n  _milliseconds: number;\r\n  _days: number;\r\n  _months: number;\r\n  _data: Partial<DateObject> = {};\r\n  _locale: Locale = getLocale();\r\n  _isValid: boolean;\r\n\r\n  constructor(duration: Partial<DateObject>, config: DateParsingConfig = {}) {\r\n    this._locale = config && config._locale || getLocale();\r\n    // const normalizedInput = normalizeObjectUnits(duration);\r\n    const normalizedInput = duration;\r\n    const years = normalizedInput.year || 0;\r\n    const quarters = normalizedInput.quarter || 0;\r\n    const months = normalizedInput.month || 0;\r\n    const weeks = normalizedInput.week || 0;\r\n    const days = normalizedInput.day || 0;\r\n    const hours = normalizedInput.hours || 0;\r\n    const minutes = normalizedInput.minutes || 0;\r\n    const seconds = normalizedInput.seconds || 0;\r\n    const milliseconds = normalizedInput.milliseconds || 0;\r\n\r\n    this._isValid = isDurationValid(normalizedInput);\r\n\r\n    // representation for dateAddRemove\r\n    this._milliseconds = +milliseconds +\r\n      seconds * 1000 +\r\n      minutes * 60 * 1000 + // 1000 * 60\r\n      hours * 1000 * 60 * 60; // using 1000 * 60 * 60\r\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\r\n    // Because of dateAddRemove treats 24 hours as different from a\r\n    // day when working around DST, we need to store them separately\r\n    this._days = +days +\r\n      weeks * 7;\r\n    // It is impossible to translate months into days without knowing\r\n    // which months you are are talking about, so we have to store\r\n    // it separately.\r\n    this._months = +months +\r\n      quarters * 3 +\r\n      years * 12;\r\n\r\n    // this._data = {};\r\n\r\n    // this._locale = getLocale();\r\n\r\n    // this._bubble();\r\n    return bubble(this);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return this._isValid;\r\n  }\r\n\r\n  humanize(withSuffix?: boolean): string {\r\n    // throw new Error(`TODO: implement`);\r\n\r\n    if (!this.isValid()) {\r\n      return this.localeData().invalidDate;\r\n    }\r\n\r\n    const locale = this.localeData();\r\n    let output = relativeTime(this, !withSuffix, locale);\r\n\r\n    if (withSuffix) {\r\n      output = locale.pastFuture(+this, output);\r\n    }\r\n\r\n    return locale.postformat(output);\r\n  }\r\n\r\n  localeData(): Locale {\r\n    return this._locale;\r\n  }\r\n\r\n  locale(): string;\r\n  locale(localeKey: string): Duration;\r\n  locale(localeKey?: string): Duration | string {\r\n    if (!localeKey) {\r\n      return this._locale._abbr;\r\n    }\r\n\r\n    this._locale = getLocale(localeKey) || this._locale;\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  abs(): Duration {\r\n    const mathAbs = Math.abs;\r\n\r\n    const data = this._data;\r\n\r\n    this._milliseconds = mathAbs(this._milliseconds);\r\n    this._days = mathAbs(this._days);\r\n    this._months = mathAbs(this._months);\r\n\r\n    data.milliseconds = mathAbs(data.milliseconds);\r\n    data.seconds = mathAbs(data.seconds);\r\n    data.minutes = mathAbs(data.minutes);\r\n    data.hours = mathAbs(data.hours);\r\n    data.month = mathAbs(data.month);\r\n    data.year = mathAbs(data.year);\r\n\r\n    return this;\r\n  }\r\n\r\n  as(_units: string): number {\r\n    if (!this.isValid()) {\r\n      return NaN;\r\n    }\r\n    let days;\r\n    let months;\r\n    const milliseconds = this._milliseconds;\r\n\r\n    const units = normalizeUnits(_units);\r\n\r\n    if (units === 'month' || units === 'year') {\r\n      days = this._days + milliseconds / 864e5;\r\n      months = this._months + daysToMonths(days);\r\n\r\n      return units === 'month' ? months : months / 12;\r\n    }\r\n\r\n    // handle milliseconds separately because of floating point math errors (issue #1867)\r\n    days = this._days + Math.round(monthsToDays(this._months));\r\n    switch (units) {\r\n      case 'week'   :\r\n        return days / 7 + milliseconds / 6048e5;\r\n      case 'day'    :\r\n        return days + milliseconds / 864e5;\r\n      case 'hours'   :\r\n        return days * 24 + milliseconds / 36e5;\r\n      case 'minutes' :\r\n        return days * 1440 + milliseconds / 6e4;\r\n      case 'seconds' :\r\n        return days * 86400 + milliseconds / 1000;\r\n      // Math.floor prevents floating point math errors here\r\n      case 'milliseconds':\r\n        return Math.floor(days * 864e5) + milliseconds;\r\n      default:\r\n        throw new Error(`Unknown unit ${units}`);\r\n    }\r\n  }\r\n\r\n  valueOf () {\r\n    if (!this.isValid()) {\r\n      return NaN;\r\n    }\r\n\r\n    return (\r\n      this._milliseconds +\r\n      this._days * 864e5 +\r\n      (this._months % 12) * 2592e6 +\r\n      toInt(this._months / 12) * 31536e6\r\n    );\r\n  }\r\n}\r\n\r\nexport function isDuration(obj: any): obj is Duration {\r\n  return obj instanceof Duration;\r\n}\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { getParsingFlags } from './parsing-flags';\r\n\r\nexport function isValid(config: DateParsingConfig): boolean {\r\n  if (config._isValid == null) {\r\n    const flags = getParsingFlags(config);\r\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i: number) {\r\n      return i != null;\r\n    });\r\n    let isNowValid = !isNaN(config._d && config._d.getTime()) &&\r\n      flags.overflow < 0 &&\r\n      !flags.empty &&\r\n      !flags.invalidMonth &&\r\n      !flags.invalidWeekday &&\r\n      !flags.weekdayMismatch &&\r\n      !flags.nullInput &&\r\n      !flags.invalidFormat &&\r\n      !flags.userInvalidated &&\r\n      (!flags.meridiem || (flags.meridiem && parsedParts));\r\n\r\n    if (config._strict) {\r\n      isNowValid = isNowValid &&\r\n        flags.charsLeftOver === 0 &&\r\n        flags.unusedTokens.length === 0 &&\r\n        flags.bigHour === undefined;\r\n    }\r\n\r\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\r\n      config._isValid = isNowValid;\r\n    } else {\r\n      return isNowValid;\r\n    }\r\n  }\r\n\r\n  return config._isValid;\r\n}\r\n\r\nexport function createInvalid(config: DateParsingConfig, flags?: { nullInput: boolean }): DateParsingConfig {\r\n  config._d = new Date(NaN);\r\n  Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\r\n\r\n  return config;\r\n}\r\n\r\nexport function markInvalid(config: DateParsingConfig): DateParsingConfig {\r\n  config._isValid = false;\r\n\r\n  return config;\r\n}\r\n","import { defaultLocaleMonthsShort, defaultLocaleWeekdaysShort } from '../locale/locale.class';\r\nimport { DateArray } from '../types';\r\nimport { DateParsingConfig } from './parsing.types';\r\nimport { isString } from '../utils/type-checks';\r\nimport { configFromStringAndFormat } from './from-string-and-format';\r\nimport { createUTCDate } from './date-from-array';\r\nimport { createInvalid, markInvalid } from './valid';\r\nimport { getParsingFlags } from './parsing-flags';\r\n\r\n// iso 8601 regex\r\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\r\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\r\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\r\n\r\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\r\n\r\nconst isoDates: [string, RegExp, boolean][] = [\r\n  ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\r\n  ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\r\n  ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\r\n  ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\r\n  ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\r\n  ['YYYY-MM', /\\d{4}-\\d\\d/, false],\r\n  ['YYYYYYMMDD', /[+-]\\d{10}/, true],\r\n  ['YYYYMMDD', /\\d{8}/, true],\r\n  // YYYYMM is NOT allowed by the standard\r\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\r\n  ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\r\n  ['YYYYDDD', /\\d{7}/, true]\r\n];\r\n\r\n// iso time formats and regexes\r\nconst isoTimes: [string, RegExp][] = [\r\n  ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\r\n  ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\r\n  ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\r\n  ['HH:mm', /\\d\\d:\\d\\d/],\r\n  ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\r\n  ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\r\n  ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\r\n  ['HHmm', /\\d\\d\\d\\d/],\r\n  ['HH', /\\d\\d/]\r\n];\r\n\r\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\r\n\r\nconst obsOffsets: { [key: string]: number } = {\r\n  UT: 0,\r\n  GMT: 0,\r\n  EDT: -4 * 60,\r\n  EST: -5 * 60,\r\n  CDT: -5 * 60,\r\n  CST: -6 * 60,\r\n  MDT: -6 * 60,\r\n  MST: -7 * 60,\r\n  PDT: -7 * 60,\r\n  PST: -8 * 60\r\n};\r\n\r\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\r\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\r\n\r\n// date from iso format\r\nexport function configFromISO(config: DateParsingConfig): DateParsingConfig {\r\n  if (!isString(config._i)) {\r\n    return config;\r\n  }\r\n\r\n  const input = config._i;\r\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\r\n\r\n\r\n  let allowTime;\r\n  let dateFormat;\r\n  let timeFormat;\r\n  let tzFormat;\r\n\r\n  if (!match) {\r\n    config._isValid = false;\r\n\r\n    return config;\r\n  }\r\n\r\n  // getParsingFlags(config).iso = true;\r\n  let i;\r\n  let l;\r\n  for (i = 0, l = isoDates.length; i < l; i++) {\r\n    if (isoDates[i][1].exec(match[1])) {\r\n      dateFormat = isoDates[i][0];\r\n      allowTime = isoDates[i][2] !== false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (dateFormat == null) {\r\n    config._isValid = false;\r\n\r\n    return config;\r\n  }\r\n\r\n  if (match[3]) {\r\n    for (i = 0, l = isoTimes.length; i < l; i++) {\r\n      if (isoTimes[i][1].exec(match[3])) {\r\n        // match[2] should be 'T' or space\r\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (timeFormat == null) {\r\n      config._isValid = false;\r\n\r\n      return config;\r\n    }\r\n\r\n  }\r\n  if (!allowTime && timeFormat != null) {\r\n    config._isValid = false;\r\n\r\n    return config;\r\n  }\r\n\r\n  if (match[4]) {\r\n    if (tzRegex.exec(match[4])) {\r\n      tzFormat = 'Z';\r\n    } else {\r\n      config._isValid = false;\r\n\r\n      return config;\r\n    }\r\n  }\r\n\r\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\r\n\r\n  return configFromStringAndFormat(config);\r\n}\r\n\r\nfunction extractFromRFC2822Strings(yearStr: string, monthStr: string, dayStr: string, hourStr: string, minuteStr: string, secondStr: string): DateArray {\r\n  const result = [\r\n    untruncateYear(yearStr),\r\n    defaultLocaleMonthsShort.indexOf(monthStr),\r\n    parseInt(dayStr, 10),\r\n    parseInt(hourStr, 10),\r\n    parseInt(minuteStr, 10)\r\n  ];\r\n\r\n  if (secondStr) {\r\n    result.push(parseInt(secondStr, 10));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction untruncateYear(yearStr: string): number {\r\n  const year = parseInt(yearStr, 10);\r\n\r\n  return year <= 49 ? year + 2000 : year;\r\n}\r\n\r\nfunction preprocessRFC2822(str: string): string {\r\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\r\n  return str\r\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\r\n    .replace(/(\\s\\s+)/g, ' ').trim();\r\n}\r\n\r\nfunction checkWeekday(weekdayStr: string, parsedInput: DateArray, config: DateParsingConfig): boolean {\r\n  if (weekdayStr) {\r\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\r\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\r\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\r\n    if (weekdayProvided !== weekdayActual) {\r\n      getParsingFlags(config).weekdayMismatch = true;\r\n      config._isValid = false;\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction calculateOffset(obsOffset: string, militaryOffset: string, numOffset: string) {\r\n  if (obsOffset) {\r\n    return obsOffsets[obsOffset];\r\n  } else if (militaryOffset) {\r\n    // the only allowed military tz is Z\r\n    return 0;\r\n  } else {\r\n    const hm = parseInt(numOffset, 10);\r\n    const m = hm % 100;\r\n    const h = (hm - m) / 100;\r\n\r\n    return h * 60 + m;\r\n  }\r\n}\r\n\r\n// date and time from ref 2822 format\r\nexport function configFromRFC2822(config: DateParsingConfig): DateParsingConfig {\r\n  if (!isString(config._i)) {\r\n    return config;\r\n  }\r\n\r\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\r\n\r\n  if (!match) {\r\n    return markInvalid(config);\r\n  }\r\n\r\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\r\n  if (!checkWeekday(match[1], parsedArray, config)) {\r\n    return config;\r\n  }\r\n\r\n  config._a = parsedArray;\r\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\r\n\r\n  config._d = createUTCDate.apply(null, config._a);\r\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\r\n\r\n  getParsingFlags(config).rfc2822 = true;\r\n\r\n  return config;\r\n}\r\n\r\n// date from iso format or fallback\r\nexport function configFromString(config: DateParsingConfig): DateParsingConfig {\r\n  if (!isString(config._i)) {\r\n    return config;\r\n  }\r\n\r\n  const matched = aspNetJsonRegex.exec(config._i);\r\n\r\n  if (matched !== null) {\r\n    config._d = new Date(+matched[1]);\r\n\r\n    return config;\r\n  }\r\n\r\n  // todo: update logic processing\r\n  // isISO -> configFromISO\r\n  // isRFC -> configFromRFC\r\n\r\n  configFromISO(config);\r\n  if (config._isValid === false) {\r\n    delete config._isValid;\r\n  } else {\r\n    return config;\r\n  }\r\n\r\n  configFromRFC2822(config);\r\n  if (config._isValid === false) {\r\n    delete config._isValid;\r\n  } else {\r\n    return config;\r\n  }\r\n\r\n  // Final attempt, use Input Fallback\r\n  // hooks.createFromInputFallback(config);\r\n  return createInvalid(config);\r\n}\r\n\r\n// hooks.createFromInputFallback = deprecate(\r\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\r\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\r\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\r\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\r\n//     function (config) {\r\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\r\n//     }\r\n// );\r\n","// moment.js\r\n// version : 2.18.1\r\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\r\n// license : MIT\r\n// momentjs.com\r\n\r\nimport './units/index';\r\nimport { formatFunctions, makeFormatFunction } from './format/format';\r\nimport { Locale } from './locale/locale.class';\r\nimport { getLocale } from './locale/locales';\r\nimport { isDateValid } from './utils/type-checks';\r\n\r\nexport function formatDate(date: Date, format: string, locale?: string, isUTC?: boolean, offset = 0): string {\r\n  const _locale = getLocale(locale || 'en');\r\n  if (!_locale) {\r\n    throw new Error(\r\n      `Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`\r\n    );\r\n  }\r\n\r\n  const _format = format || (isUTC ?  'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\r\n\r\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\r\n\r\n  if (!output) {\r\n    return output;\r\n  }\r\n\r\n  return _locale.postformat(output);\r\n}\r\n\r\n// format date using native date object\r\nexport function formatMoment(date: Date, _format: string, locale: Locale, isUTC?: boolean, offset = 0): string {\r\n  if (!isDateValid(date)) {\r\n    return locale.invalidDate;\r\n  }\r\n\r\n  const format = expandFormat(_format, locale);\r\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\r\n\r\n  return formatFunctions[format](date, locale, isUTC, offset);\r\n}\r\n\r\nexport function expandFormat(_format: string, locale: Locale): string {\r\n  let format = _format;\r\n  let i = 5;\r\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\r\n\r\n  const replaceLongDateFormatTokens = (input: any) => {\r\n    return locale.formatLongDate(input) || input;\r\n  };\r\n\r\n  localFormattingTokens.lastIndex = 0;\r\n  while (i >= 0 && localFormattingTokens.test(format)) {\r\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\r\n    localFormattingTokens.lastIndex = 0;\r\n    i -= 1;\r\n  }\r\n\r\n  return format;\r\n}\r\n","// Pick the first defined of two or three arguments.\r\nexport function defaults<T>(a?: T, b?: T, c?: T): T {\r\n  if (a != null) {\r\n    return a;\r\n  }\r\n  if (b != null) {\r\n    return b;\r\n  }\r\n\r\n  return c;\r\n}\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { DateArray } from '../types';\r\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, YEAR } from '../units/constants';\r\nimport { daysInYear } from '../units/year';\r\nimport { getParsingFlags } from './parsing-flags';\r\nimport { createUTCDate } from './date-from-array';\r\nimport { createDate } from './date-from-array';\r\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from '../units/week-calendar-utils';\r\nimport { defaults } from '../utils/defaults';\r\n\r\nfunction currentDateArray(config: DateParsingConfig): DateArray {\r\n  const nowValue = new Date();\r\n\r\n  if (config._useUTC) {\r\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\r\n  }\r\n\r\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\r\n}\r\n\r\n// convert an array to a date.\r\n// the array should mirror the parameters below\r\n// note: all values past the year are optional and will default to the lowest possible value.\r\n// [year, month, day , hour, minute, second, millisecond]\r\nexport function configFromArray(config: DateParsingConfig): DateParsingConfig {\r\n  const input = [];\r\n  let i;\r\n  let date;\r\n  let yearToUse;\r\n\r\n  if (config._d) {\r\n    return config;\r\n  }\r\n\r\n  const currentDate = currentDateArray(config);\r\n\r\n  // compute day of the year from weeks and weekdays\r\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\r\n    dayOfYearFromWeekInfo(config);\r\n  }\r\n\r\n  // if the day of the year is set, figure out what it is\r\n  if (config._dayOfYear != null) {\r\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\r\n\r\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\r\n      getParsingFlags(config)._overflowDayOfYear = true;\r\n    }\r\n\r\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\r\n    config._a[MONTH] = date.getUTCMonth();\r\n    config._a[DATE] = date.getUTCDate();\r\n  }\r\n\r\n  // Default to current date.\r\n  // * if no year, month, day of month are given, default to today\r\n  // * if day of month is given, default month and year\r\n  // * if month is given, default only year\r\n  // * if year is given, don't default anything\r\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\r\n    config._a[i] = input[i] = currentDate[i];\r\n  }\r\n\r\n  // Zero out whatever was not defaulted, including time\r\n  for (; i < 7; i++) {\r\n    config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\r\n  }\r\n\r\n  // Check for 24:00:00.000\r\n  if (config._a[HOUR] === 24 &&\r\n    config._a[MINUTE] === 0 &&\r\n    config._a[SECOND] === 0 &&\r\n    config._a[MILLISECOND] === 0) {\r\n    config._nextDay = true;\r\n    config._a[HOUR] = 0;\r\n  }\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\r\n  const expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\r\n\r\n  // Apply timezone offset from input. The actual utcOffset can be changed\r\n  // with parseZone.\r\n  if (config._tzm != null) {\r\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\r\n  }\r\n\r\n  if (config._nextDay) {\r\n    config._a[HOUR] = 24;\r\n  }\r\n\r\n  // check for mismatching day of week\r\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\r\n    getParsingFlags(config).weekdayMismatch = true;\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nfunction dayOfYearFromWeekInfo(config: DateParsingConfig): DateParsingConfig {\r\n  let weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\r\n\r\n  const w = config._w;\r\n  if (w.GG != null || w.W != null || w.E != null) {\r\n    dow = 1;\r\n    doy = 4;\r\n\r\n    // TODO: We need to take the current isoWeekYear, but that depends on\r\n    // how we interpret now (local, utc, fixed offset). So create\r\n    // a now version of current config (take local/utc/offset flags, and\r\n    // create now).\r\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\r\n    week = defaults(w.W, 1);\r\n    weekday = defaults(w.E, 1);\r\n    if (weekday < 1 || weekday > 7) {\r\n      weekdayOverflow = true;\r\n    }\r\n  } else {\r\n    dow = config._locale._week.dow;\r\n    doy = config._locale._week.doy;\r\n\r\n    const curWeek = weekOfYear(new Date(), dow, doy);\r\n\r\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\r\n\r\n    // Default to current week.\r\n    week = defaults(w.w, curWeek.week);\r\n\r\n    if (w.d != null) {\r\n      // weekday -- low day numbers are considered next week\r\n      weekday = w.d;\r\n      if (weekday < 0 || weekday > 6) {\r\n        weekdayOverflow = true;\r\n      }\r\n    } else if (w.e != null) {\r\n      // local weekday -- counting starts from beginning of week\r\n      weekday = w.e + dow;\r\n      if (w.e < 0 || w.e > 6) {\r\n        weekdayOverflow = true;\r\n      }\r\n    } else {\r\n      // default to beginning of week\r\n      weekday = dow;\r\n    }\r\n  }\r\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\r\n    getParsingFlags(config)._overflowWeeks = true;\r\n  } else if (weekdayOverflow != null) {\r\n    getParsingFlags(config)._overflowWeekday = true;\r\n  } else {\r\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\r\n    config._a[YEAR] = temp.year;\r\n    config._dayOfYear = temp.dayOfYear;\r\n  }\r\n\r\n  return config;\r\n}\r\n","import { getParsingFlags } from './parsing-flags';\r\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, WEEK, WEEKDAY, YEAR } from '../units/constants';\r\nimport { daysInMonth } from '../units/month';\r\nimport { DateParsingConfig } from './parsing.types';\r\n\r\nexport function checkOverflow(config: DateParsingConfig): DateParsingConfig {\r\n  let overflow;\r\n  const a = config._a;\r\n\r\n  if (a && getParsingFlags(config).overflow === -2) {\r\n    // todo: fix this sh*t\r\n    overflow =\r\n      a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\r\n        a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\r\n          a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\r\n            a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\r\n              a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\r\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\r\n                  -1;\r\n\r\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\r\n      overflow = DATE;\r\n    }\r\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\r\n      overflow = WEEK;\r\n    }\r\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\r\n      overflow = WEEKDAY;\r\n    }\r\n\r\n    getParsingFlags(config).overflow = overflow;\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { configFromISO, configFromRFC2822 } from './from-string';\r\nimport { expandFormat } from '../format';\r\nimport { formattingTokens, formatTokenFunctions } from '../format/format';\r\nimport { isArray, isString } from '../utils/type-checks';\r\nimport { getParseRegexForToken } from '../parse/regex';\r\nimport { addTimeToArrayFromToken } from '../parse/token';\r\nimport { HOUR } from '../units/constants';\r\nimport { configFromArray } from './from-array';\r\nimport { getParsingFlags } from './parsing-flags';\r\nimport { checkOverflow } from './check-overflow';\r\nimport { Locale } from '../locale/locale.class';\r\n\r\n// constant that refers to the ISO standard\r\n// hooks.ISO_8601 = function () {};\r\nexport const ISO_8601 = 'ISO_8601';\r\n\r\n// constant that refers to the RFC 2822 form\r\n// hooks.RFC_2822 = function () {};\r\nexport const RFC_2822 = 'RFC_2822';\r\n\r\n// date from string and format string\r\nexport function configFromStringAndFormat(config: DateParsingConfig): DateParsingConfig {\r\n  // TODO: Move this to another part of the creation flow to prevent circular deps\r\n  if (config._f === ISO_8601) {\r\n    return configFromISO(config);\r\n  }\r\n  if (config._f === RFC_2822) {\r\n    return configFromRFC2822(config);\r\n  }\r\n  config._a = [];\r\n  getParsingFlags(config).empty = true;\r\n\r\n  if (isArray(config._f) || (!config._i && config._i !== 0)) {\r\n    return config;\r\n  }\r\n\r\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\r\n\r\n  let input = config._i.toString();\r\n  let totalParsedInputLength = 0;\r\n  const inputLength = input.length;\r\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\r\n\r\n  let i;\r\n  let token;\r\n  let parsedInput;\r\n  let skipped;\r\n  for (i = 0; i < tokens.length; i++) {\r\n    token = tokens[i];\r\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\r\n    if (parsedInput) {\r\n      skipped = input.substr(0, input.indexOf(parsedInput));\r\n      if (skipped.length > 0) {\r\n        getParsingFlags(config).unusedInput.push(skipped);\r\n      }\r\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\r\n      totalParsedInputLength += parsedInput.length;\r\n    }\r\n    // don't parse if it's not a known token\r\n    if (formatTokenFunctions[token]) {\r\n      if (parsedInput) {\r\n        getParsingFlags(config).empty = false;\r\n      } else {\r\n        getParsingFlags(config).unusedTokens.push(token);\r\n      }\r\n\r\n      addTimeToArrayFromToken(token, parsedInput, config);\r\n    } else if (config._strict && !parsedInput) {\r\n      getParsingFlags(config).unusedTokens.push(token);\r\n    }\r\n  }\r\n\r\n  // add remaining unparsed input length to the string\r\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\r\n  if (input.length > 0) {\r\n    getParsingFlags(config).unusedInput.push(input);\r\n  }\r\n\r\n  // clear _12h flag if hour is <= 12\r\n  if (config._a[HOUR] <= 12 &&\r\n    getParsingFlags(config).bigHour === true &&\r\n    config._a[HOUR] > 0) {\r\n    getParsingFlags(config).bigHour = void 0;\r\n  }\r\n\r\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\r\n  getParsingFlags(config).meridiem = config._meridiem;\r\n  // handle meridiem\r\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\r\n\r\n  configFromArray(config);\r\n\r\n  return checkOverflow(config);\r\n}\r\n\r\n\r\nfunction meridiemFixWrap(locale: Locale, _hour: number, meridiem: string): number {\r\n  let hour = _hour;\r\n\r\n  if (meridiem == null) {\r\n    // nothing to do\r\n    return hour;\r\n  }\r\n\r\n  if (locale.meridiemHour != null) {\r\n    return locale.meridiemHour(hour, meridiem);\r\n  }\r\n\r\n  if (locale.isPM == null) {\r\n    // this is not supposed to happen\r\n    return hour;\r\n  }\r\n  // Fallback\r\n  const isPm = locale.isPM(meridiem);\r\n  if (isPm && hour < 12) {\r\n    hour += 12;\r\n  }\r\n\r\n  if (!isPm && hour === 12) {\r\n    hour = 0;\r\n  }\r\n\r\n  return hour;\r\n}\r\n","import { normalizeObjectUnits } from '../units/aliases';\r\nimport { configFromArray } from './from-array';\r\nimport { DateParsingConfig } from './parsing.types';\r\nimport { isObject, isString } from '../utils/type-checks';\r\n\r\nexport function configFromObject(config: DateParsingConfig): DateParsingConfig {\r\n  if (config._d) {\r\n    return config;\r\n  }\r\n\r\n  const input = config._i;\r\n  if (isObject(input)) {\r\n    const i = normalizeObjectUnits(input as Record<string, unknown>);\r\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\r\n    // todo: obsolete -> remove it\r\n      .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\r\n  }\r\n\r\n  return configFromArray(config);\r\n}\r\n","import { isArray, isDate, isNumber, isObject, isObjectEmpty, isString, isUndefined } from '../utils/type-checks';\r\nimport { DateParsingConfig } from './parsing.types';\r\nimport { getLocale } from '../locale/locales';\r\nimport { createInvalid, isValid } from './valid';\r\nimport { configFromStringAndArray } from './from-string-and-array';\r\nimport { configFromStringAndFormat } from './from-string-and-format';\r\nimport { cloneDate } from './clone';\r\nimport { configFromString } from './from-string';\r\nimport { configFromArray } from './from-array';\r\nimport { configFromObject } from './from-object';\r\nimport { checkOverflow } from './check-overflow';\r\nimport { DateInput } from '../testing/chain';\r\n\r\nfunction createFromConfig(config: DateParsingConfig): DateParsingConfig {\r\n  const res = checkOverflow(prepareConfig(config));\r\n  // todo: remove, in moment.js it's never called cuz of moment constructor\r\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\r\n  if (!isValid(Object.assign({}, res, {_isValid: null}))) {\r\n    res._d = new Date(NaN);\r\n  }\r\n  // todo: update offset\r\n  /*if (res._nextDay) {\r\n    // Adding is smart enough around DST\r\n    res._d = add(res._d, 1, 'day');\r\n    res._nextDay = undefined;\r\n  }*/\r\n\r\n  return res;\r\n}\r\n\r\nexport function prepareConfig(config: DateParsingConfig): DateParsingConfig {\r\n  let input = config._i;\r\n  const format = config._f;\r\n\r\n  config._locale = config._locale || getLocale(config._l);\r\n\r\n  if (input === null || (format === undefined && input === '')) {\r\n    return createInvalid(config, { nullInput: true });\r\n  }\r\n\r\n  if (isString(input)) {\r\n    config._i = input = config._locale.preparse(input, format);\r\n  }\r\n\r\n  if (isDate(input)) {\r\n    config._d = cloneDate(input);\r\n\r\n    return config;\r\n  }\r\n\r\n  // todo: add check for recursion\r\n\r\n  if (isArray(format)) {\r\n    configFromStringAndArray(config);\r\n  } else if (format) {\r\n    configFromStringAndFormat(config);\r\n  } else {\r\n    configFromInput(config);\r\n  }\r\n\r\n  if (!isValid(config)) {\r\n    config._d = null;\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nfunction configFromInput(config: DateParsingConfig): DateParsingConfig {\r\n  const input = config._i;\r\n  if (isUndefined(input)) {\r\n    config._d = new Date();\r\n  } else if (isDate(input)) {\r\n    config._d = cloneDate(input);\r\n  } else if (isString(input)) {\r\n    configFromString(config);\r\n  } else if (isArray<string | number>(input) && input.length) {\r\n    const _arr: (string | number)[] = input.slice(0);\r\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\r\n    configFromArray(config);\r\n  } else if (isObject(input)) {\r\n    configFromObject(config);\r\n  } else if (isNumber(input)) {\r\n    // from milliseconds\r\n    config._d = new Date(input);\r\n  } else {\r\n    //   hooks.createFromInputFallback(config);\r\n    return createInvalid(config);\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nexport function createLocalOrUTC(input: DateInput, format?: string | string[], localeKey?: string, strict?: boolean, isUTC?: boolean): DateParsingConfig {\r\n  const config: DateParsingConfig = {};\r\n  let _input = input;\r\n\r\n  // params switch -> skip; testing it well\r\n  // if (localeKey === true || localeKey === false) {\r\n  //     strict = localeKey;\r\n  //     localeKey = undefined;\r\n  // }\r\n\r\n  // todo: fail fast and return not valid date\r\n  if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\r\n    _input = undefined;\r\n  }\r\n  // object construction must be done this way.\r\n  // https://github.com/moment/moment/issues/1423\r\n  // config._isAMomentObject = true;\r\n  config._useUTC = config._isUTC = isUTC;\r\n  config._l = localeKey;\r\n  config._i = _input;\r\n  config._f = format;\r\n  config._strict = strict;\r\n\r\n  return createFromConfig(config);\r\n}\r\n","import { DateParsingConfig } from './parsing.types';\r\nimport { createInvalid, isValid } from './valid';\r\nimport { getParsingFlags } from './parsing-flags';\r\nimport { configFromStringAndFormat } from './from-string-and-format';\r\n\r\n// date from string and array of format strings\r\nexport function configFromStringAndArray(config: DateParsingConfig): DateParsingConfig {\r\n  let tempConfig;\r\n  let bestMoment;\r\n  let scoreToBeat;\r\n  let currentScore;\r\n\r\n  if (!config._f || config._f.length === 0) {\r\n    getParsingFlags(config).invalidFormat = true;\r\n\r\n    return createInvalid(config);\r\n  }\r\n\r\n  let i;\r\n  for (i = 0; i < config._f.length; i++) {\r\n    currentScore = 0;\r\n    tempConfig = Object.assign({}, config);\r\n    if (config._useUTC != null) {\r\n      tempConfig._useUTC = config._useUTC;\r\n    }\r\n    tempConfig._f = config._f[i];\r\n    configFromStringAndFormat(tempConfig);\r\n\r\n    if (!isValid(tempConfig)) {\r\n      continue;\r\n    }\r\n\r\n    // if there is any input that was not parsed add a penalty for that format\r\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\r\n\r\n    // or tokens\r\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\r\n\r\n    getParsingFlags(tempConfig).score = currentScore;\r\n\r\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\r\n      scoreToBeat = currentScore;\r\n      bestMoment = tempConfig;\r\n    }\r\n  }\r\n\r\n  return Object.assign(config, bestMoment || tempConfig);\r\n}\r\n","import { createLocalOrUTC } from './from-anything';\r\nimport { DateInput } from '../testing/chain';\r\nimport { isDate } from '../utils/type-checks';\r\n\r\nexport function parseDate(input: DateInput, format?: string | string[],\r\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\r\n  if (isDate(input)) {\r\n    return input;\r\n  }\r\n\r\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\r\n\r\n  return config._d;\r\n}\r\n\r\nexport function utcAsLocal(date) {\r\n  if (!(date instanceof Date)) {\r\n    return null;\r\n  }\r\n\r\n  return new Date(\r\n    date.getUTCFullYear(),\r\n    date.getUTCMonth(),\r\n    date.getUTCDate(),\r\n    date.getUTCHours(),\r\n    date.getUTCMinutes(),\r\n    date.getUTCSeconds(),\r\n    date.getUTCMilliseconds()\r\n  );\r\n}\r\n","export function absRound(num: number): number {\r\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\r\n}\r\n","import { UnitOfTime } from '../types';\r\nimport { endOf, startOf } from './start-end-of';\r\n\r\nexport function isAfter(\r\n  date1: Date,\r\n  date2: Date,\r\n  units: UnitOfTime = 'milliseconds'\r\n): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  if (units === 'milliseconds') {\r\n    return date1.valueOf() > date2.valueOf();\r\n  }\r\n\r\n  return date2.valueOf() < startOf(date1, units).valueOf();\r\n}\r\n\r\nexport function isBefore(\r\n  date1: Date,\r\n  date2: Date,\r\n  units: UnitOfTime = 'milliseconds'\r\n): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  if (units === 'milliseconds') {\r\n    return date1.valueOf() < date2.valueOf();\r\n  }\r\n\r\n  return endOf(date1, units).valueOf() < date2.valueOf();\r\n}\r\n\r\nexport function isDisabledDay(date: Date, daysDisabled: number[]): boolean {\r\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\r\n    return false;\r\n  }\r\n\r\n  return daysDisabled.some((day: number) => day === date.getDay());\r\n}\r\n\r\nexport function isBetween(\r\n  date: Date,\r\n  from: Date,\r\n  to: Date,\r\n  units: UnitOfTime,\r\n  inclusivity = '()'\r\n): boolean {\r\n  const leftBound =\r\n    inclusivity[0] === '('\r\n      ? isAfter(date, from, units)\r\n      : !isBefore(date, from, units);\r\n  const rightBound =\r\n    inclusivity[1] === ')'\r\n      ? isBefore(date, to, units)\r\n      : !isAfter(date, to, units);\r\n\r\n  return leftBound && rightBound;\r\n}\r\n\r\nexport function isSame(\r\n  date1: Date,\r\n  date2: Date,\r\n  units: UnitOfTime = 'milliseconds'\r\n): boolean {\r\n  if (!date1 || !date2) {\r\n    return false;\r\n  }\r\n\r\n  if (units === 'milliseconds') {\r\n    return date1.valueOf() === date2.valueOf();\r\n  }\r\n\r\n  const inputMs = date2.valueOf();\r\n\r\n  return (\r\n    startOf(date1, units).valueOf() <= inputMs &&\r\n    inputMs <= endOf(date1, units).valueOf()\r\n  );\r\n}\r\n\r\nexport function isSameDay(date1: Date, date2: Date):boolean{\r\n  return (date1.getDay() == date2.getDay());\r\n}\r\n\r\nexport function isSameOrAfter(\r\n  date1: Date,\r\n  date2: Date,\r\n  units?: UnitOfTime\r\n): boolean {\r\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\r\n}\r\n\r\nexport function isSameOrBefore(\r\n  date1: Date,\r\n  date2: Date,\r\n  units?: UnitOfTime\r\n): boolean {\r\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\r\n}\r\n","// ASP.NET json date format regex\r\nimport { Duration, isDuration } from './constructor';\r\nimport { isDateValid, isNumber, isObject, isString, toInt } from '../utils/type-checks';\r\nimport { DATE, HOUR, MILLISECOND, MINUTE, SECOND } from '../units/constants';\r\nimport { parseDate } from '../create/local';\r\nimport { absRound } from '../utils/abs-round';\r\nimport { DateObject } from '../types';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\nimport { cloneWithOffset } from '../units/offset';\r\nimport { isAfter, isBefore } from '../utils/date-compare';\r\nimport { getFullYear, getMonth } from '../utils/date-getters';\r\nimport { add } from '../moment/add-subtract';\r\nimport { cloneDate } from '../create/clone';\r\n\r\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\r\n\r\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\r\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\r\n// and further modified to allow for strings containing both week and day\r\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\r\n\r\nexport type DurationInput = string | number | Duration | Partial<DateObject> | { from: Date; to: Date };\r\n\r\nexport function createDuration(input?: DurationInput, key?: string, config: DateParsingConfig = {}) {\r\n  const duration = convertDuration(input, key);\r\n  // matching against regexp is expensive, do it on demand\r\n\r\n  return new Duration(duration, config);\r\n}\r\n\r\nfunction convertDuration(input: any, key: string): Partial<DateObject> {\r\n  // checks for null or undefined\r\n  if (input == null) {\r\n    return {};\r\n  }\r\n\r\n  if (isDuration(input)) {\r\n    return {\r\n      milliseconds: input._milliseconds,\r\n      day: input._days,\r\n      month: input._months\r\n    };\r\n  }\r\n  if (isNumber(input)) {\r\n    // duration = {};\r\n    return key ? { [key]: input } : { milliseconds: input };\r\n  }\r\n\r\n  if (isString(input)) {\r\n    let match = aspNetRegex.exec(input);\r\n\r\n    if (match) {\r\n      const sign = (match[1] === '-') ? -1 : 1;\r\n\r\n      return {\r\n        year: 0,\r\n        day: toInt(match[DATE]) * sign,\r\n        hours: toInt(match[HOUR]) * sign,\r\n        minutes: toInt(match[MINUTE]) * sign,\r\n        seconds: toInt(match[SECOND]) * sign,\r\n        // the millisecond decimal point is included in the match\r\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\r\n      };\r\n    }\r\n\r\n    match = isoRegex.exec(input);\r\n    if (match) {\r\n      const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\r\n\r\n      return {\r\n        year: parseIso(match[2], sign),\r\n        month: parseIso(match[3], sign),\r\n        week: parseIso(match[4], sign),\r\n        day: parseIso(match[5], sign),\r\n        hours: parseIso(match[6], sign),\r\n        minutes: parseIso(match[7], sign),\r\n        seconds: parseIso(match[8], sign)\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  if (isObject<{from: any; to: any}>(input) && ('from' in input || 'to' in input)) {\r\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\r\n\r\n    return {\r\n      milliseconds: diffRes.milliseconds,\r\n      month: diffRes.months\r\n    };\r\n  }\r\n\r\n  return input;\r\n}\r\n\r\n// createDuration.fn = Duration.prototype;\r\n// createDuration.invalid = invalid;\r\n\r\nfunction parseIso(inp: string, sign: number): number {\r\n  // We'd normally use ~~inp for this, but unfortunately it also\r\n  // converts floats to ints.\r\n  // inp may be undefined, so careful calling replace on it.\r\n  const res = inp && parseFloat(inp.replace(',', '.'));\r\n  // apply sign while we're at it\r\n\r\n  return (isNaN(res) ? 0 : res) * sign;\r\n}\r\n\r\nfunction positiveMomentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\r\n  const res = { milliseconds: 0, months: 0 };\r\n\r\n  res.months = getMonth(other) - getMonth(base) +\r\n    (getFullYear(other) - getFullYear(base)) * 12;\r\n  const _basePlus = add(cloneDate(base), res.months, 'month');\r\n  if (isAfter(_basePlus, other)) {\r\n    --res.months;\r\n  }\r\n\r\n  res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\r\n\r\n  return res;\r\n}\r\n\r\nfunction momentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\r\n  if (!(isDateValid(base) && isDateValid(other))) {\r\n    return { milliseconds: 0, months: 0 };\r\n  }\r\n\r\n  let res;\r\n  const _other = cloneWithOffset(other, base, {_offset: base.getTimezoneOffset()});\r\n  if (isBefore(base, _other)) {\r\n    res = positiveMomentsDifference(base, _other);\r\n  } else {\r\n    res = positiveMomentsDifference(_other, base);\r\n    res.milliseconds = -res.milliseconds;\r\n    res.months = -res.months;\r\n  }\r\n\r\n  return res;\r\n}\r\n","import { createDuration } from '../duration/create';\r\nimport { absRound } from '../utils/abs-round';\r\nimport { Duration } from '../duration/constructor';\r\nimport { getDate, getMonth, getTime } from '../utils/date-getters';\r\nimport { setDate, setMonth, setTime } from '../utils/date-setters';\r\nimport { cloneDate } from '../create/clone';\r\nimport { UnitOfTime } from '../types';\r\n\r\nexport function add(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\r\n  const dur = createDuration(val, period);\r\n\r\n  return addSubtract(date, dur, 1, isUTC);\r\n}\r\n\r\nexport function subtract(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\r\n  const dur = createDuration(val, period);\r\n\r\n  return addSubtract(date, dur, -1, isUTC);\r\n}\r\n\r\nexport function addSubtract(date: Date, duration: Duration, isAdding: number, isUTC?: boolean): Date {\r\n  const milliseconds = duration._milliseconds;\r\n  const days = absRound(duration._days);\r\n  const months = absRound(duration._months);\r\n\r\n  // todo: add timezones support\r\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\r\n\r\n  if (months) {\r\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\r\n  }\r\n  if (days) {\r\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\r\n  }\r\n  if (milliseconds) {\r\n    setTime(date, getTime(date) + milliseconds * isAdding);\r\n  }\r\n\r\n  return cloneDate(date);\r\n  // todo: add timezones support\r\n  // if (_updateOffset) {\r\n  //   hooks.updateOffset(date, days || months);\r\n  // }\r\n}\r\n","//! moment.js locale configuration\r\n//! locale : Arabic [ar]\r\n//! author : Abdel Said: https://github.com/abdelsaid\r\n//! author : Ahmed Elkhatib\r\n//! author : forabi https://github.com/forabi\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\nconst symbolMap: {[key: string]: string} = {\r\n  1: '١',\r\n  2: '٢',\r\n  3: '٣',\r\n  4: '٤',\r\n  5: '٥',\r\n  6: '٦',\r\n  7: '٧',\r\n  8: '٨',\r\n  9: '٩',\r\n  0: '٠'\r\n};\r\nconst numberMap: {[key: string]: string} = {\r\n  '١': '1',\r\n  '٢': '2',\r\n  '٣': '3',\r\n  '٤': '4',\r\n  '٥': '5',\r\n  '٦': '6',\r\n  '٧': '7',\r\n  '٨': '8',\r\n  '٩': '9',\r\n  '٠': '0'\r\n};\r\nconst pluralForm = function (num: number): number {\r\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\r\n};\r\nconst plurals: {[key: string]: [string, string, [string, string], string, string, string]} = {\r\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\r\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\r\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\r\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\r\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\r\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\r\n};\r\nconst pluralize = function (u: string) {\r\n  return function (num: number, withoutSuffix: boolean): string {\r\n    const f = pluralForm(num);\r\n    let str = plurals[u][pluralForm(num)];\r\n    if (f === 2) {\r\n      str = str[withoutSuffix ? 0 : 1];\r\n    }\r\n\r\n    return (str as string).replace(/%d/i, num.toString());\r\n  };\r\n};\r\nconst months: string[] = [\r\n  'يناير',\r\n  'فبراير',\r\n  'مارس',\r\n  'أبريل',\r\n  'مايو',\r\n  'يونيو',\r\n  'يوليو',\r\n  'أغسطس',\r\n  'سبتمبر',\r\n  'أكتوبر',\r\n  'نوفمبر',\r\n  'ديسمبر'\r\n];\r\n\r\nexport const arLocale: LocaleData = {\r\n  abbr: 'ar',\r\n  months,\r\n  monthsShort: months,\r\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\r\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\r\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'D/\\u200FM/\\u200FYYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  meridiemParse: /ص|م/,\r\n  isPM(input) {\r\n    return 'م' === input;\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'ص';\r\n    } else {\r\n      return 'م';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[اليوم عند الساعة] LT',\r\n    nextDay: '[غدًا عند الساعة] LT',\r\n    nextWeek: 'dddd [عند الساعة] LT',\r\n    lastDay: '[أمس عند الساعة] LT',\r\n    lastWeek: 'dddd [عند الساعة] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'بعد %s',\r\n    past: 'منذ %s',\r\n    s: pluralize('s'),\r\n    ss: pluralize('s'),\r\n    m: pluralize('m'),\r\n    mm: pluralize('m'),\r\n    h: pluralize('h'),\r\n    hh: pluralize('h'),\r\n    d: pluralize('d'),\r\n    dd: pluralize('d'),\r\n    M: pluralize('M'),\r\n    MM: pluralize('M'),\r\n    y: pluralize('y'),\r\n    yy: pluralize('y')\r\n  },\r\n  preparse(str: string): string {\r\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\r\n      return numberMap[match];\r\n    }).replace(/،/g, ',');\r\n  },\r\n  postformat(str: string) {\r\n    return str.replace(/\\d/g, function (match) {\r\n      return symbolMap[match];\r\n    }).replace(/,/g, '،');\r\n  },\r\n  week: {\r\n    dow: 6, // Saturday is the first day of the week.\r\n    doy: 12  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { Khronos } from '../testing/chain';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Bulgarian [bg]\r\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\r\n//! author : Kunal Marwaha : https://github.com/marwahaha\r\n//! author : Matt Grande : https://github.com/mattgrande\r\n//! author : Isaac Cambron : https://github.com/icambron\r\n//! author : Venelin Manchev : https://github.com/vmanchev\r\n\r\nexport const bgLocale: LocaleData = {\r\n  abbr: 'bg',\r\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\r\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\r\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\r\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\r\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'D.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY H:mm',\r\n    LLLL: 'dddd, D MMMM YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Днес в] LT',\r\n    nextDay: '[Утре в] LT',\r\n    nextWeek: 'dddd [в] LT',\r\n    lastDay: '[Вчера в] LT',\r\n    lastWeek: function (d: any) {\r\n\r\n      switch (d) {\r\n        case 0:\r\n        case 3:\r\n        case 6:\r\n          return '[В изминалата] dddd [в] LT';\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n        case 5:\r\n          return '[В изминалия] dddd [в] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'след %s',\r\n    past: 'преди %s',\r\n    s: 'няколко секунди',\r\n    ss: '%d секунди',\r\n    m: 'минута',\r\n    mm: '%d минути',\r\n    h: 'час',\r\n    hh: '%d часа',\r\n    d: 'ден',\r\n    dd: '%d дни',\r\n    M: 'месец',\r\n    MM: '%d месеца',\r\n    y: 'година',\r\n    yy: '%d години'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\r\n  ordinal: function (_num: number): string {\r\n\r\n    const number = Number(_num);\r\n\r\n    let lastDigit = number % 10,\r\n      last2Digits = number % 100;\r\n\r\n    if (number === 0) {\r\n      return number + '-ев';\r\n    } else if (last2Digits === 0) {\r\n      return number + '-ен';\r\n    } else if (last2Digits > 10 && last2Digits < 20) {\r\n      return number + '-ти';\r\n    } else if (lastDigit === 1) {\r\n      return number + '-ви';\r\n    } else if (lastDigit === 2) {\r\n      return number + '-ри';\r\n    } else if (lastDigit === 7 || lastDigit === 8) {\r\n      return number + '-ми';\r\n    } else {\r\n      return number + '-ти';\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Catalan [ca]\r\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\r\n\r\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\r\n  monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\r\n\r\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\r\nlet monthsRegex = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\r\n\r\nexport const caLocale: LocaleData = {\r\n  abbr: 'ca',\r\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    }\r\n\r\n    if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    }\r\n\r\n    return monthsShortDot[getMonth(date, isUTC)];\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\r\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\r\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\r\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date) {\r\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date) {\r\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date) {\r\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date) {\r\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date) {\r\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'fa %s',\r\n    s: 'uns segons',\r\n    ss: '%d segons',\r\n    m: 'un minut',\r\n    mm: '%d minuts',\r\n    h: 'una hora',\r\n    hh: '%d hores',\r\n    d: 'un dia',\r\n    dd: '%d dies',\r\n    M: 'un mes',\r\n    MM: '%d mesos',\r\n    y: 'un any',\r\n    yy: '%d anys'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    const output = (num > 4) ? 'é' :\r\n        (num === 1 || num === 3) ? 'r' :\r\n          (num === 2) ? 'n' :\r\n            (num === 4) ? 't' : 'é';\r\n    return num + output;\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Czech [cs]\r\n//! author : petrbela : https://github.com/petrbela\r\n\r\nconst months: string[] = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\r\nconst monthsShort: string[] = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\r\n\r\nfunction plural(num: number): boolean {\r\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\r\n}\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  const result = num + ' ';\r\n\r\n  switch (key) {\r\n    case 's':  // a few seconds / in a few seconds / a few seconds ago\r\n      return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\r\n    case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'sekundy' : 'sekund');\r\n      } else {\r\n        return result + 'sekundami';\r\n      }\r\n    // break;\r\n    case 'm':  // a minute / in a minute / a minute ago\r\n      return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\r\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'minuty' : 'minut');\r\n      } else {\r\n        return result + 'minutami';\r\n      }\r\n    // break;\r\n    case 'h':  // an hour / in an hour / an hour ago\r\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\r\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'hodiny' : 'hodin');\r\n      } else {\r\n        return result + 'hodinami';\r\n      }\r\n    // break;\r\n    case 'd':  // a day / in a day / a day ago\r\n      return (withoutSuffix || isFuture) ? 'den' : 'dnem';\r\n    case 'dd': // 9 days / in 9 days / 9 days ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'dny' : 'dní');\r\n      } else {\r\n        return result + 'dny';\r\n      }\r\n    // break;\r\n    case 'M':  // a month / in a month / a month ago\r\n      return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\r\n    case 'MM': // 9 months / in 9 months / 9 months ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'měsíce' : 'měsíců');\r\n      } else {\r\n        return result + 'měsíci';\r\n      }\r\n    // break;\r\n    case 'y':  // a year / in a year / a year ago\r\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\r\n    case 'yy': // 9 years / in 9 years / 9 years ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'roky' : 'let');\r\n      } else {\r\n        return result + 'lety';\r\n      }\r\n    // break;\r\n  }\r\n}\r\n\r\nexport const csLocale: LocaleData = {\r\n  abbr: 'cs',\r\n  months,\r\n  monthsShort,\r\n  monthsParse: (function (months, monthsShort) {\r\n    let i, _monthsParse = [];\r\n    for (i = 0; i < 12; i++) {\r\n      // use custom parser to solve problem with July (červenec)\r\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\r\n    }\r\n    return _monthsParse;\r\n  }(months, monthsShort)),\r\n  shortMonthsParse: (function (monthsShort) {\r\n    let i, _shortMonthsParse = [];\r\n    for (i = 0; i < 12; i++) {\r\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\r\n    }\r\n    return _shortMonthsParse;\r\n  }(monthsShort)),\r\n  longMonthsParse: (function (months) {\r\n    let i, _longMonthsParse = [];\r\n    for (i = 0; i < 12; i++) {\r\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\r\n    }\r\n    return _longMonthsParse;\r\n  }(months)),\r\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\r\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\r\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY H:mm',\r\n    LLLL: 'dddd D. MMMM YYYY H:mm',\r\n    l: 'D. M. YYYY'\r\n  },\r\n  calendar: {\r\n    sameDay: '[dnes v] LT',\r\n    nextDay: '[zítra v] LT',\r\n    nextWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[v neděli v] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[v] dddd [v] LT';\r\n        case 3:\r\n          return '[ve středu v] LT';\r\n        case 4:\r\n          return '[ve čtvrtek v] LT';\r\n        case 5:\r\n          return '[v pátek v] LT';\r\n        case 6:\r\n          return '[v sobotu v] LT';\r\n      }\r\n    },\r\n    lastDay: '[včera v] LT',\r\n    lastWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[minulou neděli v] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[minulé] dddd [v] LT';\r\n        case 3:\r\n          return '[minulou středu v] LT';\r\n        case 4:\r\n        case 5:\r\n          return '[minulý] dddd [v] LT';\r\n        case 6:\r\n          return '[minulou sobotu v] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'za %s',\r\n    past: 'před %s',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Danish (Denmark) [da]\r\n//! author : Per Hansen : https://github.com/perhp\r\n\r\nexport const daLocale: LocaleData = {\r\n  abbr: 'da',\r\n  months : 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\r\n  weekdays : 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\r\n  weekdaysShort : 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\r\n  weekdaysMin : 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\r\n  longDateFormat : {\r\n      LT : 'HH:mm',\r\n      LTS : 'HH:mm:ss',\r\n      L : 'DD/MM/YYYY',\r\n      LL : 'D. MMMM YYYY',\r\n      LLL : 'D. MMMM YYYY HH:mm',\r\n      LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\r\n  },\r\n  calendar : {\r\n      sameDay : '[i dag kl.] LT',\r\n      nextDay : '[i morgen kl.] LT',\r\n      nextWeek : 'på dddd [kl.] LT',\r\n      lastDay : '[i går kl.] LT',\r\n      lastWeek : '[i] dddd[s kl.] LT',\r\n      sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n      future : 'om %s',\r\n      past : '%s siden',\r\n      s : 'få sekunder',\r\n      m : 'et minut',\r\n      mm : '%d minutter',\r\n      h : 'en time',\r\n      hh : '%d timer',\r\n      d : 'en dag',\r\n      dd : '%d dage',\r\n      M : 'en måned',\r\n      MM : '%d måneder',\r\n      y : 'et år',\r\n      yy : '%d år'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal : '%d.',\r\n  week : {\r\n      dow : 1, // Monday is the first day of the week.\r\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : German [de]\r\n//! author : lluchs : https://github.com/lluchs\r\n//! author: Menelion Elensúle: https://github.com/Oire\r\n//! author : Mikolaj Dadela : https://github.com/mik01aj\r\n\r\nfunction processRelativeTime(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  const format: { [key: string]: [string, string] } = {\r\n    'm': ['eine Minute', 'einer Minute'],\r\n    'h': ['eine Stunde', 'einer Stunde'],\r\n    'd': ['ein Tag', 'einem Tag'],\r\n    'dd': [num + ' Tage', num + ' Tagen'],\r\n    'M': ['ein Monat', 'einem Monat'],\r\n    'MM': [num + ' Monate', num + ' Monaten'],\r\n    'y': ['ein Jahr', 'einem Jahr'],\r\n    'yy': [num + ' Jahre', num + ' Jahren']\r\n  };\r\n  return withoutSuffix ? format[key][0] : format[key][1];\r\n}\r\n\r\nexport const deLocale: LocaleData = {\r\n  abbr: 'de',\r\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\r\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\r\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\r\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[heute um] LT [Uhr]',\r\n    sameElse: 'L',\r\n    nextDay: '[morgen um] LT [Uhr]',\r\n    nextWeek: 'dddd [um] LT [Uhr]',\r\n    lastDay: '[gestern um] LT [Uhr]',\r\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\r\n  },\r\n  relativeTime: {\r\n    future: 'in %s',\r\n    past: 'vor %s',\r\n    s: 'ein paar Sekunden',\r\n    ss: '%d Sekunden',\r\n    m: processRelativeTime,\r\n    mm: '%d Minuten',\r\n    h: processRelativeTime,\r\n    hh: '%d Stunden',\r\n    d: processRelativeTime,\r\n    dd: processRelativeTime,\r\n    M: processRelativeTime,\r\n    MM: processRelativeTime,\r\n    y: processRelativeTime,\r\n    yy: processRelativeTime\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : English (United Kingdom) [en-gb]\r\n//! author : Chris Gedrim : https://github.com/chrisgedrim\r\n\r\nexport const enGbLocale: LocaleData = {\r\n  abbr: 'en-gb',\r\n  months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\r\n  weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\r\n  weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\r\n  weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : '[Today at] LT',\r\n    nextDay : '[Tomorrow at] LT',\r\n    nextWeek : 'dddd [at] LT',\r\n    lastDay : '[Yesterday at] LT',\r\n    lastWeek : '[Last] dddd [at] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'in %s',\r\n    past : '%s ago',\r\n    s : 'a few seconds',\r\n    ss : '%d seconds',\r\n    m : 'a minute',\r\n    mm : '%d minutes',\r\n    h : 'an hour',\r\n    hh : '%d hours',\r\n    d : 'a day',\r\n    dd : '%d days',\r\n    M : 'a month',\r\n    MM : '%d months',\r\n    y : 'a year',\r\n    yy : '%d years'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    const b = num % 10,\r\n      output = (~~(num % 100 / 10) === 1) ? 'th' :\r\n        (b === 1) ? 'st' :\r\n          (b === 2) ? 'nd' :\r\n            (b === 3) ? 'rd' : 'th';\r\n    return num + output;\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Spanish (Dominican Republic) [es-do]\r\n\r\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\r\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\r\n\r\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\r\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\r\n\r\nexport const esDoLocale: LocaleData = {\r\n  abbr: 'es-do',\r\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortDot[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\r\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'h:mm A',\r\n    LTS: 'h:mm:ss A',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date): string {\r\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date): string {\r\n      return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date): string {\r\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date): string {\r\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date): string {\r\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'hace %s',\r\n    s: 'unos segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'una hora',\r\n    hh: '%d horas',\r\n    d: 'un día',\r\n    dd: '%d días',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un año',\r\n    yy: '%d años'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\r\n  ordinal: '%dº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Spanish [es]\r\n//! author : Julio Napurí : https://github.com/julionc\r\n\r\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\r\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\r\n\r\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\r\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\r\n\r\nexport const esLocale: LocaleData = {\r\n  abbr: 'es',\r\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    }\r\n\r\n    if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    }\r\n\r\n    return monthsShortDot[getMonth(date, isUTC)];\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\r\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date) {\r\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date) {\r\n      return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date) {\r\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date) {\r\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date) {\r\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'hace %s',\r\n    s: 'unos segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'una hora',\r\n    hh: '%d horas',\r\n    d: 'un día',\r\n    dd: '%d días',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un año',\r\n    yy: '%d años'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\r\n  ordinal: '%dº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Spanish (United States) [es-us]\r\n//! author : bustta : https://github.com/bustta\r\n\r\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\r\nlet monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\r\n\r\nexport const esUsLocale: LocaleData = {\r\n  abbr: 'es-us',\r\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortDot[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsParseExact: true,\r\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'h:mm A',\r\n    LTS: 'h:mm:ss A',\r\n    L: 'MM/DD/YYYY',\r\n    LL: 'MMMM [de] D [de] YYYY',\r\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\r\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date): string {\r\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date): string {\r\n      return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date): string {\r\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date): string {\r\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date): string {\r\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'hace %s',\r\n    s: 'unos segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'una hora',\r\n    hh: '%d horas',\r\n    d: 'un día',\r\n    dd: '%d días',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un año',\r\n    yy: '%d años'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\r\n  ordinal: '%dº',\r\n  week: {\r\n    dow: 0, // Sunday is the first day of the week.\r\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Estonian [et]\r\n//! author : Chris Gedrim : https://github.com/a90machado\r\n\r\nconst processRelativeTime = function (num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  const format = {\r\n      s : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\r\n      ss: [num + 'sekundi', num + 'sekundit'],\r\n      m : ['ühe minuti', 'üks minut'],\r\n      mm: [num + ' minuti', num + ' minutit'],\r\n      h : ['ühe tunni', 'tund aega', 'üks tund'],\r\n      hh: [num + ' tunni', num + ' tundi'],\r\n      d : ['ühe päeva', 'üks päev'],\r\n      M : ['kuu aja', 'kuu aega', 'üks kuu'],\r\n      MM: [num + ' kuu', num + ' kuud'],\r\n      y : ['ühe aasta', 'aasta', 'üks aasta'],\r\n      yy: [num + ' aasta', num + ' aastat']\r\n  };\r\n  if (withoutSuffix) {\r\n      return format[key][2] ? format[key][2] : format[key][1];\r\n  }\r\n  return isFuture ? format[key][0] : format[key][1];\r\n};\r\n\r\nexport const etLocale: LocaleData = {\r\n  abbr: 'et',\r\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\r\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\r\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\r\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\r\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\r\n  longDateFormat: {\r\n    LT:   'H:mm',\r\n    LTS:  'H:mm:ss',\r\n    L:    'DD.MM.YYYY',\r\n    LL:   'D. MMMM YYYY',\r\n    LLL:  'D. MMMM YYYY H:mm',\r\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay:  '[Täna,] LT',\r\n    nextDay:  '[Homme,] LT',\r\n    nextWeek: '[Järgmine] dddd LT',\r\n    lastDay:  '[Eile,] LT',\r\n    lastWeek: '[Eelmine] dddd LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime : {\r\n    future : '%s pärast',\r\n    past   : '%s tagasi',\r\n    s      : processRelativeTime,\r\n    ss     : processRelativeTime,\r\n    m      : processRelativeTime,\r\n    mm     : processRelativeTime,\r\n    h      : processRelativeTime,\r\n    hh     : processRelativeTime,\r\n    d      : processRelativeTime,\r\n    dd     : '%d päeva',\r\n    M      : processRelativeTime,\r\n    MM     : processRelativeTime,\r\n    y      : processRelativeTime,\r\n    yy     : processRelativeTime\r\n  },\r\n  dayOfMonthOrdinalParse : /\\d{1,2}./,\r\n  ordinal : '%d.',\r\n  week : {\r\n      dow : 1, // Monday is the first day of the week.\r\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n// https://github.com/moment/moment/blob/develop/locale/fi.js\r\n\r\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\r\n  numbersFuture = [\r\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\r\n    numbersPast[7], numbersPast[8], numbersPast[9]\r\n  ];\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  var result = '';\r\n  switch (key) {\r\n    case 's':\r\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\r\n    case 'ss':\r\n      return isFuture ? 'sekunnin' : 'sekuntia';\r\n    case 'm':\r\n      return isFuture ? 'minuutin' : 'minuutti';\r\n    case 'mm':\r\n      result = isFuture ? 'minuutin' : 'minuuttia';\r\n      break;\r\n    case 'h':\r\n      return isFuture ? 'tunnin' : 'tunti';\r\n    case 'hh':\r\n      result = isFuture ? 'tunnin' : 'tuntia';\r\n      break;\r\n    case 'd':\r\n      return isFuture ? 'päivän' : 'päivä';\r\n    case 'dd':\r\n      result = isFuture ? 'päivän' : 'päivää';\r\n      break;\r\n    case 'M':\r\n      return isFuture ? 'kuukauden' : 'kuukausi';\r\n    case 'MM':\r\n      result = isFuture ? 'kuukauden' : 'kuukautta';\r\n      break;\r\n    case 'y':\r\n      return isFuture ? 'vuoden' : 'vuosi';\r\n    case 'yy':\r\n      result = isFuture ? 'vuoden' : 'vuotta';\r\n      break;\r\n  }\r\n  result = verbalNumber(num, isFuture) + ' ' + result;\r\n  return result;\r\n}\r\n\r\nfunction verbalNumber(num: number, isFuture: boolean) {\r\n  return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\r\n}\r\n\r\nexport const fiLocale: LocaleData = {\r\n  abbr: 'fi',\r\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\r\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\r\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\r\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\r\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH.mm',\r\n    LTS: 'HH.mm.ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'Do MMMM[ta] YYYY',\r\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\r\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\r\n    l: 'D.M.YYYY',\r\n    ll: 'Do MMM YYYY',\r\n    lll: 'Do MMM YYYY, [klo] HH.mm',\r\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[tänään] [klo] LT',\r\n    nextDay: '[huomenna] [klo] LT',\r\n    nextWeek: 'dddd [klo] LT',\r\n    lastDay: '[eilen] [klo] LT',\r\n    lastWeek: '[viime] dddd[na] [klo] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s päästä',\r\n    past: '%s sitten',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : French [fr]\r\n//! author : John Fischer : https://github.com/jfroffice\r\n\r\nexport const frLocale: LocaleData = {\r\n  abbr: 'fr',\r\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\r\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\r\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\r\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Aujourd’hui à] LT',\r\n    nextDay: '[Demain à] LT',\r\n    nextWeek: 'dddd [à] LT',\r\n    lastDay: '[Hier à] LT',\r\n    lastWeek: 'dddd [dernier à] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'dans %s',\r\n    past: 'il y a %s',\r\n    s: 'quelques secondes',\r\n    ss: '%d secondes',\r\n    m: 'une minute',\r\n    mm: '%d minutes',\r\n    h: 'une heure',\r\n    hh: '%d heures',\r\n    d: 'un jour',\r\n    dd: '%d jours',\r\n    M: 'un mois',\r\n    MM: '%d mois',\r\n    y: 'un an',\r\n    yy: '%d ans'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\r\n  ordinal(_num: number, period: string): string {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      // TODO: Return 'e' when day of month > 1. Move this case inside\r\n      // block for masculine words below.\r\n      // See https://github.com/moment/moment/issues/3375\r\n      case 'D':\r\n        return num + (num === 1 ? 'er' : '');\r\n\r\n      // Words with masculine grammatical gender: mois, trimestre, jour\r\n      default:\r\n      case 'M':\r\n      case 'Q':\r\n      case 'DDD':\r\n      case 'd':\r\n        return num + (num === 1 ? 'er' : 'e');\r\n\r\n      // Words with feminine grammatical gender: semaine\r\n      case 'w':\r\n      case 'W':\r\n        return num + (num === 1 ? 're' : 'e');\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getHours, getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Galician [gl]\r\n//! author : Darío Beiró : https://github.com/quinobravo\r\n\r\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\r\n  monthsShort = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\r\n\r\nlet monthsParse = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\r\nlet monthsRegex = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\r\n\r\nexport const glLocale: LocaleData = {\r\n  abbr: 'gl',\r\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortDot;\r\n    }\r\n\r\n    if (/-MMM-/.test(format)) {\r\n      return monthsShort[getMonth(date, isUTC)];\r\n    }\r\n\r\n    return monthsShortDot[getMonth(date, isUTC)];\r\n  },\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\r\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\r\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay(date: Date) {\r\n      return '[hoxe á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextDay(date: Date) {\r\n      return '[mañan á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    nextWeek(date: Date) {\r\n      return 'dddd [á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastDay(date: Date) {\r\n      return '[onte á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    lastWeek(date: Date) {\r\n      return '[o] dddd [pasado á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'en %s',\r\n    past: 'fai %s',\r\n    s: 'uns segundos',\r\n    ss: '%d segundos',\r\n    m: 'un minuto',\r\n    mm: '%d minutos',\r\n    h: 'unha hora',\r\n    hh: '%d horas',\r\n    d: 'un día',\r\n    dd: '%d días',\r\n    M: 'un mes',\r\n    MM: '%d meses',\r\n    y: 'un ano',\r\n    yy: '%d anos'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\r\n  ordinal: '%dº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Hebrew [he]\r\n//! author : Tomer Cohen : https://github.com/tomer\r\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\r\n//! author : Tal Ater : https://github.com/TalAter\r\n\r\nexport const heLocale: LocaleData = {\r\n  abbr: 'he',\r\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\r\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\r\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\r\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\r\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [ב]MMMM YYYY',\r\n    LLL: 'D [ב]MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\r\n    l: 'D/M/YYYY',\r\n    ll: 'D MMM YYYY',\r\n    lll: 'D MMM YYYY HH:mm',\r\n    llll: 'ddd, D MMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[היום ב־]LT',\r\n    nextDay: '[מחר ב־]LT',\r\n    nextWeek: 'dddd [בשעה] LT',\r\n    lastDay: '[אתמול ב־]LT',\r\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'בעוד %s',\r\n    past: 'לפני %s',\r\n    s: 'מספר שניות',\r\n    ss: '%d שניות',\r\n    m: 'דקה',\r\n    mm: '%d דקות',\r\n    h: 'שעה',\r\n    hh(num: number): string {\r\n      if (num === 2) {\r\n        return 'שעתיים';\r\n      }\r\n      return num + ' שעות';\r\n    },\r\n    d: 'יום',\r\n    dd(num: number): string {\r\n      if (num === 2) {\r\n        return 'יומיים';\r\n      }\r\n      return num + ' ימים';\r\n    },\r\n    M: 'חודש',\r\n    MM(num: number): string {\r\n      if (num === 2) {\r\n        return 'חודשיים';\r\n      }\r\n      return num + ' חודשים';\r\n    },\r\n    y: 'שנה',\r\n    yy(num: number): string {\r\n      if (num === 2) {\r\n        return 'שנתיים';\r\n      } else if (num % 10 === 0 && num !== 10) {\r\n        return num + ' שנה';\r\n      }\r\n      return num + ' שנים';\r\n    }\r\n  },\r\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\r\n  isPM(input) {\r\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 5) {\r\n      return 'לפנות בוקר';\r\n    } else if (hour < 10) {\r\n      return 'בבוקר';\r\n    } else if (hour < 12) {\r\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\r\n    } else if (hour < 18) {\r\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\r\n    } else {\r\n      return 'בערב';\r\n    }\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Hindi [hi]\r\n//! author : Mayank Singhal : https://github.com/mayanksinghal\r\n\r\nlet symbolMap: {[key: string]: string} = {\r\n    1: '१',\r\n    2: '२',\r\n    3: '३',\r\n    4: '४',\r\n    5: '५',\r\n    6: '६',\r\n    7: '७',\r\n    8: '८',\r\n    9: '९',\r\n    0: '०'\r\n  },\r\n  numberMap: {[key: string]: string} = {\r\n    '१': '1',\r\n    '२': '2',\r\n    '३': '3',\r\n    '४': '4',\r\n    '५': '5',\r\n    '६': '6',\r\n    '७': '7',\r\n    '८': '8',\r\n    '९': '9',\r\n    '०': '0'\r\n  };\r\n\r\nexport const hiLocale: LocaleData = {\r\n  abbr: 'hi',\r\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\r\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\r\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\r\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'A h:mm बजे',\r\n    LTS: 'A h:mm:ss बजे',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY, A h:mm बजे',\r\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\r\n  },\r\n  calendar: {\r\n    sameDay: '[आज] LT',\r\n    nextDay: '[कल] LT',\r\n    nextWeek: 'dddd, LT',\r\n    lastDay: '[कल] LT',\r\n    lastWeek: '[पिछले] dddd, LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s में',\r\n    past: '%s पहले',\r\n    s: 'कुछ ही क्षण',\r\n    ss: '%d सेकंड',\r\n    m: 'एक मिनट',\r\n    mm: '%d मिनट',\r\n    h: 'एक घंटा',\r\n    hh: '%d घंटे',\r\n    d: 'एक दिन',\r\n    dd: '%d दिन',\r\n    M: 'एक महीने',\r\n    MM: '%d महीने',\r\n    y: 'एक वर्ष',\r\n    yy: '%d वर्ष'\r\n  },\r\n  preparse(str: string): string {\r\n    return str.replace(/[१२३४५६७८९०]/g, function (match) {\r\n      return numberMap[match];\r\n    });\r\n  },\r\n  postformat(str: string): string {\r\n    return str.replace(/\\d/g, function (match) {\r\n      return symbolMap[match];\r\n    });\r\n  },\r\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\r\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\r\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\r\n  meridiemHour(hour, meridiem) {\r\n    if (hour === 12) {\r\n      hour = 0;\r\n    }\r\n    if (meridiem === 'रात') {\r\n      return hour < 4 ? hour : hour + 12;\r\n    } else if (meridiem === 'सुबह') {\r\n      return hour;\r\n    } else if (meridiem === 'दोपहर') {\r\n      return hour >= 10 ? hour : hour + 12;\r\n    } else if (meridiem === 'शाम') {\r\n      return hour + 12;\r\n    }\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 4) {\r\n      return 'रात';\r\n    } else if (hour < 10) {\r\n      return 'सुबह';\r\n    } else if (hour < 17) {\r\n      return 'दोपहर';\r\n    } else if (hour < 20) {\r\n      return 'शाम';\r\n    } else {\r\n      return 'रात';\r\n    }\r\n  },\r\n  week: {\r\n    dow: 0, // Sunday is the first day of the week.\r\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Hungarian [hu]\r\n//! author : Adam Brunner : https://github.com/adambrunner\r\n\r\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  switch (key) {\r\n    case 's':\r\n      return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\r\n    case 'ss':\r\n      return num + ((isFuture || withoutSuffix) ? ' másodperc' : ' másodperce');\r\n    case 'm':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\r\n    case 'mm':\r\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\r\n    case 'h':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\r\n    case 'hh':\r\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\r\n    case 'd':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\r\n    case 'dd':\r\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\r\n    case 'M':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\r\n    case 'MM':\r\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\r\n    case 'y':\r\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\r\n    case 'yy':\r\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\r\n  }\r\n  return '';\r\n}\r\nfunction week(date: Date, isFuture: boolean) {\r\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\r\n}\r\n\r\nexport const huLocale: LocaleData = {\r\n  abbr: 'hu',\r\n  months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\r\n  monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\r\n  weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\r\n  weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\r\n  weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'H:mm',\r\n    LTS : 'H:mm:ss',\r\n    L : 'YYYY.MM.DD.',\r\n    LL : 'YYYY. MMMM D.',\r\n    LLL : 'YYYY. MMMM D. H:mm',\r\n    LLLL : 'YYYY. MMMM D., dddd H:mm'\r\n  },\r\n  meridiemParse: /de|du/i,\r\n  isPM (input) {\r\n    return input.charAt(1).toLowerCase() === 'u';\r\n  },\r\n  meridiem (hours, minutes, isLower) {\r\n    if (hours < 12) {\r\n      return isLower === true ? 'de' : 'DE';\r\n    } else {\r\n      return isLower === true ? 'du' : 'DU';\r\n    }\r\n  },\r\n  calendar : {\r\n    sameDay : '[ma] LT[-kor]',\r\n    nextDay : '[holnap] LT[-kor]',\r\n    nextWeek (date: Date) {\r\n      return week(date, true);\r\n    },\r\n    lastDay : '[tegnap] LT[-kor]',\r\n    lastWeek (date: Date) {\r\n      return week(date, false);\r\n    },\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : '%s múlva',\r\n    past : '%s',\r\n    s : translate,\r\n    ss : translate,\r\n    m : translate,\r\n    mm : translate,\r\n    h : translate,\r\n    hh : translate,\r\n    d : translate,\r\n    dd : translate,\r\n    M : translate,\r\n    MM : translate,\r\n    y : translate,\r\n    yy : translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal : '%d.',\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Croatian [hr]\r\n//! author : Danijel Grmec : https://github.com/cobaltsis\r\n\r\nexport const hrLocale: LocaleData = {\r\n  abbr: 'hr',\r\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\r\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\r\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\r\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\r\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Danas u] LT',\r\n    nextDay: '[Sutra u] LT',\r\n    nextWeek: 'dddd [u] LT',\r\n    lastDay: '[Jučer u] LT',\r\n    lastWeek: '[Zadnji] dddd [u] LT',\r\n    sameElse: 'L'\r\n  },\r\n  invalidDate: 'Neispravan datum',\r\n  relativeTime: {\r\n    future: 'za %s',\r\n    past: '%s prije',\r\n    s: 'nekoliko sekundi',\r\n    ss: '%d sekundi',\r\n    m: 'minuta',\r\n    mm: '%d minuta',\r\n    h: 'sat',\r\n    hh: '%d sati',\r\n    d: 'dan',\r\n    dd: '%d dana',\r\n    M: 'mjesec',\r\n    MM: '%d mjeseci',\r\n    y: 'godina',\r\n    yy: '%d godina'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    const b = num % 10,\r\n      output = (~~(num % 100 / 10) === 1) ? '.' :\r\n        (b === 1) ? '.' :\r\n          (b === 2) ? '.' :\r\n            (b === 3) ? '.' : '.';\r\n    return num + output;\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Indonesia [id]\r\n//! author : Romy Kusuma : https://github.com/rkusuma\r\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\r\n\r\nexport const idLocale: LocaleData = {\r\n  abbr: 'id',\r\n  months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\r\n  weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\r\n  weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\r\n  weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH.mm',\r\n    LTS : 'HH.mm.ss',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY [pukul] HH.mm',\r\n    LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\r\n  },\r\n  meridiemParse: /pagi|siang|sore|malam/,\r\n  meridiemHour(hour, meridiem) {\r\n    if (hour === 12) {\r\n      hour = 0;\r\n    }\r\n    if (meridiem === 'pagi') {\r\n      return hour;\r\n    } else if (meridiem === 'siang') {\r\n      return hour >= 11 ? hour : hour + 12;\r\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\r\n      return hour + 12;\r\n    }\r\n  },\r\n  meridiem(hours, minutes, isLower) {\r\n    if (hours < 11) {\r\n      return 'pagi';\r\n    } else if (hours < 15) {\r\n      return 'siang';\r\n    } else if (hours < 19) {\r\n      return 'sore';\r\n    } else {\r\n      return 'malam';\r\n    }\r\n  },\r\n  calendar : {\r\n    sameDay : '[Hari ini pukul] LT',\r\n    nextDay : '[Besok pukul] LT',\r\n    nextWeek : 'dddd [pukul] LT',\r\n    lastDay : '[Kemarin pukul] LT',\r\n    lastWeek : 'dddd [lalu pukul] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'dalam %s',\r\n    past : '%s yang lalu',\r\n    s : 'beberapa detik',\r\n    ss : '%d detik',\r\n    m : 'semenit',\r\n    mm : '%d menit',\r\n    h : 'sejam',\r\n    hh : '%d jam',\r\n    d : 'sehari',\r\n    dd : '%d hari',\r\n    M : 'sebulan',\r\n    MM : '%d bulan',\r\n    y : 'setahun',\r\n    yy : '%d tahun'\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Italian [it]\r\n//! author : Lorenzo : https://github.com/aliem\r\n//! author: Mattia Larentis: https://github.com/nostalgiaz\r\n\r\nexport const itLocale: LocaleData = {\r\n  abbr: 'it',\r\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\r\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\r\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\r\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\r\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Oggi alle] LT',\r\n    nextDay: '[Domani alle] LT',\r\n    nextWeek: 'dddd [alle] LT',\r\n    lastDay: '[Ieri alle] LT',\r\n    lastWeek(date: Date) {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[la scorsa] dddd [alle] LT';\r\n        default:\r\n          return '[lo scorso] dddd [alle] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future(num: number): string {\r\n      return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\r\n    },\r\n    past: '%s fa',\r\n    s: 'alcuni secondi',\r\n    ss: '%d secondi',\r\n    m: 'un minuto',\r\n    mm: '%d minuti',\r\n    h: 'un\\'ora',\r\n    hh: '%d ore',\r\n    d: 'un giorno',\r\n    dd: '%d giorni',\r\n    M: 'un mese',\r\n    MM: '%d mesi',\r\n    y: 'un anno',\r\n    yy: '%d anni'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\r\n  ordinal: '%dº',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Japanese [ja]\r\n//! author : LI Long : https://github.com/baryon\r\n\r\nexport const jaLocale: LocaleData =  {\r\n  abbr: 'ja',\r\n  months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\r\n  monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\r\n  weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\r\n  weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\r\n  weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'YYYY/MM/DD',\r\n    LL : 'YYYY年M月D日',\r\n    LLL : 'YYYY年M月D日 HH:mm',\r\n    LLLL : 'YYYY年M月D日 HH:mm dddd',\r\n    l : 'YYYY/MM/DD',\r\n    ll : 'YYYY年M月D日',\r\n    lll : 'YYYY年M月D日 HH:mm',\r\n    llll : 'YYYY年M月D日 HH:mm dddd'\r\n  },\r\n  meridiemParse: /午前|午後/i,\r\n  isPM (input) {\r\n    return input === '午後';\r\n  },\r\n  meridiem (hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return '午前';\r\n    } else {\r\n      return '午後';\r\n    }\r\n  },\r\n  calendar : {\r\n    sameDay : '[今日] LT',\r\n    nextDay : '[明日] LT',\r\n    nextWeek : '[来週]dddd LT',\r\n    lastDay : '[昨日] LT',\r\n    lastWeek : '[前週]dddd LT',\r\n    sameElse : 'L'\r\n  },\r\n  dayOfMonthOrdinalParse : /\\d{1,2}日/,\r\n  ordinal (num: number, period: string): string {\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + '日';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  },\r\n  relativeTime : {\r\n    future : '%s後',\r\n    past : '%s前',\r\n    s : '数秒',\r\n    ss : '%d秒',\r\n    m : '1分',\r\n    mm : '%d分',\r\n    h : '1時間',\r\n    hh : '%d時間',\r\n    d : '1日',\r\n    dd : '%d日',\r\n    M : '1ヶ月',\r\n    MM : '%dヶ月',\r\n    y : '1年',\r\n    yy : '%d年'\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Georgian [ka]\r\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\r\n//! author : Levan Tskipuri : https://github.com/tskipa\r\n\r\nexport const kaLocale: LocaleData =  {\r\n  abbr: 'ka',\r\n  months : {\r\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\r\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\r\n  },\r\n  monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\r\n  weekdays : {\r\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\r\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\r\n    isFormat: /(წინა|შემდეგ)/\r\n  },\r\n  weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\r\n  weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'h:mm A',\r\n    LTS : 'h:mm:ss A',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY h:mm A',\r\n    LLLL : 'dddd, D MMMM YYYY h:mm A'\r\n  },\r\n  calendar : {\r\n    sameDay : '[დღეს] LT[-ზე]',\r\n    nextDay : '[ხვალ] LT[-ზე]',\r\n    lastDay : '[გუშინ] LT[-ზე]',\r\n    nextWeek : '[შემდეგ] dddd LT[-ზე]',\r\n    lastWeek : '[წინა] dddd LT-ზე',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future(s: number): string {\r\n      var st = s.toString();\r\n      return (/(წამი|წუთი|საათი|წელი)/).test(st) ?\r\n      st.replace(/ი$/, 'ში') :\r\n      st + 'ში';\r\n    },\r\n    past(s: number): string {\r\n      var st = s.toString();\r\n      if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(st)) {\r\n        return st.replace(/(ი|ე)$/, 'ის წინ');\r\n      }\r\n      if ((/წელი/).test(st)) {\r\n        return st.replace(/წელი$/, 'წლის წინ');\r\n      }\r\n    },\r\n    s : 'რამდენიმე წამი',\r\n    ss : '%d წამი',\r\n    m : 'წუთი',\r\n    mm : '%d წუთი',\r\n    h : 'საათი',\r\n    hh : '%d საათი',\r\n    d : 'დღე',\r\n    dd : '%d დღე',\r\n    M : 'თვე',\r\n    MM : '%d თვე',\r\n    y : 'წელი',\r\n    yy : '%d წელი'\r\n  },\r\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\r\n  ordinal(_num: number, _period: string): string {\r\n    const num = Number(_num);\r\n    if (num === 0) {\r\n      return num.toString();\r\n    }\r\n    if (num === 1) {\r\n      return num + '-ლი';\r\n    }\r\n    if ((num < 20) || (num <= 100 && (num % 20 === 0)) || (num % 100 === 0)) {\r\n      return 'მე-' + num;\r\n    }\r\n    return num + '-ე';\r\n  },\r\n  week : {\r\n    dow : 1,\r\n    doy : 4\r\n  }\r\n};\r\n","// ! moment.js locale configuration\r\n// ! locale : Kazakh [kk]\r\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\r\n\r\nimport { LocaleData } from '..';\r\n\r\nconst suffixes = {\r\n  0: '-ші',\r\n  1: '-ші',\r\n  2: '-ші',\r\n  3: '-ші',\r\n  4: '-ші',\r\n  5: '-ші',\r\n  6: '-шы',\r\n  7: '-ші',\r\n  8: '-ші',\r\n  9: '-шы',\r\n  10: '-шы',\r\n  20: '-шы',\r\n  30: '-шы',\r\n  40: '-шы',\r\n  50: '-ші',\r\n  60: '-шы',\r\n  70: '-ші',\r\n  80: '-ші',\r\n  90: '-шы',\r\n  100: '-ші'\r\n};\r\n\r\nexport const kkLocale: LocaleData = {\r\n  abbr: 'kk',\r\n  months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\r\n  monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\r\n  weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\r\n  weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\r\n  weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD.MM.YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : '[Бүгін сағат] LT',\r\n    nextDay : '[Ертең сағат] LT',\r\n    nextWeek : 'dddd [сағат] LT',\r\n    lastDay : '[Кеше сағат] LT',\r\n    lastWeek : '[Өткен аптаның] dddd [сағат] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : '%s ішінде',\r\n    past : '%s бұрын',\r\n    s : 'бірнеше секунд',\r\n    ss : '%d секунд',\r\n    m : 'бір минут',\r\n    mm : '%d минут',\r\n    h : 'бір сағат',\r\n    hh : '%d сағат',\r\n    d : 'бір күн',\r\n    dd : '%d күн',\r\n    M : 'бір ай',\r\n    MM : '%d ай',\r\n    y : 'бір жыл',\r\n    yy : '%d жыл'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\r\n  ordinal(_num: number): string {\r\n    const a = _num % 10;\r\n    const b = _num >= 100 ? 100 : null;\r\n\r\n    return _num + (suffixes[_num] || suffixes[a] || suffixes[b]);\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 7  // The week that contains Jan 7th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Korean [ko]\r\n//! author : Kyungwook, Park : https://github.com/kyungw00k\r\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\r\n\r\nexport const koLocale: LocaleData = {\r\n  abbr: 'ko',\r\n  months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\r\n  monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\r\n  weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\r\n  weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\r\n  weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'A h:mm',\r\n    LTS : 'A h:mm:ss',\r\n    L : 'YYYY.MM.DD',\r\n    LL : 'YYYY년 MMMM D일',\r\n    LLL : 'YYYY년 MMMM D일 A h:mm',\r\n    LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\r\n    l : 'YYYY.MM.DD',\r\n    ll : 'YYYY년 MMMM D일',\r\n    lll : 'YYYY년 MMMM D일 A h:mm',\r\n    llll : 'YYYY년 MMMM D일 dddd A h:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : '오늘 LT',\r\n    nextDay : '내일 LT',\r\n    nextWeek : 'dddd LT',\r\n    lastDay : '어제 LT',\r\n    lastWeek : '지난주 dddd LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : '%s 후',\r\n    past : '%s 전',\r\n    s : '몇 초',\r\n    ss : '%d초',\r\n    m : '1분',\r\n    mm : '%d분',\r\n    h : '한 시간',\r\n    hh : '%d시간',\r\n    d : '하루',\r\n    dd : '%d일',\r\n    M : '한 달',\r\n    MM : '%d달',\r\n    y : '일 년',\r\n    yy : '%d년'\r\n  },\r\n  dayOfMonthOrdinalParse : /\\d{1,2}(일|월|주)/,\r\n  ordinal : function (num: number, period: string): string {\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + '일';\r\n      case 'M':\r\n        return num + '월';\r\n      case 'w':\r\n      case 'W':\r\n        return num + '주';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  },\r\n  meridiemParse : /오전|오후/,\r\n  isPM : function (token) {\r\n    return token === '오후';\r\n  },\r\n  meridiem : function (hour, minute, isUpper) {\r\n    return hour < 12 ? '오전' : '오후';\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Lithuanian [lt]\r\n//! author : Stanislavas Guk : https://github.com/ixoster\r\n\r\nconst units = {\r\n  ss : 'sekundė_sekundžių_sekundes',\r\n  m : 'minutė_minutės_minutę',\r\n  mm: 'minutės_minučių_minutes',\r\n  h : 'valanda_valandos_valandą',\r\n  hh: 'valandos_valandų_valandas',\r\n  d : 'diena_dienos_dieną',\r\n  dd: 'dienos_dienų_dienas',\r\n  M : 'mėnuo_mėnesio_mėnesį',\r\n  MM: 'mėnesiai_mėnesių_mėnesius',\r\n  y : 'metai_metų_metus',\r\n  yy: 'metai_metų_metus'\r\n};\r\nfunction translateSeconds(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  if (withoutSuffix) {\r\n      return 'kelios sekundės';\r\n  } else {\r\n      return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\r\n  }\r\n}\r\nfunction translateSingular(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\r\n}\r\nfunction special(num: number) {\r\n  return num % 10 === 0 || (num > 10 && num < 20);\r\n}\r\nfunction forms(key: string) {\r\n  return (units as any)[key].split('_');\r\n}\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  let result = num + ' ';\r\n  if (num === 1) {\r\n      return result + translateSingular(num, withoutSuffix, key[0], isFuture);\r\n  } else if (withoutSuffix) {\r\n      return result + (special(num) ? forms(key)[1] : forms(key)[0]);\r\n  } else {\r\n      if (isFuture) {\r\n          return result + forms(key)[1];\r\n      } else {\r\n          return result + (special(num) ? forms(key)[1] : forms(key)[2]);\r\n      }\r\n  }\r\n}\r\n\r\nexport const ltLocale: LocaleData = {\r\n  abbr: 'lt',\r\n  months : {\r\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\r\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\r\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\r\n  },\r\n  monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\r\n  weekdays : {\r\n      format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\r\n      standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\r\n      isFormat: /dddd HH:mm/\r\n  },\r\n  weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\r\n  weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\r\n  weekdaysParseExact : true,\r\n  longDateFormat : {\r\n      LT : 'HH:mm',\r\n      LTS : 'HH:mm:ss',\r\n      L : 'YYYY-MM-DD',\r\n      LL : 'YYYY [m.] MMMM D [d.]',\r\n      LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\r\n      LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\r\n      l : 'YYYY-MM-DD',\r\n      ll : 'YYYY [m.] MMMM D [d.]',\r\n      lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\r\n      llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\r\n  },\r\n  calendar : {\r\n      sameDay : '[Šiandien] LT',\r\n      nextDay : '[Rytoj] LT',\r\n      nextWeek : 'dddd LT',\r\n      lastDay : '[Vakar] LT',\r\n      lastWeek : '[Praėjusį] dddd LT',\r\n      sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n      future : 'po %s',\r\n      past : 'prieš %s',\r\n      s : translateSeconds,\r\n      ss : translate,\r\n      m : translateSingular,\r\n      mm : translate,\r\n      h : translateSingular,\r\n      hh : translate,\r\n      d : translateSingular,\r\n      dd : translate,\r\n      M : translateSingular,\r\n      MM : translate,\r\n      y : translateSingular,\r\n      yy : translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\r\n  ordinal(num) {\r\n      return num + '-oji';\r\n  },\r\n  week : {\r\n      dow : 1, // Monday is the first day of the week.\r\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Latvian [lv]\r\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\r\n\r\nexport const lvLocale: LocaleData = {\r\n  abbr: 'lv',\r\n  months : 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\r\n  weekdays : 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\r\n  weekdaysShort : 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\r\n  weekdaysMin : 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : '[Today at] LT',\r\n    nextDay : '[Tomorrow at] LT',\r\n    nextWeek : 'dddd [at] LT',\r\n    lastDay : '[Yesterday at] LT',\r\n    lastWeek : '[Last] dddd [at] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'pēc %s',\r\n    past : 'pirms %s',\r\n    s : 'dažām sekundēm',\r\n    ss : '%d sekundēm',\r\n    m : 'minūtes',\r\n    mm : '%d minūtēm',\r\n    h : 'stundas',\r\n    hh : '%d stundām',\r\n    d : 'dienas',\r\n    dd : '%d dienām',\r\n    M : 'mēneša',\r\n    MM : '%d mēnešiem',\r\n    y : 'gada',\r\n    yy : '%d gadiem'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal(num) {\r\n      return num + '.';\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Mongolian [mn]\r\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\r\n  switch (key) {\r\n    case 's':\r\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\r\n    case 'ss':\r\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\r\n    case 'm':\r\n    case 'mm':\r\n      return num + (withoutSuffix ? ' минут' : ' минутын');\r\n    case 'h':\r\n    case 'hh':\r\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\r\n    case 'd':\r\n    case 'dd':\r\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\r\n    case 'M':\r\n    case 'MM':\r\n      return num + (withoutSuffix ? ' сар' : ' сарын');\r\n    case 'y':\r\n    case 'yy':\r\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\r\n    default:\r\n      return num.toString(10);\r\n  }\r\n}\r\n\r\nexport const mnLocale: LocaleData = {\r\n  abbr: 'mn',\r\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\r\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\r\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\r\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'YYYY-MM-DD',\r\n    LL: 'YYYY оны MMMMын D',\r\n    LLL: 'YYYY оны MMMMын D HH:mm',\r\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\r\n  },\r\n  meridiemParse: /ҮӨ|ҮХ/i,\r\n  isPM: function (input) {\r\n    return input === 'ҮХ';\r\n  },\r\n  meridiem: function (hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'ҮӨ';\r\n    } else {\r\n      return 'ҮХ';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[Өнөөдөр] LT',\r\n    nextDay: '[Маргааш] LT',\r\n    nextWeek: '[Ирэх] dddd LT',\r\n    lastDay: '[Өчигдөр] LT',\r\n    lastWeek: '[Өнгөрсөн] dddd LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s дараа',\r\n    past: '%s өмнө',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\r\n  ordinal: function (num: number, period: string): string {\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + ' өдөр';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Norwegian Bokmål [nb]\r\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\r\n//!           Sigurd Gartmann : https://github.com/sigurdga\r\n\r\nexport const nbLocale: LocaleData = {\r\n  abbr: 'nb',\r\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\r\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\r\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\r\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\r\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[i dag kl.] LT',\r\n    nextDay: '[i morgen kl.] LT',\r\n    nextWeek: 'dddd [kl.] LT',\r\n    lastDay: '[i går kl.] LT',\r\n    lastWeek: '[forrige] dddd [kl.] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'om %s',\r\n    past: '%s siden',\r\n    s: 'noen sekunder',\r\n    ss: '%d sekunder',\r\n    m: 'ett minutt',\r\n    mm: '%d minutter',\r\n    h: 'en time',\r\n    hh: '%d timer',\r\n    d: 'en dag',\r\n    dd: '%d dager',\r\n    M: 'en måned',\r\n    MM: '%d måneder',\r\n    y: 'ett år',\r\n    yy: '%d år'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Dutch (Belgium) [nl-be]\r\n//! author : Joris Röling : https://github.com/jorisroling\r\n//! author : Jacob Middag : https://github.com/middagj\r\n\r\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\r\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\r\n\r\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\r\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\r\n\r\nexport const nlBeLocale: LocaleData = {\r\n  abbr: 'nl-be',\r\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\r\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortWithDots;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortWithDots[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\r\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\r\n\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n\r\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\r\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\r\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[vandaag om] LT',\r\n    nextDay: '[morgen om] LT',\r\n    nextWeek: 'dddd [om] LT',\r\n    lastDay: '[gisteren om] LT',\r\n    lastWeek: '[afgelopen] dddd [om] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'over %s',\r\n    past: '%s geleden',\r\n    s: 'een paar seconden',\r\n    ss: '%d seconden',\r\n    m: 'één minuut',\r\n    mm: '%d minuten',\r\n    h: 'één uur',\r\n    hh: '%d uur',\r\n    d: 'één dag',\r\n    dd: '%d dagen',\r\n    M: 'één maand',\r\n    MM: '%d maanden',\r\n    y: 'één jaar',\r\n    yy: '%d jaar'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getMonth } from '../utils/date-getters';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Dutch [nl]\r\n//! author : Joris Röling : https://github.com/jorisroling\r\n//! author : Jacob Middag : https://github.com/middagj\r\n\r\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\r\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\r\n\r\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\r\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\r\n\r\nexport const nlLocale: LocaleData = {\r\n  abbr: 'nl',\r\n  months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\r\n  monthsShort (date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsShortWithDots;\r\n    } else if (/-MMM-/.test(format)) {\r\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsShortWithDots[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n\r\n  monthsRegex,\r\n  monthsShortRegex: monthsRegex,\r\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\r\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\r\n\r\n  monthsParse,\r\n  longMonthsParse : monthsParse,\r\n  shortMonthsParse : monthsParse,\r\n\r\n  weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\r\n  weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\r\n  weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\r\n  weekdaysParseExact : true,\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD-MM-YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd D MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay: '[vandaag om] LT',\r\n    nextDay: '[morgen om] LT',\r\n    nextWeek: 'dddd [om] LT',\r\n    lastDay: '[gisteren om] LT',\r\n    lastWeek: '[afgelopen] dddd [om] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'over %s',\r\n    past : '%s geleden',\r\n    s : 'een paar seconden',\r\n    ss : '%d seconden',\r\n    m : 'één minuut',\r\n    mm : '%d minuten',\r\n    h : 'één uur',\r\n    hh : '%d uur',\r\n    d : 'één dag',\r\n    dd : '%d dagen',\r\n    M : 'één maand',\r\n    MM : '%d maanden',\r\n    y : 'één jaar',\r\n    yy : '%d jaar'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\r\n  ordinal (_num: number): string {\r\n    const num = Number(_num);\r\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Polish [pl]\r\n//! author : Rafal Hirsz : https://github.com/evoL\r\n\r\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\r\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\r\n\r\nfunction plural(num: number): boolean {\r\n  return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\r\n}\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string): string {\r\n  let result = num + ' ';\r\n  switch (key) {\r\n    case 'ss':\r\n      return result + (plural(num) ? 'sekundy' : 'sekund');\r\n    case 'm':\r\n      return withoutSuffix ? 'minuta' : 'minutę';\r\n    case 'mm':\r\n      return result + (plural(num) ? 'minuty' : 'minut');\r\n    case 'h':\r\n      return withoutSuffix ? 'godzina' : 'godzinę';\r\n    case 'hh':\r\n      return result + (plural(num) ? 'godziny' : 'godzin');\r\n    case 'MM':\r\n      return result + (plural(num) ? 'miesiące' : 'miesięcy');\r\n    case 'yy':\r\n      return result + (plural(num) ? 'lata' : 'lat');\r\n  }\r\n}\r\n\r\nexport const plLocale: LocaleData = {\r\n  abbr: 'pl',\r\n  months(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsNominative;\r\n    } else if (format === '') {\r\n      // Hack: if format empty we know this is used to generate\r\n      // RegExp by moment. Give then back both valid forms of months\r\n      // in RegExp ready format.\r\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\r\n    } else if (/D MMMM/.test(format)) {\r\n      return monthsSubjective[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsNominative[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\r\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\r\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\r\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Dziś o] LT',\r\n    nextDay: '[Jutro o] LT',\r\n    nextWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[W niedzielę o] LT';\r\n\r\n        case 2:\r\n          return '[We wtorek o] LT';\r\n\r\n        case 3:\r\n          return '[W środę o] LT';\r\n\r\n        case 5:\r\n          return '[W piątek o] LT';\r\n\r\n        case 6:\r\n          return '[W sobotę o] LT';\r\n\r\n        default:\r\n          return '[W] dddd [o] LT';\r\n      }\r\n    },\r\n    lastDay: '[Wczoraj o] LT',\r\n    lastWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[W zeszłą niedzielę o] LT';\r\n        case 3:\r\n          return '[W zeszłą środę o] LT';\r\n        case 4:\r\n          return '[W zeszłą czwartek o] LT';\r\n        case 5:\r\n          return '[W zeszłą piątek o] LT';\r\n        case 6:\r\n          return '[W zeszłą sobotę o] LT';\r\n        default:\r\n          return '[W zeszły] dddd [o] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'za %s',\r\n    past: '%s temu',\r\n    s: 'kilka sekund',\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: '1 dzień',\r\n    dd: '%d dni',\r\n    M: 'miesiąc',\r\n    MM: translate,\r\n    y: 'rok',\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Portuguese (Brazil) [pt-br]\r\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\r\n\r\nexport const ptBrLocale: LocaleData = {\r\n  abbr: 'pt-br',\r\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\r\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\r\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\r\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\r\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D [de] MMMM [de] YYYY',\r\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\r\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Hoje às] LT',\r\n    nextDay: '[Amanhã às] LT',\r\n    nextWeek: 'dddd [às] LT',\r\n    lastDay: '[Ontem às] LT',\r\n    lastWeek(date: Date) {\r\n      return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\r\n        '[Último] dddd [às] LT' : // Saturday + Sunday\r\n        '[Última] dddd [às] LT'; // Monday - Friday\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'em %s',\r\n    past: '%s atrás',\r\n    s: 'poucos segundos',\r\n    ss: '%d segundos',\r\n    m: 'um minuto',\r\n    mm: '%d minutos',\r\n    h: 'uma hora',\r\n    hh: '%d horas',\r\n    d: 'um dia',\r\n    dd: '%d dias',\r\n    M: 'um mês',\r\n    MM: '%d meses',\r\n    y: 'um ano',\r\n    yy: '%d anos'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\r\n  ordinal: '%dº'\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n// ! moment.js locale configuration\r\n// ! locale : Romanian [ro]\r\n//! author : Vlad Gurdiga : https://github.com/gurdiga\r\n//! author : Valentin Agachi : https://github.com/avaly\r\n// ! author : Earle white: https://github.com/5earle\r\n\r\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\r\n  let format: {[key:string]: string} = {\r\n    ss: 'secunde',\r\n    mm: 'minute',\r\n    hh: 'ore',\r\n    dd: 'zile',\r\n    MM: 'luni',\r\n    yy: 'ani'\r\n  };\r\n\r\n  let separator = ' ';\r\n  if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\r\n    separator = ' de ';\r\n  }\r\n  return num + separator + format[key];\r\n}\r\n\r\n\r\nexport const roLocale: LocaleData = {\r\n  abbr: 'ro',\r\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\r\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\r\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\r\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY H:mm',\r\n    LLLL: 'dddd, D MMMM YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[azi la] LT',\r\n    nextDay: '[mâine la] LT',\r\n    nextWeek: 'dddd [la] LT',\r\n    lastDay: '[ieri la] LT',\r\n    lastWeek: '[fosta] dddd [la] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'peste %s',\r\n    past: '%s în urmă',\r\n    s: 'câteva secunde',\r\n    ss: relativeTimeWithPlural,\r\n    m: 'un minut',\r\n    mm: relativeTimeWithPlural,\r\n    h: 'o oră',\r\n    hh: relativeTimeWithPlural,\r\n    d: 'o zi',\r\n    dd: relativeTimeWithPlural,\r\n    M: 'o lună',\r\n    MM: relativeTimeWithPlural,\r\n    y: 'un an',\r\n    yy: relativeTimeWithPlural\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getWeek } from '../units/week';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Russian [ru]\r\n//! author : Viktorminator : https://github.com/Viktorminator\r\n//! Author : Menelion Elensúle : https://github.com/Oire\r\n//! author : Коренберг Марк : https://github.com/socketpair\r\n\r\nfunction plural(word: string, num: number): string {\r\n  let forms = word.split('_');\r\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\r\n}\r\n\r\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\r\n  let format: {[key: string]: string} = {\r\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\r\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\r\n    hh: 'час_часа_часов',\r\n    dd: 'день_дня_дней',\r\n    MM: 'месяц_месяца_месяцев',\r\n    yy: 'год_года_лет'\r\n  };\r\n  if (key === 'm') {\r\n    return withoutSuffix ? 'минута' : 'минуту';\r\n  }\r\n  return num + ' ' + plural(format[key], +num);\r\n}\r\n\r\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\r\n\r\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\r\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\r\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\r\nexport const ruLocale: LocaleData = {\r\n  abbr: 'ru',\r\n  months: {\r\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\r\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\r\n  },\r\n  monthsShort: {\r\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\r\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\r\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\r\n  },\r\n  weekdays: {\r\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\r\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\r\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\r\n  },\r\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n  monthsParse,\r\n  longMonthsParse: monthsParse,\r\n  shortMonthsParse: monthsParse,\r\n\r\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\r\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\r\n\r\n  // копия предыдущего\r\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\r\n\r\n  // полные названия с падежами\r\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\r\n\r\n  // Выражение, которое соотвествует только сокращённым формам\r\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY г.',\r\n    LLL: 'D MMMM YYYY г., H:mm',\r\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Сегодня в] LT',\r\n    nextDay: '[Завтра в] LT',\r\n    lastDay: '[Вчера в] LT',\r\n    nextWeek(date: Date, now: Date) {\r\n      if (getWeek(now) !== getWeek(date)) {\r\n        switch (getDayOfWeek(date)) {\r\n          case 0:\r\n            return '[В следующее] dddd [в] LT';\r\n          case 1:\r\n          case 2:\r\n          case 4:\r\n            return '[В следующий] dddd [в] LT';\r\n          case 3:\r\n          case 5:\r\n          case 6:\r\n            return '[В следующую] dddd [в] LT';\r\n        }\r\n      } else {\r\n        if (getDayOfWeek(date) === 2) {\r\n          return '[Во] dddd [в] LT';\r\n        } else {\r\n          return '[В] dddd [в] LT';\r\n        }\r\n      }\r\n    },\r\n    lastWeek(date: Date, now: Date) {\r\n      if (getWeek(now) !== getWeek(date)) {\r\n        switch (getDayOfWeek(date)) {\r\n          case 0:\r\n            return '[В прошлое] dddd [в] LT';\r\n          case 1:\r\n          case 2:\r\n          case 4:\r\n            return '[В прошлый] dddd [в] LT';\r\n          case 3:\r\n          case 5:\r\n          case 6:\r\n            return '[В прошлую] dddd [в] LT';\r\n        }\r\n      } else {\r\n        if (getDayOfWeek(date) === 2) {\r\n          return '[Во] dddd [в] LT';\r\n        } else {\r\n          return '[В] dddd [в] LT';\r\n        }\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'через %s',\r\n    past: '%s назад',\r\n    s: 'несколько секунд',\r\n    ss: relativeTimeWithPlural,\r\n    m: relativeTimeWithPlural,\r\n    mm: relativeTimeWithPlural,\r\n    h: 'час',\r\n    hh: relativeTimeWithPlural,\r\n    d: 'день',\r\n    dd: relativeTimeWithPlural,\r\n    M: 'месяц',\r\n    MM: relativeTimeWithPlural,\r\n    y: 'год',\r\n    yy: relativeTimeWithPlural\r\n  },\r\n  meridiemParse: /ночи|утра|дня|вечера/i,\r\n  isPM(input) {\r\n    return /^(дня|вечера)$/.test(input);\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 4) {\r\n      return 'ночи';\r\n    } else if (hour < 12) {\r\n      return 'утра';\r\n    } else if (hour < 17) {\r\n      return 'дня';\r\n    } else {\r\n      return 'вечера';\r\n    }\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\r\n  ordinal(_num: number, period: string): string {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      case 'M':\r\n      case 'd':\r\n      case 'DDD':\r\n        return num + '-й';\r\n      case 'D':\r\n        return num + '-го';\r\n      case 'w':\r\n      case 'W':\r\n        return num + '-я';\r\n      default:\r\n        return num.toString(10);\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Slovak [sk]\r\n//! author : Jozef Pažin : https://github.com/atiris\r\n\r\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\r\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\r\n\r\nfunction plural(num: number): boolean {\r\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\r\n}\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  const result = num + ' ';\r\n\r\n  switch (key) {\r\n    case 's':// a few seconds / in a few seconds / a few seconds ago\r\n      return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\r\n    case 'ss':// 9 seconds / in 9 seconds / 9 seconds ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'sekundy' : 'sekúnd');\r\n      }\r\n      else {\r\n        return result + 'sekundami';\r\n      }\r\n    // break;\r\n    case 'm':// a minute / in a minute / a minute ago\r\n      return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\r\n    case 'mm':// 9 minutes / in 9 minutes / 9 minutes ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'minúty' : 'minút');\r\n      }\r\n      else {\r\n        return result + 'minútami';\r\n      }\r\n    // break;\r\n    case 'h':// an hour / in an hour / an hour ago\r\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\r\n    case 'hh':// 9 hours / in 9 hours / 9 hours ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'hodiny' : 'hodín');\r\n      }\r\n      else {\r\n        return result + 'hodinami';\r\n      }\r\n    // break;\r\n    case 'd':// a day / in a day / a day ago\r\n      return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\r\n    case 'dd':// 9 days / in 9 days / 9 days ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'dni' : 'dní');\r\n      }\r\n      else {\r\n        return result + 'dňami';\r\n      }\r\n    // break;\r\n    case 'M':// a month / in a month / a month ago\r\n      return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\r\n    case 'MM':// 9 months / in 9 months / 9 months ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'mesiace' : 'mesiacov');\r\n      }\r\n      else {\r\n        return result + 'mesiacmi';\r\n      }\r\n    // break;\r\n    case 'y':// a year / in a year / a year ago\r\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\r\n    case 'yy':// 9 years / in 9 years / 9 years ago\r\n      if (withoutSuffix || isFuture) {\r\n        return result + (plural(num) ? 'roky' : 'rokov');\r\n      }\r\n      else {\r\n        return result + 'rokmi';\r\n      }\r\n    // break;\r\n  }\r\n}\r\n\r\nexport const skLocale: LocaleData = {\r\n  abbr: 'sk',\r\n  months,\r\n  monthsShort,\r\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\r\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\r\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY H:mm',\r\n    LLLL: 'dddd D. MMMM YYYY H:mm',\r\n    l: 'D. M. YYYY'\r\n  },\r\n  calendar: {\r\n    sameDay: '[dnes o] LT',\r\n    nextDay: '[zajtra o] LT',\r\n    nextWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[v nedeľu o] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[v] dddd [o] LT';\r\n        case 3:\r\n          return '[v stredu o] LT';\r\n        case 4:\r\n          return '[vo štvrtok o] LT';\r\n        case 5:\r\n          return '[v piatok o] LT';\r\n        case 6:\r\n          return '[v sobotu o] LT';\r\n      }\r\n    },\r\n    lastDay: '[včera o] LT',\r\n    lastWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[minulú nedeľu o] LT';\r\n        case 1:\r\n        case 2:\r\n          return '[minulý] dddd [o] LT';\r\n        case 3:\r\n          return '[minulú stredu o] LT';\r\n        case 4:\r\n        case 5:\r\n          return '[minulý] dddd [o] LT';\r\n        case 6:\r\n          return '[minulú sobotu o] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'o %s',\r\n    past: 'pred %s',\r\n    s: translate,\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: translate,\r\n    dd: translate,\r\n    M: translate,\r\n    MM: translate,\r\n    y: translate,\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Slovenian [sl]\r\n//! author : mihan : https://github.com/mihan\r\n\r\nfunction processRelativeTime(number: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\r\n  var result = number + ' ';\r\n  switch (key) {\r\n    case 's':\r\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\r\n    case 'ss':\r\n      if (number === 1) {\r\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\r\n      }\r\n      return result;\r\n    case 'm':\r\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\r\n    case 'mm':\r\n      if (number === 1) {\r\n        result += withoutSuffix ? 'minuta' : 'minuto';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\r\n      }\r\n      return result;\r\n    case 'h':\r\n      return withoutSuffix ? 'ena ura' : 'eno uro';\r\n    case 'hh':\r\n      if (number === 1) {\r\n        result += withoutSuffix ? 'ura' : 'uro';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\r\n      }\r\n      return result;\r\n    case 'd':\r\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\r\n    case 'dd':\r\n      if (number === 1) {\r\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\r\n      }\r\n      return result;\r\n    case 'M':\r\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\r\n    case 'MM':\r\n      if (number === 1) {\r\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\r\n      }\r\n      return result;\r\n    case 'y':\r\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\r\n    case 'yy':\r\n      if (number === 1) {\r\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\r\n      } else if (number === 2) {\r\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\r\n      } else if (number < 5) {\r\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\r\n      } else {\r\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\r\n      }\r\n      return result;\r\n  }\r\n}\r\n\r\nexport const slLocale: LocaleData = {\r\n  abbr: 'sl',\r\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\r\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\r\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\r\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D. MMMM YYYY',\r\n    LLL: 'D. MMMM YYYY H:mm',\r\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[danes ob] LT',\r\n    nextDay: '[jutri ob] LT',\r\n\r\n    nextWeek(date: Date) {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[v] [nedeljo] [ob] LT';\r\n        case 3:\r\n          return '[v] [sredo] [ob] LT';\r\n        case 6:\r\n          return '[v] [soboto] [ob] LT';\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n        case 5:\r\n          return '[v] dddd [ob] LT';\r\n      }\r\n    },\r\n    lastDay: '[včeraj ob] LT',\r\n    lastWeek(date: Date) {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[prejšnjo] [nedeljo] [ob] LT';\r\n        case 3:\r\n          return '[prejšnjo] [sredo] [ob] LT';\r\n        case 6:\r\n          return '[prejšnjo] [soboto] [ob] LT';\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n        case 5:\r\n          return '[prejšnji] dddd [ob] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'čez %s',\r\n    past: 'pred %s',\r\n    s: processRelativeTime,\r\n    ss: processRelativeTime,\r\n    m: processRelativeTime,\r\n    mm: processRelativeTime,\r\n    h: processRelativeTime,\r\n    hh: processRelativeTime,\r\n    d: processRelativeTime,\r\n    dd: processRelativeTime,\r\n    M: processRelativeTime,\r\n    MM: processRelativeTime,\r\n    y: processRelativeTime,\r\n    yy: processRelativeTime\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Albanian [sq]\r\n//! author : Agon Cecelia : https://github.com/agoncecelia\r\n\r\nexport const sqLocale: LocaleData = {\r\n  abbr: 'sq',\r\n  months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\r\n  monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\r\n  weekdays : 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\r\n  weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\r\n  weekdaysMin : 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : '[Sot në] LT',\r\n    nextDay : '[Nesër në] LT',\r\n    nextWeek : 'dddd [në] LT',\r\n    lastDay : '[Dje në] LT',\r\n    lastWeek : 'dddd [e kaluar në] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'në %s',\r\n    past : 'para %sve',\r\n    s : 'disa sekonda',\r\n    ss : '%d sekonda',\r\n    m : 'një minut',\r\n    mm : '%d minuta',\r\n    h : 'një orë',\r\n    hh : '%d orë',\r\n    d : 'një ditë',\r\n    dd : '%d ditë',\r\n    M : 'një muaj',\r\n    MM : '%d muaj',\r\n    y : 'një vit',\r\n    yy : '%d vite'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./, // need clarification\r\n  ordinal : '%d.', // need clarification\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Swedish [sv]\r\n//! author : Jens Alm : https://github.com/ulmus\r\n\r\nexport const svLocale: LocaleData = {\r\n  abbr: 'sv',\r\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\r\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\r\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\r\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\r\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'YYYY-MM-DD',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\r\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\r\n    lll: 'D MMM YYYY HH:mm',\r\n    llll: 'ddd D MMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Idag] LT',\r\n    nextDay: '[Imorgon] LT',\r\n    lastDay: '[Igår] LT',\r\n    nextWeek: '[På] dddd LT',\r\n    lastWeek: '[I] dddd[s] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'om %s',\r\n    past: 'för %s sedan',\r\n    s: 'några sekunder',\r\n    ss: '%d sekunder',\r\n    m: 'en minut',\r\n    mm: '%d minuter',\r\n    h: 'en timme',\r\n    hh: '%d timmar',\r\n    d: 'en dag',\r\n    dd: '%d dagar',\r\n    M: 'en månad',\r\n    MM: '%d månader',\r\n    y: 'ett år',\r\n    yy: '%d år'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    let b = num % 10,\r\n      output = (~~(num % 100 / 10) === 1) ? 'e' :\r\n        (b === 1) ? 'a' :\r\n          (b === 2) ? 'a' :\r\n            (b === 3) ? 'e' : 'e';\r\n    return num + output;\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","// moment.js locale configuration\r\n// locale : Thai [th]\r\n// author : Watcharapol Sanitwong : https://github.com/tumit\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\nexport const thLocale: LocaleData = {\r\n  abbr: 'th',\r\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\r\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\r\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'), // yes, three characters difference\r\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY เวลา H:mm',\r\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\r\n  },\r\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\r\n  isPM(input) {\r\n    return input === 'หลังเที่ยง';\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'ก่อนเที่ยง';\r\n    } else {\r\n      return 'หลังเที่ยง';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[วันนี้ เวลา] LT',\r\n    nextDay: '[พรุ่งนี้ เวลา] LT',\r\n    nextWeek: 'dddd[หน้า เวลา] LT',\r\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\r\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'อีก %s',\r\n    past: '%sที่แล้ว',\r\n    s: 'ไม่กี่วินาที',\r\n    ss: '%d วินาที',\r\n    m: '1 นาที',\r\n    mm: '%d นาที',\r\n    h: '1 ชั่วโมง',\r\n    hh: '%d ชั่วโมง',\r\n    d: '1 วัน',\r\n    dd: '%d วัน',\r\n    M: '1 เดือน',\r\n    MM: '%d เดือน',\r\n    y: '1 ปี',\r\n    yy: '%d ปี'\r\n  }\r\n};\r\n","// moment.js locale configuration\r\n// locale : Thai-Buddhist Era [th-be]\r\n// author : Watcharapol Sanitwong : https://github.com/tumit\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\n\r\nexport const thBeLocale: LocaleData = {\r\n  abbr: 'th-be',\r\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\r\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\r\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\r\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: 'H:mm',\r\n    LTS: 'H:mm:ss',\r\n    L: 'DD/MM/YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY เวลา H:mm',\r\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\r\n  },\r\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\r\n  isPM(input) {\r\n    return input === 'หลังเที่ยง';\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 12) {\r\n      return 'ก่อนเที่ยง';\r\n    } else {\r\n      return 'หลังเที่ยง';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[วันนี้ เวลา] LT',\r\n    nextDay: '[พรุ่งนี้ เวลา] LT',\r\n    nextWeek: 'dddd[หน้า เวลา] LT',\r\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\r\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'อีก %s',\r\n    past: '%sที่แล้ว',\r\n    s: 'ไม่กี่วินาที',\r\n    ss: '%d วินาที',\r\n    m: '1 นาที',\r\n    mm: '%d นาที',\r\n    h: '1 ชั่วโมง',\r\n    hh: '%d ชั่วโมง',\r\n    d: '1 วัน',\r\n    dd: '%d วัน',\r\n    M: '1 เดือน',\r\n    MM: '%d เดือน',\r\n    y: '1 ปี',\r\n    yy: '%d ปี'\r\n  },\r\n\r\n  preparse(str: string, format?: string): string {\r\n\r\n    const _format = thBeLocale.longDateFormat[format]\r\n      ? thBeLocale.longDateFormat[format]\r\n      : format;\r\n\r\n    // endsWith('YYYY')\r\n    if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1 ) {\r\n      const ddMM = str.substr(0, str.length - 4);\r\n      const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\r\n      return ddMM + yyyy;\r\n    }\r\n\r\n    return str;\r\n  },\r\n\r\n  getFullYear(date: Date, isUTC = false): number {\r\n    return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Turkish [tr]\r\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\r\n//!           Burak Yiğit Kaya: https://github.com/BYK\r\n\r\nlet suffixes: { [key: string]: string } = {\r\n  1: '\\'inci',\r\n  5: '\\'inci',\r\n  8: '\\'inci',\r\n  70: '\\'inci',\r\n  80: '\\'inci',\r\n  2: '\\'nci',\r\n  7: '\\'nci',\r\n  20: '\\'nci',\r\n  50: '\\'nci',\r\n  3: '\\'üncü',\r\n  4: '\\'üncü',\r\n  100: '\\'üncü',\r\n  6: '\\'ncı',\r\n  9: '\\'uncu',\r\n  10: '\\'uncu',\r\n  30: '\\'uncu',\r\n  60: '\\'ıncı',\r\n  90: '\\'ıncı'\r\n};\r\n\r\nexport const trLocale: LocaleData = {\r\n  abbr: 'tr',\r\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\r\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\r\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\r\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\r\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[bugün saat] LT',\r\n    nextDay: '[yarın saat] LT',\r\n    nextWeek: '[gelecek] dddd [saat] LT',\r\n    lastDay: '[dün] LT',\r\n    lastWeek: '[geçen] dddd [saat] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: '%s sonra',\r\n    past: '%s önce',\r\n    s: 'birkaç saniye',\r\n    ss: '%d saniye',\r\n    m: 'bir dakika',\r\n    mm: '%d dakika',\r\n    h: 'bir saat',\r\n    hh: '%d saat',\r\n    d: 'bir gün',\r\n    dd: '%d gün',\r\n    M: 'bir ay',\r\n    MM: '%d ay',\r\n    y: 'bir yıl',\r\n    yy: '%d yıl'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    if (num === 0) {  // special case for zero\r\n      return num + '\\'ıncı';\r\n    }\r\n    let a = num % 10,\r\n      b = num % 100 - a,\r\n      c = num >= 100 ? 100 : null;\r\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\nimport { getHours } from '../utils/date-getters';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Ukrainian [uk]\r\n//! author : zemlanin : https://github.com/zemlanin\r\n//! Author : Menelion Elensúle : https://github.com/Oire\r\n\r\nfunction plural(word, num) {\r\n  let forms = word.split('_');\r\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\r\n}\r\n\r\nfunction relativeTimeWithPlural(num: number, withoutSuffix, key): string {\r\n  let format: { [key: string]: string } = {\r\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\r\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\r\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\r\n    dd: 'день_дні_днів',\r\n    MM: 'місяць_місяці_місяців',\r\n    yy: 'рік_роки_років'\r\n  };\r\n\r\n  if (key === 'm') {\r\n    return withoutSuffix ? 'хвилина' : 'хвилину';\r\n  }\r\n\r\n  if (key === 'h') {\r\n    return withoutSuffix ? 'година' : 'годину';\r\n  }\r\n  return num + ' ' + plural(format[key], +num);\r\n}\r\n\r\nfunction weekdaysCaseReplace(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n  let weekdays = {\r\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\r\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\r\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\r\n  };\r\n\r\n  if (!date) {\r\n    return weekdays.nominative;\r\n  }\r\n\r\n  let nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\r\n    'accusative' :\r\n    ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\r\n      'genitive' :\r\n      'nominative');\r\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\r\n}\r\n\r\nfunction processHoursFunction(str: string) {\r\n  return function (date: Date): string {\r\n    return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\r\n  };\r\n}\r\n\r\nexport const ukLocale: LocaleData = {\r\n  abbr: 'uk',\r\n  months: {\r\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\r\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\r\n  },\r\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\r\n  weekdays: weekdaysCaseReplace,\r\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\r\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY р.',\r\n    LLL: 'D MMMM YYYY р., HH:mm',\r\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: processHoursFunction('[Сьогодні '),\r\n    nextDay: processHoursFunction('[Завтра '),\r\n    lastDay: processHoursFunction('[Вчора '),\r\n    nextWeek: processHoursFunction('[У] dddd ['),\r\n    lastWeek(date: Date) {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n        case 3:\r\n        case 5:\r\n        case 6:\r\n          return processHoursFunction('[Минулої] dddd [')(date);\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n          return processHoursFunction('[Минулого] dddd [')(date);\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'за %s',\r\n    past: '%s тому',\r\n    s: 'декілька секунд',\r\n    ss: relativeTimeWithPlural,\r\n    m: relativeTimeWithPlural,\r\n    mm: relativeTimeWithPlural,\r\n    h: 'годину',\r\n    hh: relativeTimeWithPlural,\r\n    d: 'день',\r\n    dd: relativeTimeWithPlural,\r\n    M: 'місяць',\r\n    MM: relativeTimeWithPlural,\r\n    y: 'рік',\r\n    yy: relativeTimeWithPlural\r\n  },\r\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\r\n  meridiemParse: /ночі|ранку|дня|вечора/,\r\n  isPM(input) {\r\n    return /^(дня|вечора)$/.test(input);\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    if (hour < 4) {\r\n      return 'ночі';\r\n    } else if (hour < 12) {\r\n      return 'ранку';\r\n    } else if (hour < 17) {\r\n      return 'дня';\r\n    } else {\r\n      return 'вечора';\r\n    }\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\r\n  ordinal(_num: number, period: string): string {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      case 'M':\r\n      case 'd':\r\n      case 'DDD':\r\n      case 'w':\r\n      case 'W':\r\n        return num + '-й';\r\n      case 'D':\r\n        return num + '-го';\r\n      default:\r\n        return num.toString();\r\n    }\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\r\n  }\r\n};\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Việt Nam [vi]\r\n//! author : Chris Gedrim : https://github.com/chrisgedrim\r\n\r\nexport const viLocale: LocaleData = {\r\n  abbr: 'vi',\r\n  months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\r\n  monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\r\n  monthsParseExact: true,\r\n  weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\r\n  weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\r\n  weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\r\n  weekdaysParseExact : true,\r\n  meridiemParse: /sa|ch/i,\r\n  isPM(input: string): boolean {\r\n    return /^ch$/i.test(input);\r\n  },\r\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\r\n    if (hours < 12) {\r\n      return isLower ? 'sa' : 'SA';\r\n    } else {\r\n      return isLower ? 'ch' : 'CH';\r\n    }\r\n  },\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'DD/MM/YYYY',\r\n    LL : 'D MMMM [năm] YYYY',\r\n    LLL : 'D MMMM [năm] YYYY HH:mm',\r\n    LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\r\n    l : 'DD/M/YYYY',\r\n    ll : 'D MMM YYYY',\r\n    lll : 'D MMM YYYY HH:mm',\r\n    llll : 'ddd, D MMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay: '[Hôm nay lúc] LT',\r\n    nextDay: '[Ngày mai lúc] LT',\r\n    nextWeek: 'dddd [tuần tới lúc] LT',\r\n    lastDay: '[Hôm qua lúc] LT',\r\n    lastWeek: 'dddd [tuần trước lúc] LT',\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime : {\r\n    future : '%s tới',\r\n    past : '%s trước',\r\n    s : 'vài giây',\r\n    ss : '%d giây' ,\r\n    m : 'một phút',\r\n    mm : '%d phút',\r\n    h : 'một giờ',\r\n    hh : '%d giờ',\r\n    d : 'một ngày',\r\n    dd : '%d ngày',\r\n    M : 'một tháng',\r\n    MM : '%d tháng',\r\n    y : 'một năm',\r\n    yy : '%d năm'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\r\n  ordinal(_num: number): string {\r\n    return '' + _num;\r\n  },\r\n  week : {\r\n    dow : 1, // Thứ Hai là ngày đầu tuần.\r\n    doy : 4  // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\r\n  }\r\n};\r\n\r\n","import { LocaleData } from '../locale/locale.class';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Chinese (China) [zh-cn]\r\n//! author : suupic : https://github.com/suupic\r\n//! author : Zeno Zeng : https://github.com/zenozeng\r\n\r\nexport const zhCnLocale: LocaleData = {\r\n  abbr: 'zh-cn',\r\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\r\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\r\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\r\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\r\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'YYYY/MM/DD',\r\n    LL: 'YYYY年M月D日',\r\n    LLL: 'YYYY年M月D日Ah点mm分',\r\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\r\n    l: 'YYYY/M/D',\r\n    ll: 'YYYY年M月D日',\r\n    lll: 'YYYY年M月D日 HH:mm',\r\n    llll: 'YYYY年M月D日dddd HH:mm'\r\n  },\r\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\r\n  meridiemHour(hour, meridiem) {\r\n    if (hour === 12) {\r\n      hour = 0;\r\n    }\r\n    if (meridiem === '凌晨' || meridiem === '早上' ||\r\n      meridiem === '上午') {\r\n      return hour;\r\n    } else if (meridiem === '下午' || meridiem === '晚上') {\r\n      return hour + 12;\r\n    } else {\r\n      // '中午'\r\n      return hour >= 11 ? hour : hour + 12;\r\n    }\r\n  },\r\n  meridiem(hour, minute, isLower) {\r\n    let hm = hour * 100 + minute;\r\n    if (hm < 600) {\r\n      return '凌晨';\r\n    } else if (hm < 900) {\r\n      return '早上';\r\n    } else if (hm < 1130) {\r\n      return '上午';\r\n    } else if (hm < 1230) {\r\n      return '中午';\r\n    } else if (hm < 1800) {\r\n      return '下午';\r\n    } else {\r\n      return '晚上';\r\n    }\r\n  },\r\n  calendar: {\r\n    sameDay: '[今天]LT',\r\n    nextDay: '[明天]LT',\r\n    nextWeek: '[下]ddddLT',\r\n    lastDay: '[昨天]LT',\r\n    lastWeek: '[上]ddddLT',\r\n    sameElse: 'L'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\r\n  ordinal(_num: number, period) {\r\n    const num = Number(_num);\r\n    switch (period) {\r\n      case 'd':\r\n      case 'D':\r\n      case 'DDD':\r\n        return num + '日';\r\n      case 'M':\r\n        return num + '月';\r\n      case 'w':\r\n      case 'W':\r\n        return num + '周';\r\n      default:\r\n        return num.toString();\r\n    }\r\n  },\r\n  relativeTime: {\r\n    future: '%s内',\r\n    past: '%s前',\r\n    s: '几秒',\r\n    ss: '%d 秒',\r\n    m: '1 分钟',\r\n    mm: '%d 分钟',\r\n    h: '1 小时',\r\n    hh: '%d 小时',\r\n    d: '1 天',\r\n    dd: '%d 天',\r\n    M: '1 个月',\r\n    MM: '%d 个月',\r\n    y: '1 年',\r\n    yy: '%d 年'\r\n  },\r\n  week: {\r\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n"]}