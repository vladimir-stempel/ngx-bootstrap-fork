{"version":3,"file":"bs-datepicker.component.js","sourceRoot":"","sources":["../../../../src/datepicker/bs-datepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ComponentRef, Directive, ElementRef, EventEmitter, Input, OnChanges,\r\n  OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewContainerRef, AfterViewInit\r\n} from '@angular/core';\r\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { BsDatepickerContainerComponent } from './themes/bs/bs-datepicker-container.component';\r\nimport { Observable, Subscription, Subject, BehaviorSubject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { BsDatepickerConfig } from './bs-datepicker.config';\r\nimport { BsDatepickerViewMode, DatepickerDateCustomClasses, DatepickerDateTooltipText } from './models';\r\n\r\n@Directive({\r\n  selector: '[bsDatepicker]',\r\n  exportAs: 'bsDatepicker'\r\n})\r\nexport class BsDatepickerDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n  /**\r\n   * Placement of a datepicker. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  @Input() triggers = 'click';\r\n  /**\r\n   * Close datepicker on outside click\r\n   */\r\n  @Input() outsideClick = true;\r\n  /**\r\n   * A selector specifying the element the datepicker should be appended to.\r\n   */\r\n  @Input() container = 'body';\r\n\r\n  @Input() outsideEsc = true;\r\n\r\n  /**\r\n   * Returns whether or not the datepicker is currently being shown\r\n   */\r\n  @Input()\r\n  get isOpen(): boolean {\r\n    return this._datepicker.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    this.isOpen$.next(value);\r\n  }\r\n\r\n  /**\r\n   * Emits an event when the datepicker is shown\r\n   */\r\n  @Output() onShown: EventEmitter<unknown>;\r\n  /**\r\n   * Emits an event when the datepicker is hidden\r\n   */\r\n  @Output() onHidden: EventEmitter<unknown>;\r\n\r\n  _bsValue: Date;\r\n  isOpen$: BehaviorSubject<boolean>;\r\n  isDestroy$: Subject<void>;\r\n  /**\r\n   * Initial value of datepicker\r\n   */\r\n  @Input()\r\n  set bsValue(value: Date) {\r\n    if (this._bsValue && value && this._bsValue.getTime() === value.getTime()) {\r\n      return;\r\n    }\r\n\r\n    if (!this._bsValue && value) {\r\n      const now = new Date();\r\n\r\n      value.setMilliseconds(now.getMilliseconds());\r\n      value.setSeconds(now.getSeconds());\r\n      value.setMinutes(now.getMinutes());\r\n      value.setHours(now.getHours());\r\n    }\r\n\r\n    this._bsValue = value;\r\n    this.bsValueChange.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Config object for datepicker\r\n   */\r\n  @Input() set bsConfig(bsConfig: Partial<BsDatepickerConfig>) {\r\n    this._bsConfig = bsConfig;\r\n    this.setConfig();\r\n    this._dateInputFormat$.next(bsConfig && bsConfig.dateInputFormat);\r\n  }\r\n  get bsConfig(): Partial<BsDatepickerConfig> {\r\n    return this._bsConfig;\r\n  }\r\n  /**\r\n   * Indicates whether datepicker's content is enabled or not\r\n   */\r\n  @Input() isDisabled: boolean;\r\n  /**\r\n   * Minimum date which is available for selection\r\n   */\r\n  @Input() minDate: Date;\r\n  /**\r\n   * Maximum date which is available for selection\r\n   */\r\n  @Input() maxDate: Date;\r\n\r\n  /**\r\n   * Minimum view mode : day, month, or year\r\n   */\r\n  @Input() minMode: BsDatepickerViewMode;\r\n\r\n  /**\r\n   * Disable Certain days in the week\r\n   */\r\n  @Input() daysDisabled: number[];\r\n\r\n  /**\r\n   * Disable specific dates\r\n   */\r\n  @Input() datesDisabled: Date[];\r\n  /**\r\n   * Enable specific dates\r\n   */\r\n  @Input() datesEnabled: Date[];\r\n  /**\r\n   * Date custom classes\r\n   */\r\n  @Input() dateCustomClasses: DatepickerDateCustomClasses[];\r\n  /**\r\n   * Date tooltip text\r\n   */\r\n  @Input() dateTooltipTexts: DatepickerDateTooltipText[];\r\n  /**\r\n   * Emits when datepicker value has been changed\r\n   */\r\n  @Output() bsValueChange: EventEmitter<Date> = new EventEmitter();\r\n\r\n  get dateInputFormat$(): Observable<string> {\r\n    return this._dateInputFormat$;\r\n  }\r\n\r\n  protected _subs: Subscription[] = [];\r\n\r\n  private _datepicker: ComponentLoader<BsDatepickerContainerComponent>;\r\n  private _datepickerRef: ComponentRef<BsDatepickerContainerComponent>;\r\n  private _bsConfig: Partial<BsDatepickerConfig>;\r\n  private readonly _dateInputFormat$ = new Subject<string>();\r\n\r\n  constructor(public _config: BsDatepickerConfig,\r\n              private  _elementRef: ElementRef,\r\n              private  _renderer: Renderer2,\r\n              _viewContainerRef: ViewContainerRef,\r\n              cis: ComponentLoaderFactory) {\r\n    // todo: assign only subset of fields\r\n    Object.assign(this, this._config);\r\n    this._datepicker = cis.createLoader<BsDatepickerContainerComponent>(\r\n      _elementRef,\r\n      _viewContainerRef,\r\n      _renderer\r\n    );\r\n    this.onShown = this._datepicker.onShown;\r\n    this.onHidden = this._datepicker.onHidden;\r\n    this.isOpen$ = new BehaviorSubject(this.isOpen);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isDestroy$ = new Subject();\r\n    this._datepicker.listen({\r\n      outsideClick: this.outsideClick,\r\n      outsideEsc: this.outsideEsc,\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n    this.setConfig();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this._datepickerRef || !this._datepickerRef.instance) {\r\n      return;\r\n    }\r\n\r\n    if (changes.minDate) {\r\n      this._datepickerRef.instance.minDate = this.minDate;\r\n    }\r\n\r\n    if (changes.maxDate) {\r\n      this._datepickerRef.instance.maxDate = this.maxDate;\r\n    }\r\n\r\n    if (changes.daysDisabled) {\r\n      this._datepickerRef.instance.daysDisabled = this.daysDisabled;\r\n    }\r\n\r\n    if (changes.datesDisabled) {\r\n      this._datepickerRef.instance.datesDisabled = this.datesDisabled;\r\n    }\r\n\r\n    if (changes.datesEnabled) {\r\n      this._datepickerRef.instance.datesEnabled = this.datesEnabled;\r\n    }\r\n\r\n    if (changes.isDisabled) {\r\n      this._datepickerRef.instance.isDisabled = this.isDisabled;\r\n    }\r\n\r\n    if (changes.dateCustomClasses) {\r\n      this._datepickerRef.instance.dateCustomClasses = this.dateCustomClasses;\r\n    }\r\n\r\n    if (changes.dateTooltipTexts) {\r\n      this._datepickerRef.instance.dateTooltipTexts = this.dateTooltipTexts;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.isOpen$.pipe(\r\n      filter(isOpen => isOpen !== this.isOpen),\r\n      takeUntil(this.isDestroy$)\r\n    )\r\n    .subscribe(() => this.toggle());\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s datepicker. This is considered a “manual” triggering of\r\n   * the datepicker.\r\n   */\r\n  show(): void {\r\n    if (this._datepicker.isShown) {\r\n      return;\r\n    }\r\n\r\n    this.setConfig();\r\n\r\n    this._datepickerRef = this._datepicker\r\n      .provide({provide: BsDatepickerConfig, useValue: this._config})\r\n      .attach(BsDatepickerContainerComponent)\r\n      .to(this.container)\r\n      .position({attachment: this.placement})\r\n      .show({placement: this.placement});\r\n\r\n    // if date changes from external source (model -> view)\r\n    this._subs.push(\r\n      this.bsValueChange.subscribe((value: Date) => {\r\n        this._datepickerRef.instance.value = value;\r\n      })\r\n    );\r\n\r\n    // if date changes from picker (view -> model)\r\n    this._subs.push(\r\n      this._datepickerRef.instance.valueChange.subscribe((value: Date) => {\r\n        this.bsValue = value;\r\n        this.hide();\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s datepicker. This is considered a “manual” triggering of\r\n   * the datepicker.\r\n   */\r\n  hide(): void {\r\n    if (this.isOpen) {\r\n      this._datepicker.hide();\r\n    }\r\n    for (const sub of this._subs) {\r\n      sub.unsubscribe();\r\n    }\r\n\r\n    if (this._config.returnFocusToInput) {\r\n      this._renderer.selectRootElement(this._elementRef.nativeElement).focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s datepicker. This is considered a “manual” triggering\r\n   * of the datepicker.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  /**\r\n   * Set config for datepicker\r\n   */\r\n  setConfig(): void {\r\n    this._config = Object.assign({}, this._config, this.bsConfig, {\r\n      value: this._bsValue,\r\n      isDisabled: this.isDisabled,\r\n      minDate: this.minDate || this.bsConfig && this.bsConfig.minDate,\r\n      maxDate: this.maxDate || this.bsConfig && this.bsConfig.maxDate,\r\n      daysDisabled: this.daysDisabled || this.bsConfig && this.bsConfig.daysDisabled,\r\n      dateCustomClasses: this.dateCustomClasses || this.bsConfig && this.bsConfig.dateCustomClasses,\r\n      dateTooltipTexts: this.dateTooltipTexts || this.bsConfig && this.bsConfig.dateTooltipTexts,\r\n      datesDisabled: this.datesDisabled || this.bsConfig && this.bsConfig.datesDisabled,\r\n      datesEnabled: this.datesEnabled || this.bsConfig && this.bsConfig.datesEnabled,\r\n      minMode: this.minMode || this.bsConfig && this.bsConfig.minMode\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._datepicker.dispose();\r\n    this.isOpen$.next(false);\r\n    if (this.isDestroy$) {\r\n      this.isDestroy$.next();\r\n      this.isDestroy$.complete();\r\n    }\r\n  }\r\n}\r\n"]}