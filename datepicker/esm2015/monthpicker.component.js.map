{"version":3,"file":"monthpicker.component.js","sourceRoot":"","sources":["../../../../src/datepicker/monthpicker.component.ts"],"names":[],"mappings":"AAAA,cAAc;AACd,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAElD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;;;;;;;;IA4BlE,6BAAiH;IAC/G,iCAG4D;IAApD,6MAAS,qCAA2B,IAAC;IAC3C,+BAA6F;IAAA,YAAe;IAAA,iBAAO;IACrH,iBAAS;IACX,iBAAK;;;;IAPgF,4CAA2B;IAA/C,gCAAmB;IAE1E,eAAmO;IAAnO,8RAAmO,6BAAA;IAGnO,eAAsF;IAAtF,sHAAsF;IAAC,eAAe;IAAf,kCAAe;;;IANlH,0BAA8B;IAC5B,kFAOK;IACP,iBAAK;;;IARiB,eAAO;IAAP,iCAAO;;;;;IAvBjC,gCAA+D;IAC7D,6BAAO;IACL,0BAAI;IACF,0BAAI;IACF,iCACoD;IAA5C,mKAAS,wBAAiB,CAAC,CAAC,IAAC;IAAe,sBAAC;IAAA,iBAAS;IAAA,iBAAK;IACrE,0BAA8F;IAC5F,iCAIwG;IAFhG,mKAAS,6BAAsB,CAAC,CAAC,IAAC;IAGxC,8BAAQ;IAAA,YAAW;IAAA,iBAAS;IAC9B,iBAAS;IACX,iBAAK;IACL,2BAAI;IACF,kCACmD;IAA3C,qKAAS,wBAAgB,CAAC,CAAC,IAAC;IAAe,uBAAC;IAAA,iBAAS;IAC/D,iBAAK;IACP,iBAAK;IACP,iBAAQ;IACR,8BAAO;IACL,6EASK;IACP,iBAAQ;IACV,iBAAQ;;;IA3BE,eAAyF;IAAzF,6GAAyF;IACnF,eAAqC;IAArC,0DAAqC,iEAAA,4FAAA;IAKnC,eAAW;IAAX,kCAAW;IAUJ,eAAO;IAAP,qCAAO;;AAqBhC,MAAM,OAAO,oBAAoB;IAM/B,YAAY,UAAoC;QAJhD,SAAI,GAAG,EAAE,CAAC;QAKR,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,4DAA4D;QAC5D,MAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAEzC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC;YACpC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;YAC7B,MAAM,IAAI,GAAW,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YACnD,IAAI,IAAU,CAAC;YAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC3B,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC9B,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC1D,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;aACzC;YAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAChE,CAAC,EAAE,OAAO,CAAC,CAAC;QAEZ,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,UAChC,KAAW,EACX,KAAW;YAEX,MAAM,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3D,MAAM,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;QACrC,CAAC,EAAE,OAAO,CAAC,CAAC;QAEZ,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;;wFA9CU,oBAAoB;yDAApB,oBAAoB;QA3CjC,0EAiCQ;;QAjCA,gEAAyC;;uFA2CpC,oBAAoB;cA9ChC,SAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCT;gBACD,MAAM,EAAE;oBACN;;;;GAID;iBACA;aACF","sourcesContent":["// @deprecated\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\r\n\r\n@Component({\r\n  selector: 'monthpicker',\r\n  template: `\r\n<table *ngIf=\"datePicker.datepickerMode==='month'\" role=\"grid\">\r\n  <thead>\r\n    <tr>\r\n      <th>\r\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-left float-left\"\r\n                (click)=\"datePicker.move(-1)\" tabindex=\"-1\">‹</button></th>\r\n      <th [attr.colspan]=\"((datePicker.monthColLimit - 2) <= 0) ? 1 : datePicker.monthColLimit - 2\">\r\n        <button [id]=\"datePicker.uniqueId + '-title'\"\r\n                type=\"button\" class=\"btn btn-default btn-sm\"\r\n                (click)=\"datePicker.toggleMode(0)\"\r\n                [disabled]=\"datePicker.datepickerMode === maxMode\"\r\n                [ngClass]=\"{disabled: datePicker.datepickerMode === maxMode}\" tabindex=\"-1\" style=\"width:100%;\">\r\n          <strong>{{ title }}</strong>\r\n        </button>\r\n      </th>\r\n      <th>\r\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-right float-right\"\r\n                (click)=\"datePicker.move(1)\" tabindex=\"-1\">›</button>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let rowz of rows\">\r\n      <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\" [attr.id]=\"dtz.uid\" [ngClass]=\"dtz.customClass\">\r\n        <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\r\n                [ngClass]=\"{'btn-link': isBs4 && !dtz.selected && !datePicker.isActive(dtz), 'btn-info': dtz.selected || (isBs4 && !dtz.selected && datePicker.isActive(dtz)), disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz)}\"\r\n                [disabled]=\"dtz.disabled\"\r\n                (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\">\r\n          <span [ngClass]=\"{'text-success': isBs4 && dtz.current, 'text-info': !isBs4 && dtz.current}\">{{ dtz.label }}</span>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n  `,\r\n  styles: [\r\n    `\r\n    :host .btn-info .text-success {\r\n      color: #fff !important;\r\n    }\r\n  `\r\n  ]\r\n})\r\nexport class MonthPickerComponent implements OnInit {\r\n  title: string;\r\n  rows = [];\r\n  datePicker: DatePickerInnerComponent;\r\n  maxMode: string;\r\n\r\n  constructor(datePicker: DatePickerInnerComponent) {\r\n    this.datePicker = datePicker;\r\n  }\r\n\r\n  get isBs4(): boolean {\r\n    return !isBs3();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    const self = this;\r\n\r\n    this.datePicker.stepMonth = { years: 1 };\r\n\r\n    this.datePicker.setRefreshViewHandler(function(): void {\r\n      const months = new Array(12);\r\n      const year: number = this.activeDate.getFullYear();\r\n      let date: Date;\r\n\r\n      for (let i = 0; i < 12; i++) {\r\n        date = new Date(year, i, 1);\r\n        date = this.fixTimeZone(date);\r\n        months[i] = this.createDateObject(date, this.formatMonth);\r\n        months[i].uid = this.uniqueId + '-' + i;\r\n      }\r\n\r\n      self.title = this.dateFilter(this.activeDate, this.formatMonthTitle);\r\n      self.rows = this.split(months, self.datePicker.monthColLimit);\r\n    }, 'month');\r\n\r\n    this.datePicker.setCompareHandler(function(\r\n      date1: Date,\r\n      date2: Date\r\n    ): number {\r\n      const d1 = new Date(date1.getFullYear(), date1.getMonth());\r\n      const d2 = new Date(date2.getFullYear(), date2.getMonth());\r\n      return d1.getTime() - d2.getTime();\r\n    }, 'month');\r\n\r\n    this.datePicker.refreshView();\r\n  }\r\n\r\n  // todo: key events implementation\r\n}\r\n"]}