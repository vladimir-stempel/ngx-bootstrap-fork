{"version":3,"file":"bs-datepicker-inline.component.js","sourceRoot":"","sources":["../../../../src/datepicker/bs-datepicker-inline.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACS,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,EACrC,MAAM,EAAE,SAAS,EAAiB,gBAAgB,EACtE,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAmB,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AAIzF,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5D,OAAO,EAAE,wBAAwB,EAAE,MAAM,+BAA+B,CAAC;AACzE,OAAO,EAAE,oCAAoC,EAAE,MAAM,sDAAsD,CAAC;;;;AAO5G,MAAM,OAAO,2BAA2B;IAkEtC,YACS,OAAiC,EAChC,WAAuB,EAC/B,SAAoB,EACpB,iBAAmC,EACnC,GAA2B;QAJpB,YAAO,GAAP,OAAO,CAA0B;QAChC,gBAAW,GAAX,WAAW,CAAY;QAZjC;;WAEG;QACO,kBAAa,GAAuB,IAAI,YAAY,EAAE,CAAC;QAEvD,UAAK,GAAmB,EAAE,CAAC;QAYnC,qCAAqC;QACrC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CACjC,WAAW,EACX,iBAAiB,EACjB,SAAS,CACV,CAAC;IACJ,CAAC;IA9ED;;OAEG;IACH,IACI,OAAO,CAAC,KAAW;QACrB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC3B,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;YAC3B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YAEvB,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;YAC7C,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;YACnC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;YACnC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IA4DD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,uDAAuD;QACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,KAAW,EAAE,EAAE;YAC3C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7C,CAAC,CAAC,CACH,CAAC;QAEF,8CAA8C;QAC9C,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAW,EAAE,EAAE;YACjE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;YACzD,OAAO;SACR;QAED,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACpD,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACpD,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,OAAO,CAAC,aAAa,EAAE;YACzB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAChE,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC9D,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;SACpD;QAED,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1D,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACxE,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,OAAO,CAAC,gBAAgB,EAAE;YAC5B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACtE,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;IACH,CAAC;IAED;;OAEG;IACH,SAAS;QACP,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE;YAC5D,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO;YAC/D,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO;YAC/D,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAC7F,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB;YAC1F,aAAa,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa;YACjF,YAAY,EAAE,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY;SAC/E,CAAC,CAAC;QAGH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW;aACnC,OAAO,CAAC,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aAC9D,MAAM,CAAC,oCAAoC,CAAC;aAC5C,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC;aACpB,IAAI,EAAE,CAAC;IACZ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;;sGA1KU,2BAA2B;gEAA3B,2BAA2B;uFAA3B,2BAA2B;cAJvC,SAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,oBAAoB;aAC/B;gMAOK,OAAO;kBADV,KAAK;YAsBG,QAAQ;kBAAhB,KAAK;YAIG,UAAU;kBAAlB,KAAK;YAIG,OAAO;kBAAf,KAAK;YAIG,OAAO;kBAAf,KAAK;YAIG,iBAAiB;kBAAzB,KAAK;YAIG,gBAAgB;kBAAxB,KAAK;YAIG,YAAY;kBAApB,KAAK;YAIG,aAAa;kBAArB,KAAK;YAII,aAAa;kBAAtB,MAAM","sourcesContent":["import {\r\n  ComponentRef, Directive, ElementRef, EventEmitter, Input, OnChanges,\r\n  OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BsDatepickerConfig } from './bs-datepicker.config';\r\nimport { BsDatepickerInlineConfig } from './bs-datepicker-inline.config';\r\nimport { BsDatepickerInlineContainerComponent } from './themes/bs/bs-datepicker-inline-container.component';\r\nimport { DatepickerDateCustomClasses, DatepickerDateTooltipText } from './models';\r\n\r\n@Directive({\r\n  selector: 'bs-datepicker-inline',\r\n  exportAs: 'bsDatepickerInline'\r\n})\r\nexport class BsDatepickerInlineDirective implements OnInit, OnDestroy, OnChanges {\r\n  _bsValue: Date;\r\n  /**\r\n   * Initial value of datepicker\r\n   */\r\n  @Input()\r\n  set bsValue(value: Date) {\r\n    if (this._bsValue === value) {\r\n      return;\r\n    }\r\n\r\n    if (!this._bsValue && value) {\r\n      const now = new Date();\r\n\r\n      value.setMilliseconds(now.getMilliseconds());\r\n      value.setSeconds(now.getSeconds());\r\n      value.setMinutes(now.getMinutes());\r\n      value.setHours(now.getHours());\r\n    }\r\n\r\n    this._bsValue = value;\r\n    this.bsValueChange.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Config object for datepicker\r\n   */\r\n  @Input() bsConfig: Partial<BsDatepickerInlineConfig>;\r\n  /**\r\n   * Indicates whether datepicker is enabled or not\r\n   */\r\n  @Input() isDisabled: boolean;\r\n  /**\r\n   * Minimum date which is available for selection\r\n   */\r\n  @Input() minDate: Date;\r\n  /**\r\n   * Maximum date which is available for selection\r\n   */\r\n  @Input() maxDate: Date;\r\n  /**\r\n   * Date custom classes\r\n   */\r\n  @Input() dateCustomClasses: DatepickerDateCustomClasses[];\r\n  /**\r\n   * Date tooltip text\r\n   */\r\n  @Input() dateTooltipTexts: DatepickerDateTooltipText[];\r\n  /**\r\n   * Disable specific dates\r\n   */\r\n  @Input() datesEnabled: Date[];\r\n  /**\r\n   * Enable specific dates\r\n   */\r\n  @Input() datesDisabled: Date[];\r\n  /**\r\n   * Emits when datepicker value has been changed\r\n   */\r\n  @Output() bsValueChange: EventEmitter<Date> = new EventEmitter();\r\n\r\n  protected _subs: Subscription[] = [];\r\n\r\n  private _datepicker: ComponentLoader<BsDatepickerInlineContainerComponent>;\r\n  private _datepickerRef: ComponentRef<BsDatepickerInlineContainerComponent>;\r\n\r\n  constructor(\r\n    public _config: BsDatepickerInlineConfig,\r\n    private _elementRef: ElementRef,\r\n    _renderer: Renderer2,\r\n    _viewContainerRef: ViewContainerRef,\r\n    cis: ComponentLoaderFactory\r\n  ) {\r\n    // todo: assign only subset of fields\r\n    Object.assign(this, this._config);\r\n    this._datepicker = cis.createLoader<BsDatepickerInlineContainerComponent>(\r\n      _elementRef,\r\n      _viewContainerRef,\r\n      _renderer\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setConfig();\r\n\r\n    // if date changes from external source (model -> view)\r\n    this._subs.push(\r\n      this.bsValueChange.subscribe((value: Date) => {\r\n        this._datepickerRef.instance.value = value;\r\n      })\r\n    );\r\n\r\n    // if date changes from picker (view -> model)\r\n    this._subs.push(\r\n      this._datepickerRef.instance.valueChange.subscribe((value: Date) => {\r\n        this.bsValue = value;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this._datepickerRef || !this._datepickerRef.instance) {\r\n      return;\r\n    }\r\n\r\n    if (changes.minDate) {\r\n      this._datepickerRef.instance.minDate = this.minDate;\r\n      this.setConfig();\r\n    }\r\n\r\n    if (changes.maxDate) {\r\n      this._datepickerRef.instance.maxDate = this.maxDate;\r\n      this.setConfig();\r\n    }\r\n\r\n    if (changes.datesDisabled) {\r\n      this._datepickerRef.instance.datesDisabled = this.datesDisabled;\r\n      this.setConfig();\r\n    }\r\n\r\n    if (changes.datesEnabled) {\r\n      this._datepickerRef.instance.datesEnabled = this.datesEnabled;\r\n      this._datepickerRef.instance.value = this._bsValue;\r\n    }\r\n\r\n    if (changes.isDisabled) {\r\n      this._datepickerRef.instance.isDisabled = this.isDisabled;\r\n      this.setConfig();\r\n    }\r\n\r\n    if (changes.dateCustomClasses) {\r\n      this._datepickerRef.instance.dateCustomClasses = this.dateCustomClasses;\r\n      this.setConfig();\r\n    }\r\n\r\n    if (changes.dateTooltipTexts) {\r\n      this._datepickerRef.instance.dateTooltipTexts = this.dateTooltipTexts;\r\n      this.setConfig();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set config for datepicker\r\n   */\r\n  setConfig(): void {\r\n    if (this._datepicker) {\r\n      this._datepicker.hide();\r\n    }\r\n\r\n    this._config = Object.assign({}, this._config, this.bsConfig, {\r\n      value: this._bsValue,\r\n      isDisabled: this.isDisabled,\r\n      minDate: this.minDate || this.bsConfig && this.bsConfig.minDate,\r\n      maxDate: this.maxDate || this.bsConfig && this.bsConfig.maxDate,\r\n      dateCustomClasses: this.dateCustomClasses || this.bsConfig && this.bsConfig.dateCustomClasses,\r\n      dateTooltipTexts: this.dateTooltipTexts || this.bsConfig && this.bsConfig.dateTooltipTexts,\r\n      datesDisabled: this.datesDisabled || this.bsConfig && this.bsConfig.datesDisabled,\r\n      datesEnabled: this.datesEnabled || this.bsConfig && this.bsConfig.datesEnabled\r\n    });\r\n\r\n\r\n    this._datepickerRef = this._datepicker\r\n      .provide({provide: BsDatepickerConfig, useValue: this._config})\r\n      .attach(BsDatepickerInlineContainerComponent)\r\n      .to(this._elementRef)\r\n      .show();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._datepicker.dispose();\r\n  }\r\n}\r\n"]}