{"version":3,"file":"flag-months-calendar.js","sourceRoot":"","sources":["../../../../../src/datepicker/engine/flag-months-calendar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAK/D,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAa7E,MAAM,UAAU,kBAAkB,CAChC,aAAsC,EACtC,OAAiC;IAEjC,aAAa,CAAC,MAAM,CAAC,OAAO,CAC1B,CAAC,MAA+B,EAAE,QAAgB,EAAE,EAAE;QACpD,MAAM,CAAC,OAAO,CAAC,CAAC,KAA4B,EAAE,UAAkB,EAAE,EAAE;YAClE,IAAI,UAAmB,CAAC;YACxB,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;YAChE,MAAM,UAAU,GACd,OAAO,CAAC,UAAU;gBAClB,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YAEhE,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,aAAa,EAAE;gBAClD,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/D,IAAI,CAAC,UAAU,EAAE;oBACf,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChE;aACF;iBAAM;gBACL,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;aAC5D;YACD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC5C,SAAS;gBACT,UAAU;gBACV,UAAU;aACX,CAAC,CAAC;YACH,IACE,KAAK,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS;gBACtC,KAAK,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU;gBACxC,KAAK,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU,EACxC;gBACA,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;aACvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CACF,CAAC;IAEF,uCAAuC;IACvC,aAAa,CAAC,aAAa;QACzB,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,OAAO,CAAC,UAAU,KAAK,OAAO,CAAC,aAAa,CAAC;IACzE,aAAa,CAAC,cAAc;QAC1B,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,aAAa;YAC1C,OAAO,CAAC,UAAU,GAAG,CAAC,KAAK,OAAO,CAAC,aAAa,CAAC;IAEnD,aAAa,CAAC,gBAAgB,GAAG,cAAc,CAC7C,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EACxD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAChB,CAAC;IACF,aAAa,CAAC,iBAAiB,GAAG,cAAc,CAC9C,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EACvD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAChB,CAAC;IAEF,OAAO,aAAa,CAAC;AACvB,CAAC","sourcesContent":["import { isSameMonth, shiftDate } from 'ngx-bootstrap/chronos';\r\nimport {\r\n  MonthsCalendarViewModel,\r\n  CalendarCellViewModel\r\n} from '../models';\r\nimport { isMonthDisabled, isYearDisabled } from '../utils/bs-calendar-utils';\r\n\r\nexport interface FlagMonthCalendarOptions {\r\n  isDisabled: boolean;\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  hoveredMonth: Date;\r\n  selectedDate: Date;\r\n  selectedRange: Date[];\r\n  displayMonths: number;\r\n  monthIndex: number;\r\n}\r\n\r\nexport function flagMonthsCalendar(\r\n  monthCalendar: MonthsCalendarViewModel,\r\n  options: FlagMonthCalendarOptions\r\n): MonthsCalendarViewModel {\r\n  monthCalendar.months.forEach(\r\n    (months: CalendarCellViewModel[], rowIndex: number) => {\r\n      months.forEach((month: CalendarCellViewModel, monthIndex: number) => {\r\n        let isSelected: boolean;\r\n        const isHovered = isSameMonth(month.date, options.hoveredMonth);\r\n        const isDisabled =\r\n          options.isDisabled ||\r\n          isMonthDisabled(month.date, options.minDate, options.maxDate);\r\n\r\n        if (!options.selectedDate && options.selectedRange) {\r\n          isSelected = isSameMonth(month.date, options.selectedRange[0]);\r\n          if (!isSelected) {\r\n            isSelected = isSameMonth(month.date, options.selectedRange[1]);\r\n          }\r\n        } else {\r\n          isSelected = isSameMonth(month.date, options.selectedDate);\r\n        }\r\n        const newMonth = Object.assign(/*{},*/ month, {\r\n          isHovered,\r\n          isDisabled,\r\n          isSelected\r\n        });\r\n        if (\r\n          month.isHovered !== newMonth.isHovered ||\r\n          month.isDisabled !== newMonth.isDisabled ||\r\n          month.isSelected !== newMonth.isSelected\r\n        ) {\r\n          monthCalendar.months[rowIndex][monthIndex] = newMonth;\r\n        }\r\n      });\r\n    }\r\n  );\r\n\r\n  // todo: add check for linked calendars\r\n  monthCalendar.hideLeftArrow =\r\n    options.monthIndex > 0 && options.monthIndex !== options.displayMonths;\r\n  monthCalendar.hideRightArrow =\r\n    options.monthIndex < options.displayMonths &&\r\n    options.monthIndex + 1 !== options.displayMonths;\r\n\r\n  monthCalendar.disableLeftArrow = isYearDisabled(\r\n    shiftDate(monthCalendar.months[0][0].date, { year: -1 }),\r\n    options.minDate,\r\n    options.maxDate\r\n  );\r\n  monthCalendar.disableRightArrow = isYearDisabled(\r\n    shiftDate(monthCalendar.months[0][0].date, { year: 1 }),\r\n    options.minDate,\r\n    options.maxDate\r\n  );\r\n\r\n  return monthCalendar;\r\n}\r\n"]}