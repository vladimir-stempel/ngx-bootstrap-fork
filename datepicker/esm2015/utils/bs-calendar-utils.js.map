{"version":3,"file":"bs-calendar-utils.js","sourceRoot":"","sources":["../../../../../src/datepicker/utils/bs-calendar-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  getDay,\r\n  isFirstDayOfWeek,\r\n  isAfter,\r\n  isBefore,\r\n  shiftDate,\r\n  endOf,\r\n  startOf,\r\n  isArray,\r\n  isSame\r\n} from 'ngx-bootstrap/chronos';\r\nimport { BsDatepickerState } from '../reducer/bs-datepicker.state';\r\n\r\nexport function getStartingDayOfCalendar(date: Date,\r\n                                         options: { firstDayOfWeek?: number }): Date {\r\n  if (isFirstDayOfWeek(date, options.firstDayOfWeek)) {\r\n    return date;\r\n  }\r\n\r\n  const weekDay = getDay(date);\r\n  const offset = calculateDateOffset(weekDay, options.firstDayOfWeek);\r\n\r\n  return shiftDate(date, {day: -offset});\r\n}\r\n\r\nexport function calculateDateOffset(weekday: number, startingDayOffset: number): number {\r\n  if (startingDayOffset === 0) {\r\n    return weekday;\r\n  }\r\n\r\n  const offset = weekday - startingDayOffset % 7;\r\n\r\n  return offset < 0 ? offset + 7 : offset;\r\n}\r\n\r\nexport function isMonthDisabled(date: Date, min: Date, max: Date): boolean {\r\n  const minBound = min && isBefore(endOf(date, 'month'), min, 'day');\r\n  const maxBound = max && isAfter(startOf(date, 'month'), max, 'day');\r\n\r\n  return minBound || maxBound;\r\n}\r\n\r\nexport function isYearDisabled(date: Date, min: Date, max: Date): boolean {\r\n  const minBound = min && isBefore(endOf(date, 'year'), min, 'day');\r\n  const maxBound = max && isAfter(startOf(date, 'year'), max, 'day');\r\n\r\n  return minBound || maxBound;\r\n}\r\n\r\nexport function isDisabledDate(date: Date, datesDisabled: Date[]): boolean {\r\n  if (!datesDisabled  || !isArray(datesDisabled) || !datesDisabled.length) {\r\n    return false;\r\n  }\r\n\r\n  return datesDisabled.some((dateDisabled: Date) => isSame(date, dateDisabled, 'date'));\r\n}\r\n\r\nexport function isEnabledDate(date: Date, datesEnabled: Date[]): boolean {\r\n  if (!datesEnabled || !isArray(datesEnabled) || !datesEnabled.length) {\r\n    return false;\r\n  }\r\n\r\n  return !datesEnabled.some((enabledDate: Date) => isSame(date, enabledDate, 'date'));\r\n}\r\n\r\nexport function getYearsCalendarInitialDate(state: BsDatepickerState, calendarIndex = 0): Date {\r\n  const model = state && state.yearsCalendarModel && state.yearsCalendarModel[calendarIndex];\r\n\r\n  return model && model.years && model.years[0] && model.years[0][0] && model.years[0][0].date;\r\n}\r\n"]}