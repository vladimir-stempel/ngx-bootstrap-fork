{"version":3,"file":"datepicker.component.js","sourceRoot":"","sources":["../../../../src/datepicker/datepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  Output,\r\n  Provider,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\r\nimport { DatepickerConfig } from './datepicker.config';\r\n\r\nexport const DATEPICKER_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DatePickerComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'datepicker',\r\n  template: `\r\n    <datepicker-inner [activeDate]=\"activeDate\"\r\n                      (update)=\"onUpdate($event)\"\r\n                      [locale]=\"config.locale\"\r\n                      [datepickerMode]=\"datepickerMode\"\r\n                      [initDate]=\"initDate\"\r\n                      [minDate]=\"minDate\"\r\n                      [maxDate]=\"maxDate\"\r\n                      [minMode]=\"minMode\"\r\n                      [maxMode]=\"maxMode\"\r\n                      [showWeeks]=\"showWeeks\"\r\n                      [formatDay]=\"formatDay\"\r\n                      [formatMonth]=\"formatMonth\"\r\n                      [formatYear]=\"formatYear\"\r\n                      [formatDayHeader]=\"formatDayHeader\"\r\n                      [formatDayTitle]=\"formatDayTitle\"\r\n                      [formatMonthTitle]=\"formatMonthTitle\"\r\n                      [startingDay]=\"startingDay\"\r\n                      [yearRange]=\"yearRange\"\r\n                      [customClass]=\"customClass\"\r\n                      [dateDisabled]=\"dateDisabled\"\r\n                      [dayDisabled]=\"dayDisabled\"\r\n                      [onlyCurrentMonth]=\"onlyCurrentMonth\"\r\n                      [shortcutPropagation]=\"shortcutPropagation\"\r\n                      [monthColLimit]=\"monthColLimit\"\r\n                      [yearColLimit]=\"yearColLimit\"\r\n                      (selectionDone)=\"onSelectionDone($event)\"\r\n                      (activeDateChange)=\"onActiveDateChange($event)\">\r\n      <daypicker tabindex=\"0\"></daypicker>\r\n      <monthpicker tabindex=\"0\"></monthpicker>\r\n      <yearpicker tabindex=\"0\"></yearpicker>\r\n    </datepicker-inner>\r\n    `,\r\n  providers: [DATEPICKER_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class DatePickerComponent implements ControlValueAccessor {\r\n  /** sets datepicker mode, supports: `day`, `month`, `year` */\r\n  @Input() datepickerMode = 'day';\r\n  /** default date to show if `ng-model` value is not specified */\r\n  @Input() initDate: Date;\r\n  /**  oldest selectable date */\r\n  @Input() minDate: Date;\r\n  /** latest selectable date */\r\n  @Input() maxDate: Date;\r\n  /** set lower datepicker mode, supports: `day`, `month`, `year` */\r\n  @Input() minMode: string;\r\n  /** sets upper datepicker mode, supports: `day`, `month`, `year` */\r\n  @Input() maxMode: string;\r\n  /** if false week numbers will be hidden */\r\n  @Input() showWeeks = true;\r\n  /** format of day in month */\r\n  @Input() formatDay: string;\r\n  /** format of month in year */\r\n  @Input() formatMonth: string;\r\n  /** format of year in year range */\r\n  @Input() formatYear: string;\r\n  /** format of day in week header */\r\n  @Input() formatDayHeader: string;\r\n  /** format of title when selecting day */\r\n  @Input() formatDayTitle: string;\r\n  /** format of title when selecting month */\r\n  @Input() formatMonthTitle: string;\r\n  /** starting day of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\r\n  @Input() startingDay: number;\r\n  /** number of years displayed in year selection */\r\n  @Input() yearRange: number;\r\n  /** if true only dates from the currently displayed month will be shown */\r\n  @Input() onlyCurrentMonth: boolean;\r\n  /** if true shortcut`s event propagation will be disabled */\r\n  @Input() shortcutPropagation: boolean;\r\n  /** number of months displayed in a single row of month picker */\r\n  @Input() monthColLimit: number;\r\n  /** number of years displayed in a single row of year picker */\r\n  @Input() yearColLimit: number;\r\n  /** array of custom css classes to be applied to targeted dates */\r\n  @Input() customClass: { date: Date; mode: string; clazz: string }[];\r\n  /** array of disabled dates */\r\n  @Input() dateDisabled: { date: Date; mode: string }[];\r\n  /** disabled days of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\r\n  @Input() dayDisabled: number[];\r\n\r\n  /** currently active date */\r\n  @Input()\r\n  get activeDate(): Date {\r\n    return this._activeDate || this._now;\r\n  }\r\n\r\n  set activeDate(value: Date) {\r\n    this._activeDate = value;\r\n  }\r\n\r\n  @Output()\r\n  selectionDone: EventEmitter<Date> = new EventEmitter<Date>(undefined);\r\n\r\n  /** callback to invoke when the activeDate is changed. */\r\n  @Output()\r\n  activeDateChange: EventEmitter<Date> = new EventEmitter<Date>(\r\n    undefined\r\n  );\r\n\r\n  @ViewChild(DatePickerInnerComponent, { static: true })\r\n  _datePicker: DatePickerInnerComponent;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  onChange: any = Function.prototype;\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  onTouched: any = Function.prototype;\r\n\r\n  config: DatepickerConfig;\r\n\r\n  protected _now: Date = new Date();\r\n  protected _activeDate: Date;\r\n\r\n  constructor(config: DatepickerConfig) {\r\n    this.config = config;\r\n    this.configureOptions();\r\n  }\r\n\r\n  configureOptions(): void {\r\n    Object.assign(this, this.config);\r\n  }\r\n\r\n  onUpdate(event: Date): void {\r\n    this.activeDate = event;\r\n    this.onChange(event);\r\n  }\r\n\r\n  onSelectionDone(event: Date): void {\r\n    this.selectionDone.emit(event);\r\n  }\r\n\r\n  onActiveDateChange(event: Date): void {\r\n    this.activeDateChange.emit(event);\r\n  }\r\n  // todo: support null value\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  writeValue(value: any): void {\r\n    if (this._datePicker.compare(value, this._activeDate) === 0) {\r\n      return;\r\n    }\r\n    if (value && value instanceof Date) {\r\n      this.activeDate = value;\r\n      this._datePicker.select(value, false);\r\n\r\n      return;\r\n    }\r\n\r\n    this.activeDate = value ? new Date(value) : void 0;\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n}\r\n"]}