{"version":3,"file":"bs-days-calendar-view.component.js","sourceRoot":"","sources":["../../../../../../src/datepicker/themes/bs/bs-days-calendar-view.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output\r\n} from '@angular/core';\r\n\r\nimport { isSameDay } from 'ngx-bootstrap/chronos';\r\n\r\nimport {\r\n  BsDatepickerViewMode,\r\n  BsNavigationDirection,\r\n  BsNavigationEvent,\r\n  CellHoverEvent, DatepickerDateTooltipText,\r\n  DatepickerRenderOptions,\r\n  DaysCalendarViewModel,\r\n  DayViewModel, WeekViewModel\r\n} from '../../models';\r\n\r\nimport { BsDatepickerConfig } from '../../bs-datepicker.config';\r\n\r\n@Component({\r\n  selector: 'bs-days-calendar-view',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <bs-calendar-layout>\r\n      <bs-datepicker-navigation-view\r\n        [calendar]=\"calendar\"\r\n        (onNavigate)=\"navigateTo($event)\"\r\n        (onViewMode)=\"changeViewMode($event)\"\r\n      ></bs-datepicker-navigation-view>\r\n\r\n      <!--days matrix-->\r\n      <table role=\"grid\" class=\"days weeks\">\r\n        <thead>\r\n        <tr>\r\n          <!--if show weeks-->\r\n          <th *ngIf=\"options.showWeekNumbers\"></th>\r\n          <th *ngFor=\"let weekday of calendar.weekdays; let i = index\"\r\n              aria-label=\"weekday\">{{ calendar.weekdays[i] }}\r\n          </th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let week of calendar.weeks; let i = index\">\r\n          <td class=\"week\" [class.active-week]=\"isWeekHovered\"  *ngIf=\"options.showWeekNumbers\">\r\n            <span *ngIf=\"isiOS\" (click)=\"selectWeek(week)\">{{ calendar.weekNumbers[i] }}</span>\r\n            <span *ngIf=\"!isiOS\"\r\n                (click)=\"selectWeek(week)\"\r\n                (mouseenter)=\"weekHoverHandler(week, true)\"\r\n                (mouseleave)=\"weekHoverHandler(week, false)\">{{ calendar.weekNumbers[i] }}</span>\r\n          </td>\r\n          <td *ngFor=\"let day of week.days\" role=\"gridcell\">\r\n\r\n            <!-- When we want to show tooltips for dates -->\r\n            <span *ngIf=\"!isiOS && isShowTooltip\" bsDatepickerDayDecorator\r\n                [day]=\"day\"\r\n                (click)=\"selectDay(day)\"\r\n                tooltip=\"{{day.tooltipText}}\"\r\n                (mouseenter)=\"hoverDay(day, true)\"\r\n                (mouseleave)=\"hoverDay(day, false)\">{{ day.label }} 3</span>\r\n            <!-- When tooltips for dates are disabled -->\r\n            <span *ngIf=\"!isiOS && !isShowTooltip\" bsDatepickerDayDecorator\r\n                  [day]=\"day\"\r\n                  (click)=\"selectDay(day)\"\r\n                  (mouseenter)=\"hoverDay(day, true)\"\r\n                  (mouseleave)=\"hoverDay(day, false)\">{{ day.label }} 2</span>\r\n\r\n            <!-- For mobile iOS view, tooltips are not needed -->\r\n            <span *ngIf=\"isiOS\" bsDatepickerDayDecorator\r\n                  [day]=\"day\"\r\n                  (click)=\"selectDay(day)\">{{ day.label }} 1</span>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n    </bs-calendar-layout>\r\n  `\r\n})\r\nexport class BsDaysCalendarViewComponent  {\r\n  @Input() calendar: DaysCalendarViewModel;\r\n  @Input() options: DatepickerRenderOptions;\r\n\r\n  @Output() onNavigate = new EventEmitter<BsNavigationEvent>();\r\n  @Output() onViewMode = new EventEmitter<BsDatepickerViewMode>();\r\n\r\n  @Output() onSelect = new EventEmitter<DayViewModel>();\r\n  @Output() onHover = new EventEmitter<CellHoverEvent>();\r\n  @Output() onHoverWeek = new EventEmitter<WeekViewModel>();\r\n\r\n  isWeekHovered: boolean;\r\n  isiOS: boolean;\r\n  isShowTooltip: boolean;\r\n\r\n  constructor(private _config: BsDatepickerConfig) {\r\n    this.isiOS = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n      (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1));\r\n    if (this._config.dateTooltipTexts && this._config.dateTooltipTexts.length > 0) {\r\n      this.isShowTooltip = true;\r\n    }\r\n  }\r\n\r\n  navigateTo(event: BsNavigationDirection): void {\r\n    const step = BsNavigationDirection.DOWN === event ? -1 : 1;\r\n    this.onNavigate.emit({ step: { month: step } });\r\n  }\r\n\r\n  changeViewMode(event: BsDatepickerViewMode): void {\r\n    this.onViewMode.emit(event);\r\n  }\r\n\r\n  selectDay(event: DayViewModel): void {\r\n    this.onSelect.emit(event);\r\n  }\r\n\r\n  selectWeek(week: WeekViewModel): void {\r\n    if (!this._config.selectWeek && !this._config.selectWeekDateRange) {\r\n      return;\r\n    }\r\n\r\n    if (week.days.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (this._config.selectWeek && week.days[0]\r\n        && !week.days[0].isDisabled\r\n        && this._config.selectFromOtherMonth) {\r\n\r\n        this.onSelect.emit(week.days[0]);\r\n\r\n        return;\r\n    }\r\n\r\n    const selectedDay = week.days.find((day: DayViewModel) => {\r\n      return this._config.selectFromOtherMonth\r\n        ? !day.isDisabled\r\n        : !day.isOtherMonth && !day.isDisabled;\r\n    });\r\n\r\n    this.onSelect.emit(selectedDay);\r\n\r\n    if (this._config.selectWeekDateRange) {\r\n      const days = week.days.slice(0);\r\n      const lastDayOfRange = days.reverse().find((day: DayViewModel) => {\r\n        return this._config.selectFromOtherMonth\r\n          ? !day.isDisabled\r\n          : !day.isOtherMonth && !day.isDisabled;\r\n      });\r\n\r\n      this.onSelect.emit(lastDayOfRange);\r\n    }\r\n  }\r\n\r\n  weekHoverHandler(cell: WeekViewModel, isHovered: boolean): void {\r\n    if (!this._config.selectWeek && !this._config.selectWeekDateRange) {\r\n      return;\r\n    }\r\n\r\n    const hasActiveDays = cell.days.find((day: DayViewModel) => {\r\n      return this._config.selectFromOtherMonth\r\n        ? !day.isDisabled\r\n        : !day.isOtherMonth && !day.isDisabled;\r\n    });\r\n\r\n    if (hasActiveDays) {\r\n      cell.isHovered = isHovered;\r\n      this.isWeekHovered = isHovered;\r\n      this.onHoverWeek.emit(cell);\r\n    }\r\n  }\r\n\r\n  hoverDay(cell: DayViewModel, isHovered: boolean): void {\r\n    if (this._config.selectFromOtherMonth && cell.isOtherMonth) {\r\n      cell.isOtherMonthHovered = isHovered;\r\n    }\r\n\r\n    if (this._config.dateTooltipTexts) {\r\n      cell.tooltipText = '';\r\n      this._config.dateTooltipTexts.forEach((dateData: DatepickerDateTooltipText) => {\r\n\r\n        if (isSameDay(dateData.date, cell.date)) {\r\n          cell.tooltipText = dateData.tooltipText;\r\n\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.onHover.emit({ cell, isHovered });\r\n  }\r\n}\r\n"]}