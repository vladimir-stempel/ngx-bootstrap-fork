{"version":3,"file":"bs-datepicker.actions.js","sourceRoot":"","sources":["../../../../../src/datepicker/reducer/bs-datepicker.actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAa3C,MAAM,OAAO,mBAAmB;IAuB9B,SAAS;QACP,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,MAAM,EAAE,CAAC;IAC9C,CAAC;IAED,IAAI;QACF,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,IAAI,EAAE,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,IAAU;QACf,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,MAAM;YAChC,OAAO,EAAE,IAAI;SACd,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,KAA2B;QACxC,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,eAAe;YACzC,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAA4B;QACrC,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,WAAW;YACrC,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAc;QACzB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,eAAe;YACzC,OAAO,EAAE,IAAI;SACd,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,OAAgC;QACzC,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,WAAW;YACrC,OAAO,EAAE,OAAO;SACjB,CAAC;IACJ,CAAC;IAED,oBAAoB;IACpB,WAAW,CAAC,KAAa;QACvB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,YAAY;YACtC,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,KAAqB;QAC5B,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,KAAK;YAC/B,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;SAClD,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,IAAU;QAChB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,YAAY;YACtC,OAAO,EAAE,IAAI;SACd,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,IAAU;QAChB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,YAAY;YACtC,OAAO,EAAE,IAAI;SACd,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAc;QACzB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,gBAAgB;YAC1C,OAAO,EAAE,IAAI;SACd,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,iBAAiB;YAC3C,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,gBAAgB;YAC1C,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAAc;QACvB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,eAAe;YACzC,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,oBAAoB,CAAC,KAAoC;QACvD,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,uBAAuB;YACjD,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,KAAkC;QACpD,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,sBAAsB;YAChD,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,OAAO;YACL,IAAI,EAAE,mBAAmB,CAAC,UAAU;YACpC,OAAO,EAAE,MAAM;SAChB,CAAC;IACJ,CAAC;;AAjJe,6BAAS,GAAG,qCAAqC,CAAC;AAClD,0BAAM,GAAG,uCAAuC,CAAC;AACjD,wBAAI,GAAG,wBAAwB,CAAC;AAChC,0BAAM,GAAG,0BAA0B,CAAC;AACpC,mCAAe,GAAG,8BAA8B,CAAC;AACjD,+BAAW,GAAG,+BAA+B,CAAC;AAC9C,+BAAW,GAAG,oCAAoC,CAAC;AACnD,yBAAK,GAAG,yBAAyB,CAAC;AAClC,mCAAe,GAAG,+BAA+B,CAAC;AAElD,gCAAY,GAAG,2BAA2B,CAAC;AAC3C,gCAAY,GAAG,2BAA2B,CAAC;AAC3C,oCAAgB,GAAG,gCAAgC,CAAC;AACpD,qCAAiB,GAAG,iCAAiC,CAAC;AACtD,oCAAgB,GAAG,gCAAgC,CAAC;AACpD,mCAAe,GAAG,8BAA8B,CAAC;AACjD,2CAAuB,GAAG,sCAAsC,CAAC;AACjE,0CAAsB,GAAG,qCAAqC,CAAC;AAC/D,8BAAU,GAAG,oCAAoC,CAAC;AAElD,gCAAY,GAAG,sCAAsC,CAAC;sFArB3D,mBAAmB;2DAAnB,mBAAmB,WAAnB,mBAAmB;uFAAnB,mBAAmB;cAD/B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { TimeUnit } from 'ngx-bootstrap/chronos';\r\nimport { Action } from 'ngx-bootstrap/mini-ngrx';\r\nimport {\r\n  BsDatepickerViewMode,\r\n  BsViewNavigationEvent,\r\n  CellHoverEvent,\r\n  DatepickerRenderOptions,\r\n  DatepickerDateCustomClasses,\r\n  DatepickerDateTooltipText\r\n} from '../models';\r\n\r\n@Injectable()\r\nexport class BsDatepickerActions {\r\n  static readonly CALCULATE = '[datepicker] calculate dates matrix';\r\n  static readonly FORMAT = '[datepicker] format datepicker values';\r\n  static readonly FLAG = '[datepicker] set flags';\r\n  static readonly SELECT = '[datepicker] select date';\r\n  static readonly NAVIGATE_OFFSET = '[datepicker] shift view date';\r\n  static readonly NAVIGATE_TO = '[datepicker] change view date';\r\n  static readonly SET_OPTIONS = '[datepicker] update render options';\r\n  static readonly HOVER = '[datepicker] hover date';\r\n  static readonly CHANGE_VIEWMODE = '[datepicker] switch view mode';\r\n\r\n  static readonly SET_MIN_DATE = '[datepicker] set min date';\r\n  static readonly SET_MAX_DATE = '[datepicker] set max date';\r\n  static readonly SET_DAYSDISABLED = '[datepicker] set days disabled';\r\n  static readonly SET_DATESDISABLED = '[datepicker] set dates disabled';\r\n  static readonly SET_DATESENABLED = '[datepicker] set dates enabled';\r\n  static readonly SET_IS_DISABLED = '[datepicker] set is disabled';\r\n  static readonly SET_DATE_CUSTOM_CLASSES = '[datepicker] set date custom classes';\r\n  static readonly SET_DATE_TOOLTIP_TEXTS = '[datepicker] set date tooltip texts';\r\n  static readonly SET_LOCALE = '[datepicker] set datepicker locale';\r\n\r\n  static readonly SELECT_RANGE = '[daterangepicker] select dates range';\r\n\r\n  calculate(): Action {\r\n    return { type: BsDatepickerActions.CALCULATE };\r\n  }\r\n\r\n  format(): Action {\r\n    return { type: BsDatepickerActions.FORMAT };\r\n  }\r\n\r\n  flag(): Action {\r\n    return { type: BsDatepickerActions.FLAG };\r\n  }\r\n\r\n  select(date: Date): Action {\r\n    return {\r\n      type: BsDatepickerActions.SELECT,\r\n      payload: date\r\n    };\r\n  }\r\n\r\n  changeViewMode(event: BsDatepickerViewMode): Action {\r\n    return {\r\n      type: BsDatepickerActions.CHANGE_VIEWMODE,\r\n      payload: event\r\n    };\r\n  }\r\n\r\n  navigateTo(event: BsViewNavigationEvent): Action {\r\n    return {\r\n      type: BsDatepickerActions.NAVIGATE_TO,\r\n      payload: event\r\n    };\r\n  }\r\n\r\n  navigateStep(step: TimeUnit): Action {\r\n    return {\r\n      type: BsDatepickerActions.NAVIGATE_OFFSET,\r\n      payload: step\r\n    };\r\n  }\r\n\r\n  setOptions(options: DatepickerRenderOptions): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_OPTIONS,\r\n      payload: options\r\n    };\r\n  }\r\n\r\n  // date range picker\r\n  selectRange(value: Date[]): Action {\r\n    return {\r\n      type: BsDatepickerActions.SELECT_RANGE,\r\n      payload: value\r\n    };\r\n  }\r\n\r\n  hoverDay(event: CellHoverEvent): Action {\r\n    return {\r\n      type: BsDatepickerActions.HOVER,\r\n      payload: event.isHovered ? event.cell.date : null\r\n    };\r\n  }\r\n\r\n  minDate(date: Date): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_MIN_DATE,\r\n      payload: date\r\n    };\r\n  }\r\n\r\n  maxDate(date: Date): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_MAX_DATE,\r\n      payload: date\r\n    };\r\n  }\r\n\r\n  daysDisabled(days: number[]): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_DAYSDISABLED,\r\n      payload: days\r\n    };\r\n  }\r\n\r\n  datesDisabled(dates: Date[]): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_DATESDISABLED,\r\n      payload: dates\r\n    };\r\n  }\r\n\r\n  datesEnabled(dates: Date[]): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_DATESENABLED,\r\n      payload: dates\r\n    };\r\n  }\r\n\r\n  isDisabled(value: boolean): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_IS_DISABLED,\r\n      payload: value\r\n    };\r\n  }\r\n\r\n  setDateCustomClasses(value: DatepickerDateCustomClasses[]): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_DATE_CUSTOM_CLASSES,\r\n      payload: value\r\n    };\r\n  }\r\n\r\n  setDateTooltipTexts(value: DatepickerDateTooltipText[]): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_DATE_TOOLTIP_TEXTS,\r\n      payload: value\r\n    };\r\n  }\r\n\r\n  setLocale(locale: string): Action {\r\n    return {\r\n      type: BsDatepickerActions.SET_LOCALE,\r\n      payload: locale\r\n    };\r\n  }\r\n}\r\n"]}