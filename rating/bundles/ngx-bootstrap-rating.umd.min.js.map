{"version":3,"sources":["../../../../src/rating/rating.config.ts","../../../../src/rating/rating.component.html","../../../../src/rating/rating.component.ts","../../../../src/rating/rating.module.ts"],"names":["this","ariaLabel","i0.ɵɵtext","i0.ɵɵtextInterpolate","RatingConfig","factory","ɵfac","providedIn","Injectable","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵlistener","i0","ɵɵrestoreView","_r9_1","index_r6","ctx","index","ɵɵnextContext","rate","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵstyleProp","i0.ɵɵclassProp","i0.ɵɵproperty","ɵɵpureFunction2","_c0","ctx_r2","value","RATING_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","RatingComponent","multi","changeDetection","config","max","onHover","EventEmitter","onLeave","onChange","Function","prototype","onTouched","Object","assign","onKeydown","event","indexOf","which","preventDefault","stopPropagation","sign","ngOnInit","titles","length","range","buildTemplateObjects","writeValue","Math","round","preValue","markForCheck","enter","readonly","emit","reset","registerOnChange","fn","registerOnTouched","result","i","push","title","ɵɵdirectiveInject","ChangeDetectorRef","selectors","hostBindings","rf","$event","decls","vars","consts","template","i0.ɵɵattribute","Component","selector","templateUrl","providers","ChangeDetectionStrategy","OnPush","Input","customTemplate","Output","HostListener","RatingModule","forRoot","ngModule","imports","CommonModule","declarations","exports","NgModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/** Default values provider for rating */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RatingConfig {\r\n  /** aria label for rating */\r\n  ariaLabel = 'rating';\r\n}\r\n","<span (mouseleave)=\"reset()\" (keydown)=\"onKeydown($event)\" tabindex=\"0\"\r\n      role=\"slider\" aria-valuemin=\"0\"\r\n      [attr.aria-label]=\"ariaLabel\"\r\n      [attr.aria-valuemax]=\"range.length\"\r\n      [attr.aria-valuenow]=\"value\">\r\n  <ng-template #star let-value=\"value\" let-index=\"index\">{{ index < value ? '&#9733;' : '&#9734;' }}</ng-template>\r\n  <ng-template ngFor let-r [ngForOf]=\"range\" let-index=\"index\">\r\n    <span class=\"sr-only\">({{ index < value ? '*' : ' ' }})</span>\r\n    <span class=\"bs-rating-star\"\r\n          (mouseenter)=\"enter(index + 1)\"\r\n          (click)=\"rate(index + 1)\"\r\n          [title]=\"r.title\"\r\n          [style.cursor]=\"readonly ? 'default' : 'pointer'\"\r\n          [class.active]=\"index < value\">\r\n      <ng-template [ngTemplateOutlet]=\"customTemplate || star\"\r\n                   [ngTemplateOutletContext]=\"{index: index, value: value}\">\r\n      </ng-template>\r\n    </span>\r\n  </ng-template>\r\n</span>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  forwardRef, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Provider\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RatingResults } from './models';\r\nimport { RatingConfig } from './rating.config';\r\n\r\nexport const RATING_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => RatingComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'rating',\r\n  templateUrl: './rating.component.html',\r\n  providers: [RATING_CONTROL_VALUE_ACCESSOR],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RatingComponent implements ControlValueAccessor, OnInit {\r\n  /** number of icons */\r\n  @Input() max = 5;\r\n  /** if true will not react on any user events */\r\n  @Input() readonly: boolean;\r\n  /** array of icons titles, default: ([\"one\", \"two\", \"three\", \"four\", \"five\"]) */\r\n  @Input() titles: string[];\r\n  /** custom template for icons */\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  @Input() customTemplate: TemplateRef<any>;\r\n  /** fired when icon selected, $event:number equals to selected rating */\r\n  @Output() onHover: EventEmitter<number> = new EventEmitter();\r\n  /** fired when icon selected, $event:number equals to previous rating value */\r\n  @Output() onLeave: EventEmitter<number> = new EventEmitter();\r\n\r\n  onChange = Function.prototype;\r\n  onTouched = Function.prototype;\r\n  /** aria label for rating */\r\n  ariaLabel: string;\r\n  range: RatingResults[];\r\n  value: number;\r\n  protected preValue: number;\r\n\r\n  constructor(private changeDetection: ChangeDetectorRef,\r\n              config: RatingConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydown(event: KeyboardEvent): void {\r\n    if ([37, 38, 39, 40].indexOf(event.which) === -1) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const sign = event.which === 38 || event.which === 39 ? 1 : -1;\r\n    this.rate(this.value + sign);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.max = typeof this.max !== 'undefined' ? this.max : 5;\r\n    this.titles =\r\n      typeof this.titles !== 'undefined' && this.titles.length > 0\r\n        ? this.titles\r\n        : [];\r\n    this.range = this.buildTemplateObjects(this.max);\r\n  }\r\n\r\n  // model -> view\r\n  writeValue(value: number): void {\r\n    if (value % 1 !== value) {\r\n      this.value = Math.round(value);\r\n      this.preValue = value;\r\n      this.changeDetection.markForCheck();\r\n\r\n      return;\r\n    }\r\n\r\n    this.preValue = value;\r\n    this.value = value;\r\n    this.changeDetection.markForCheck();\r\n  }\r\n\r\n  enter(value: number): void {\r\n    if (!this.readonly) {\r\n      this.value = value;\r\n      this.changeDetection.markForCheck();\r\n      this.onHover.emit(value);\r\n    }\r\n  }\r\n\r\n  reset(): void {\r\n    this.value = Math.round(this.preValue);\r\n    this.changeDetection.markForCheck();\r\n    this.onLeave.emit(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: number) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  rate(value: number): void {\r\n    if (!this.readonly && value >= 0 && value <= this.range.length) {\r\n      this.writeValue(value);\r\n      this.onChange(value);\r\n    }\r\n  }\r\n\r\n  protected buildTemplateObjects(max: number): RatingResults[] {\r\n    const result: RatingResults[] = [];\r\n    for (let i = 0; i < max; i++) {\r\n      result.push({\r\n          index: i,\r\n          title: this.titles[i] || i + 1\r\n        });\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { RatingComponent } from './rating.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [RatingComponent],\r\n  exports: [RatingComponent]\r\n})\r\nexport class RatingModule {\r\n  static forRoot(): ModuleWithProviders<RatingModule> {\r\n    return {\r\n      ngModule: RatingModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}