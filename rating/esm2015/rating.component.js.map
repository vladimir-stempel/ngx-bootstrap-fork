{"version":3,"file":"rating.component.js","sourceRoot":"","sources":["../../../../src/rating/rating.component.ts","../../../../src/rating/rating.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  forwardRef, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Provider\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RatingResults } from './models';\r\nimport { RatingConfig } from './rating.config';\r\n\r\nexport const RATING_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => RatingComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'rating',\r\n  templateUrl: './rating.component.html',\r\n  providers: [RATING_CONTROL_VALUE_ACCESSOR],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RatingComponent implements ControlValueAccessor, OnInit {\r\n  /** number of icons */\r\n  @Input() max = 5;\r\n  /** if true will not react on any user events */\r\n  @Input() readonly: boolean;\r\n  /** array of icons titles, default: ([\"one\", \"two\", \"three\", \"four\", \"five\"]) */\r\n  @Input() titles: string[];\r\n  /** custom template for icons */\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  @Input() customTemplate: TemplateRef<any>;\r\n  /** fired when icon selected, $event:number equals to selected rating */\r\n  @Output() onHover: EventEmitter<number> = new EventEmitter();\r\n  /** fired when icon selected, $event:number equals to previous rating value */\r\n  @Output() onLeave: EventEmitter<number> = new EventEmitter();\r\n\r\n  onChange = Function.prototype;\r\n  onTouched = Function.prototype;\r\n  /** aria label for rating */\r\n  ariaLabel: string;\r\n  range: RatingResults[];\r\n  value: number;\r\n  protected preValue: number;\r\n\r\n  constructor(private changeDetection: ChangeDetectorRef,\r\n              config: RatingConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydown(event: KeyboardEvent): void {\r\n    if ([37, 38, 39, 40].indexOf(event.which) === -1) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const sign = event.which === 38 || event.which === 39 ? 1 : -1;\r\n    this.rate(this.value + sign);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.max = typeof this.max !== 'undefined' ? this.max : 5;\r\n    this.titles =\r\n      typeof this.titles !== 'undefined' && this.titles.length > 0\r\n        ? this.titles\r\n        : [];\r\n    this.range = this.buildTemplateObjects(this.max);\r\n  }\r\n\r\n  // model -> view\r\n  writeValue(value: number): void {\r\n    if (value % 1 !== value) {\r\n      this.value = Math.round(value);\r\n      this.preValue = value;\r\n      this.changeDetection.markForCheck();\r\n\r\n      return;\r\n    }\r\n\r\n    this.preValue = value;\r\n    this.value = value;\r\n    this.changeDetection.markForCheck();\r\n  }\r\n\r\n  enter(value: number): void {\r\n    if (!this.readonly) {\r\n      this.value = value;\r\n      this.changeDetection.markForCheck();\r\n      this.onHover.emit(value);\r\n    }\r\n  }\r\n\r\n  reset(): void {\r\n    this.value = Math.round(this.preValue);\r\n    this.changeDetection.markForCheck();\r\n    this.onLeave.emit(this.value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: number) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  rate(value: number): void {\r\n    if (!this.readonly && value >= 0 && value <= this.range.length) {\r\n      this.writeValue(value);\r\n      this.onChange(value);\r\n    }\r\n  }\r\n\r\n  protected buildTemplateObjects(max: number): RatingResults[] {\r\n    const result: RatingResults[] = [];\r\n    for (let i = 0; i < max; i++) {\r\n      result.push({\r\n          index: i,\r\n          title: this.titles[i] || i + 1\r\n        });\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","<span (mouseleave)=\"reset()\" (keydown)=\"onKeydown($event)\" tabindex=\"0\"\r\n      role=\"slider\" aria-valuemin=\"0\"\r\n      [attr.aria-label]=\"ariaLabel\"\r\n      [attr.aria-valuemax]=\"range.length\"\r\n      [attr.aria-valuenow]=\"value\">\r\n  <ng-template #star let-value=\"value\" let-index=\"index\">{{ index < value ? '&#9733;' : '&#9734;' }}</ng-template>\r\n  <ng-template ngFor let-r [ngForOf]=\"range\" let-index=\"index\">\r\n    <span class=\"sr-only\">({{ index < value ? '*' : ' ' }})</span>\r\n    <span class=\"bs-rating-star\"\r\n          (mouseenter)=\"enter(index + 1)\"\r\n          (click)=\"rate(index + 1)\"\r\n          [title]=\"r.title\"\r\n          [style.cursor]=\"readonly ? 'default' : 'pointer'\"\r\n          [class.active]=\"index < value\">\r\n      <ng-template [ngTemplateOutlet]=\"customTemplate || star\"\r\n                   [ngTemplateOutletContext]=\"{index: index, value: value}\">\r\n      </ng-template>\r\n    </span>\r\n  </ng-template>\r\n</span>\r\n"]}