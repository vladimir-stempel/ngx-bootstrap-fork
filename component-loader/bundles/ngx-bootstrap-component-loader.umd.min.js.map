{"version":3,"sources":["../../../../src/component-loader/bs-component-ref.class.ts","../../../../src/component-loader/content-ref.class.ts","../../../../src/component-loader/component-loader.class.ts","../../../../src/component-loader/component-loader.factory.ts"],"names":["nodes","viewRef","componentRef","this","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","containerDefaultSelector","_listenOpts","_globalListener","Function","prototype","Object","defineProperty","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","target","provide","provider","push","show","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","initialState","injector","Injector","create","providers","parent","attachView","hostView","instance","assign","ElementRef","nativeElement","appendChild","location","document","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","id","_registerOutsideClick","hide","deletePositionElement","componentEl","parentNode","removeChild","destroy","remove","indexOf","_removeGlobalListener","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","_this","triggers","outsideClick","outsideEsc","registerHide","listenToTriggersV2","attachInline","vRef","template","_inlineViewRef","createEmbeddedView","target_1","setTimeout","registerOutsideClick","targets","registerEscClick","getInnerComponent","_zoneSubscription","subscribe","element","appendToBody","onStable","calcPosition","unsubscribe","ContentRef","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","createText","ComponentLoaderFactory","createLoader","i0","ɵɵinject","ComponentFactoryResolver","NgZone","i1","PositioningService","ApplicationRef","factory","ɵfac","providedIn","Injectable"],"mappings":"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","sourcesContent":["import { TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nexport class BsComponentRef<T> {\r\n  templateRef: TemplateRef<T>;\r\n  viewContainer: ViewContainerRef;\r\n}\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\n\r\nimport { ComponentRef, ViewRef } from '@angular/core';\r\n\r\nexport class ContentRef {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  nodes: any[];\r\n  viewRef?: ViewRef;\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  componentRef?: ComponentRef<any>;\r\n\r\n  constructor(\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    nodes: any[],\r\n    viewRef?: ViewRef,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    componentRef?: ComponentRef<any>\r\n  ) {\r\n    this.nodes = nodes;\r\n    this.viewRef = viewRef;\r\n    this.componentRef = componentRef;\r\n  }\r\n}\r\n","// todo: add delay support\r\n// todo: merge events onShow, onShown, etc...\r\n// todo: add global positioning configuration?\r\nimport {\r\n  ApplicationRef,\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Injector,\r\n  NgZone,\r\n  Renderer2,\r\n  StaticProvider,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { PositioningOptions, PositioningService } from 'ngx-bootstrap/positioning';\r\n\r\nimport {\r\n  listenToTriggersV2,\r\n  registerEscClick,\r\n  registerOutsideClick\r\n} from 'ngx-bootstrap/utils';\r\n\r\nimport { ContentRef } from './content-ref.class';\r\nimport { ListenOptions } from './listen-options.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport class ComponentLoader<T> {\r\n  onBeforeShow: EventEmitter<void> = new EventEmitter();\r\n  onShown = new EventEmitter();\r\n  onBeforeHide = new EventEmitter();\r\n  onHidden = new EventEmitter();\r\n\r\n  instance: T;\r\n  _componentRef: ComponentRef<T>;\r\n  _inlineViewRef: EmbeddedViewRef<T>;\r\n\r\n  private _providers: StaticProvider[] = [];\r\n  private _componentFactory: ComponentFactory<T>;\r\n  private _zoneSubscription: Subscription;\r\n  private _contentRef: ContentRef;\r\n  private _innerComponent: ComponentRef<T>;\r\n\r\n  private _unregisterListenersFn: () => void;\r\n\r\n  get isShown(): boolean {\r\n    if (this._isHiding) {\r\n      return false;\r\n    }\r\n\r\n    return !!this._componentRef;\r\n  }\r\n\r\n  private _isHiding = false;\r\n\r\n  /**\r\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  private attachment: string;\r\n\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  private container: string | ElementRef | any;\r\n\r\n  /**\r\n   * A selector used if container element was not found\r\n   */\r\n  private containerDefaultSelector = 'body';\r\n\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  private triggers: string;\r\n\r\n  private _listenOpts: ListenOptions = {};\r\n  private _globalListener = Function.prototype;\r\n\r\n  /**\r\n   * Do not use this directly, it should be instanced via\r\n   * `ComponentLoadFactory.attach`\r\n   * @internal\r\n   */\r\n  public constructor(\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _renderer: Renderer2,\r\n    private _elementRef: ElementRef,\r\n    private _injector: Injector,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _ngZone: NgZone,\r\n    private _applicationRef: ApplicationRef,\r\n    private _posService: PositioningService\r\n  ) { }\r\n\r\n  attach(compType: Type<T>): ComponentLoader<T> {\r\n    this._componentFactory = this._componentFactoryResolver\r\n      .resolveComponentFactory<T>(compType);\r\n\r\n    return this;\r\n  }\r\n\r\n  // todo: add behaviour: to target element, `body`, custom element\r\n  to(container?: string | ElementRef): ComponentLoader<T> {\r\n    this.container = container || this.container;\r\n\r\n    return this;\r\n  }\r\n\r\n  position(opts?: PositioningOptions): ComponentLoader<T> {\r\n    this.attachment = opts.attachment || this.attachment;\r\n        this._elementRef = (opts.target as ElementRef) || this._elementRef;\r\n\r\n    return this;\r\n  }\r\n\r\n  provide(provider: StaticProvider): ComponentLoader<T> {\r\n    this._providers.push(provider);\r\n\r\n    return this;\r\n  }\r\n\r\n  // todo: appendChild to element or document.querySelector(this.container)\r\n\r\n  show(opts: {\r\n    content?: string | TemplateRef<unknown>;\r\n    context?: unknown;\r\n    initialState?: unknown;\r\n    [key: string]: unknown;\r\n    id?: number|string;\r\n  } = {}\r\n  ): ComponentRef<T> {\r\n\r\n    this._subscribePositioning();\r\n    this._innerComponent = null;\r\n\r\n    if (!this._componentRef) {\r\n      this.onBeforeShow.emit();\r\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\r\n\r\n      const injector = Injector.create({\r\n        providers: this._providers,\r\n        parent: this._injector\r\n      });\r\n\r\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\r\n\r\n      this._applicationRef.attachView(this._componentRef.hostView);\r\n      // this._componentRef = this._viewContainerRef\r\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\r\n      this.instance = this._componentRef.instance;\r\n\r\n      Object.assign(this._componentRef.instance, opts);\r\n\r\n      if (this.container instanceof ElementRef) {\r\n        this.container.nativeElement.appendChild(\r\n          this._componentRef.location.nativeElement\r\n        );\r\n      }\r\n\r\n      if (typeof this.container === 'string' && typeof document !== 'undefined') {\r\n        const selectedElement = document.querySelector(this.container) ||\r\n                                document.querySelector(this.containerDefaultSelector);\r\n\r\n        selectedElement.appendChild(this._componentRef.location.nativeElement);\r\n      }\r\n\r\n      if (\r\n        !this.container &&\r\n        this._elementRef &&\r\n        this._elementRef.nativeElement.parentElement\r\n      ) {\r\n        this._elementRef.nativeElement.parentElement.appendChild(\r\n          this._componentRef.location.nativeElement\r\n        );\r\n      }\r\n\r\n      // we need to manually invoke change detection since events registered\r\n      // via\r\n      // Renderer::listen() are not picked up by change detection with the\r\n      // OnPush strategy\r\n      if (this._contentRef.componentRef) {\r\n        this._innerComponent = this._contentRef.componentRef.instance;\r\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\r\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\r\n      }\r\n      this._componentRef.changeDetectorRef.markForCheck();\r\n      this._componentRef.changeDetectorRef.detectChanges();\r\n\r\n\r\n      this.onShown.emit(opts.id ? { id: opts.id } : this._componentRef.instance);\r\n    }\r\n\r\n    this._registerOutsideClick();\r\n\r\n    return this._componentRef;\r\n  }\r\n\r\n  hide(id?: number|string): ComponentLoader<T> {\r\n    if (!this._componentRef) {\r\n      return this;\r\n    }\r\n\r\n    this._posService.deletePositionElement(this._componentRef.location);\r\n\r\n    this.onBeforeHide.emit(this._componentRef.instance);\r\n\r\n    const componentEl = this._componentRef.location.nativeElement;\r\n    componentEl.parentNode.removeChild(componentEl);\r\n    if (this._contentRef.componentRef) {\r\n      this._contentRef.componentRef.destroy();\r\n    }\r\n\r\n    if (this._viewContainerRef && this._contentRef.viewRef) {\r\n      this._viewContainerRef.remove(\r\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\r\n      );\r\n    }\r\n    if (this._contentRef.viewRef) {\r\n      this._contentRef.viewRef.destroy();\r\n    }\r\n\r\n    this._contentRef = null;\r\n    this._componentRef = null;\r\n    this._removeGlobalListener();\r\n\r\n    this.onHidden.emit(id ? { id } : null);\r\n\r\n    return this;\r\n  }\r\n\r\n  toggle(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n\r\n      return;\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n    }\r\n\r\n    this._unsubscribePositioning();\r\n\r\n    if (this._unregisterListenersFn) {\r\n      this._unregisterListenersFn();\r\n    }\r\n  }\r\n\r\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\r\n    this.triggers = listenOpts.triggers || this.triggers;\r\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\r\n    this._listenOpts.outsideEsc = listenOpts.outsideEsc;\r\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\r\n\r\n    const hide = (this._listenOpts.hide = () =>\r\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\r\n    const show = (this._listenOpts.show = (registerHide) => {\r\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\r\n      registerHide();\r\n    });\r\n\r\n    const toggle = (registerHide) => {\r\n      this.isShown ? hide() : show(registerHide);\r\n    };\r\n\r\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\r\n      target: listenOpts.target,\r\n      triggers: listenOpts.triggers,\r\n      show,\r\n      hide,\r\n      toggle\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  _removeGlobalListener() {\r\n    if (this._globalListener) {\r\n      this._globalListener();\r\n      this._globalListener = null;\r\n    }\r\n  }\r\n\r\n  attachInline(\r\n    vRef: ViewContainerRef,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    template: TemplateRef<any>\r\n  ): ComponentLoader<T> {\r\n    this._inlineViewRef = vRef.createEmbeddedView(template);\r\n\r\n    return this;\r\n  }\r\n\r\n  _registerOutsideClick(): void {\r\n    if (!this._componentRef || !this._componentRef.location) {\r\n      return;\r\n    }\r\n    // why: should run after first event bubble\r\n    if (this._listenOpts.outsideClick) {\r\n      const target = this._componentRef.location.nativeElement;\r\n      setTimeout(() => {\r\n        this._globalListener = registerOutsideClick(this._renderer, {\r\n          targets: [target, this._elementRef.nativeElement],\r\n          outsideClick: this._listenOpts.outsideClick,\r\n          hide: () => this._listenOpts.hide()\r\n        });\r\n      });\r\n    }\r\n    if (this._listenOpts.outsideEsc) {\r\n      const target = this._componentRef.location.nativeElement;\r\n      this._globalListener = registerEscClick(this._renderer, {\r\n        targets: [target, this._elementRef.nativeElement],\r\n        outsideEsc: this._listenOpts.outsideEsc,\r\n        hide: () => this._listenOpts.hide()\r\n      });\r\n    }\r\n  }\r\n\r\n  getInnerComponent(): ComponentRef<T> {\r\n    return this._innerComponent;\r\n  }\r\n\r\n  private _subscribePositioning(): void {\r\n    if (this._zoneSubscription || !this.attachment) {\r\n      return;\r\n    }\r\n\r\n    this.onShown.subscribe(() => {\r\n      this._posService.position({\r\n        element: this._componentRef.location,\r\n        target: this._elementRef,\r\n        attachment: this.attachment,\r\n        appendToBody: this.container === 'body'\r\n      });\r\n    });\r\n\r\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\r\n      if (!this._componentRef) {\r\n        return;\r\n      }\r\n\r\n      this._posService.calcPosition();\r\n    });\r\n  }\r\n\r\n  private _unsubscribePositioning(): void {\r\n    if (!this._zoneSubscription) {\r\n      return;\r\n    }\r\n\r\n    this._zoneSubscription.unsubscribe();\r\n    this._zoneSubscription = null;\r\n  }\r\n\r\n  private _getContentRef(\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    content: string | TemplateRef<any> | any,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    context?: any,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    initialState?: any\r\n  ): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    }\r\n\r\n    if (content instanceof TemplateRef) {\r\n      if (this._viewContainerRef) {\r\n        const _viewRef = this._viewContainerRef\r\n          .createEmbeddedView<TemplateRef<T>>(content, context);\r\n        _viewRef.markForCheck();\r\n\r\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\r\n      }\r\n      const viewRef = content.createEmbeddedView({});\r\n      this._applicationRef.attachView(viewRef);\r\n\r\n      return new ContentRef([viewRef.rootNodes], viewRef);\r\n    }\r\n\r\n    if (typeof content === 'function') {\r\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\r\n        content\r\n      );\r\n\r\n      const modalContentInjector = Injector.create({\r\n        providers: this._providers,\r\n        parent: this._injector\r\n      });\r\n\r\n      const componentRef = contentCmptFactory.create(modalContentInjector);\r\n      Object.assign(componentRef.instance, initialState);\r\n      this._applicationRef.attachView(componentRef.hostView);\r\n\r\n      return new ContentRef(\r\n        [[componentRef.location.nativeElement]],\r\n        componentRef.hostView,\r\n        componentRef\r\n      );\r\n    }\r\n\r\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\r\n  NgZone, Renderer2, ViewContainerRef\r\n} from '@angular/core';\r\nimport { ComponentLoader } from './component-loader.class';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ComponentLoaderFactory {\r\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\r\n              private _ngZone: NgZone,\r\n              private _injector: Injector,\r\n              private _posService: PositioningService,\r\n              private _applicationRef: ApplicationRef) {}\r\n\r\n  /**\r\n   *\r\n   * @param _elementRef\r\n   * @param _viewContainerRef\r\n   * @param _renderer\r\n   */\r\n  createLoader<T>(_elementRef: ElementRef,\r\n                  _viewContainerRef: ViewContainerRef,\r\n                  _renderer: Renderer2): ComponentLoader<T> {\r\n    return new ComponentLoader<T>(\r\n      _viewContainerRef,\r\n      _renderer,\r\n      _elementRef,\r\n      this._injector,\r\n      this._componentFactoryResolver,\r\n      this._ngZone,\r\n      this._applicationRef,\r\n      this._posService\r\n    );\r\n  }\r\n}\r\n"]}