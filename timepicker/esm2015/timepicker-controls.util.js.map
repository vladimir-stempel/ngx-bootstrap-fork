{"version":3,"file":"timepicker-controls.util.js","sourceRoot":"","sources":["../../../../src/timepicker/timepicker-controls.util.ts"],"names":[],"mappings":"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","sourcesContent":["import { changeTime } from './timepicker.utils';\r\nimport {\r\n  TimeChangeEvent,\r\n  TimepickerComponentState,\r\n  TimepickerControls\r\n} from './timepicker.models';\r\n\r\nexport function canChangeValue(\r\n  state: TimepickerComponentState,\r\n  event?: TimeChangeEvent\r\n): boolean {\r\n  if (state.readonlyInput || state.disabled) {\r\n    return false;\r\n  }\r\n\r\n  if (event) {\r\n    if (event.source === 'wheel' && !state.mousewheel) {\r\n      return false;\r\n    }\r\n\r\n    if (event.source === 'key' && !state.arrowkeys) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeHours(\r\n  event: TimeChangeEvent,\r\n  controls: TimepickerControls\r\n): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n\r\n  if (event.step > 0 && !controls.canIncrementHours) {\r\n    return false;\r\n  }\r\n\r\n  if (event.step < 0 && !controls.canDecrementHours) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeMinutes(\r\n  event: TimeChangeEvent,\r\n  controls: TimepickerControls\r\n): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n  if (event.step > 0 && !controls.canIncrementMinutes) {\r\n    return false;\r\n  }\r\n  if (event.step < 0 && !controls.canDecrementMinutes) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeSeconds(\r\n  event: TimeChangeEvent,\r\n  controls: TimepickerControls\r\n): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n  if (event.step > 0 && !controls.canIncrementSeconds) {\r\n    return false;\r\n  }\r\n  if (event.step < 0 && !controls.canDecrementSeconds) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function getControlsValue(\r\n  state: TimepickerComponentState\r\n): TimepickerComponentState {\r\n  const {\r\n    hourStep,\r\n    minuteStep,\r\n    secondsStep,\r\n    readonlyInput,\r\n    disabled,\r\n    mousewheel,\r\n    arrowkeys,\r\n    showSpinners,\r\n    showMeridian,\r\n    showSeconds,\r\n    meridians,\r\n    min,\r\n    max\r\n  } = state;\r\n\r\n  return {\r\n    hourStep,\r\n    minuteStep,\r\n    secondsStep,\r\n    readonlyInput,\r\n    disabled,\r\n    mousewheel,\r\n    arrowkeys,\r\n    showSpinners,\r\n    showMeridian,\r\n    showSeconds,\r\n    meridians,\r\n    min,\r\n    max\r\n  };\r\n}\r\n\r\nexport function timepickerControls(\r\n  value: Date,\r\n  state: TimepickerComponentState\r\n): TimepickerControls {\r\n  const hoursPerDay = 24;\r\n  const hoursPerDayHalf = 12;\r\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\r\n  const res: TimepickerControls = {\r\n    canIncrementHours: true,\r\n    canIncrementMinutes: true,\r\n    canIncrementSeconds: true,\r\n\r\n    canDecrementHours: true,\r\n    canDecrementMinutes: true,\r\n    canDecrementSeconds: true,\r\n\r\n    canToggleMeridian: true\r\n  };\r\n\r\n  if (!value) {\r\n    return res;\r\n  }\r\n\r\n  // compare dates\r\n  if (max) {\r\n    const _newHour = changeTime(value, { hour: hourStep });\r\n    res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\r\n\r\n    if (!res.canIncrementHours) {\r\n      const _newMinutes = changeTime(value, { minute: minuteStep });\r\n      res.canIncrementMinutes = showSeconds\r\n        ? max > _newMinutes\r\n        : max >= _newMinutes;\r\n    }\r\n\r\n    if (!res.canIncrementMinutes) {\r\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\r\n      res.canIncrementSeconds = max >= _newSeconds;\r\n    }\r\n\r\n    if (value.getHours() < hoursPerDayHalf) {\r\n      res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\r\n    }\r\n  }\r\n\r\n  if (min) {\r\n    const _newHour = changeTime(value, { hour: -hourStep });\r\n    res.canDecrementHours = min < _newHour;\r\n\r\n    if (!res.canDecrementHours) {\r\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\r\n      res.canDecrementMinutes = showSeconds\r\n        ? min < _newMinutes\r\n        : min <= _newMinutes;\r\n    }\r\n\r\n    if (!res.canDecrementMinutes) {\r\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\r\n      res.canDecrementSeconds = min <= _newSeconds;\r\n    }\r\n\r\n    if (value.getHours() >= hoursPerDayHalf) {\r\n      res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n"]}