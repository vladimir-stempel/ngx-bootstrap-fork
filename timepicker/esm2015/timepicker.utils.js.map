{"version":3,"file":"timepicker.utils.js","sourceRoot":"","sources":["../../../../src/timepicker/timepicker.utils.ts"],"names":[],"mappings":"AAEA,MAAM,GAAG,GAAG,EAAE,CAAC;AACf,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,MAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,MAAM,cAAc,GAAG,EAAE,CAAC;AAC1B,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAE5B,MAAM,UAAU,WAAW,CAAC,KAAqB;IAC/C,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IAED,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE;QACpD,OAAO,KAAK,CAAC;KACd;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAO,WAAW,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KACrC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,QAAkC,EAAE,OAAa;IAC5E,IAAI,QAAQ,CAAC,GAAG,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,EAAE;QAC1C,OAAO,KAAK,CAAC;KACd;IAED,IAAI,QAAQ,CAAC,GAAG,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,EAAE;QAC1C,OAAO,KAAK,CAAC;KACd;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,KAAsB;IAC7C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAO,KAAK,CAAC;KACd;IAED,OAAO,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,KAAsB;IAC7C,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACjC,CAAC;AAED,MAAM,UAAU,UAAU,CACxB,KAAsB,EACtB,IAAI,GAAG,KAAK;IAEZ,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7B,IACE,KAAK,CAAC,IAAI,CAAC;QACX,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC,EAC7C;QACA,OAAO,GAAG,CAAC;KACZ;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,KAAsB;IACjD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/B,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,cAAc,EAAE;QAC1D,OAAO,GAAG,CAAC;KACZ;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,KAAsB;IACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,gBAAgB,EAAE;QAC/D,OAAO,GAAG,CAAC;KACZ;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,KAAoB;IAC5C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,KAAW,EAAE,IAAU;IAChD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;KAC1D;IAED,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC5B,IAAI,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;IACjC,IAAI,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;IAEjC,IAAI,IAAI,CAAC,IAAI,EAAE;QACb,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnC;IAED,IAAI,IAAI,CAAC,MAAM,EAAE;QACf,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3C;IAED,IAAI,IAAI,CAAC,OAAO,EAAE;QAChB,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5C;IAED,OAAO,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AACnD,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,KAAW,EAAE,IAAU;IAC7C,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAEhD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE;QAC5B,IAAI,IAAI,eAAe,CAAC;KACzB;IAED,IAAI,CAAC,KAAK,EAAE;QACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YAClC,OAAO,UAAU,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;SACtD;QAED,OAAO,KAAK,CAAC;KACd;IAED,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;QAChC,OAAO,KAAK,CAAC;KACd;IAED,OAAO,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,UAAU,CACxB,KAAW,EACX,KAAa,EACb,OAAe,EACf,OAAe;IAEf,MAAM,QAAQ,GAAG,IAAI,IAAI,CACvB,KAAK,CAAC,WAAW,EAAE,EACnB,KAAK,CAAC,QAAQ,EAAE,EAChB,KAAK,CAAC,OAAO,EAAE,EACf,KAAK,EACL,OAAO,EACP,OAAO,EACP,KAAK,CAAC,eAAe,EAAE,CACxB,CAAC;IACF,2CAA2C;IAC3C,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;IAC1C,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAElC,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,KAAa;IACrC,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IAChC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACrB,OAAO,MAAM,CAAC;KACf;IAED,OAAO,IAAI,MAAM,EAAE,CAAC;AACtB,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,KAAa,EAAE,IAAa;IAC3D,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,OAAe;IAChD,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;AACvC,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,OAAe;IAChD,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;AACvC,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAU,EAAE,GAAS,EAAE,GAAS;IAChE,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;IAE1C,IAAI,GAAG,IAAI,OAAO,GAAG,GAAG,EAAE;QACxB,OAAO,KAAK,CAAC;KACd;IAED,IAAI,GAAG,IAAI,OAAO,GAAG,GAAG,EAAE;QACxB,OAAO,KAAK,CAAC;KACd;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,YAAY,CAC1B,KAAa,EACb,OAAO,GAAG,GAAG,EACb,OAAO,GAAG,GAAG,EACb,IAAa;IAEb,OAAO,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC;WAC/B,kBAAkB,CAAC,OAAO,CAAC;WAC3B,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACnC,CAAC","sourcesContent":["import { Time, TimepickerComponentState } from './timepicker.models';\r\n\r\nconst dex = 10;\r\nconst hoursPerDay = 24;\r\nconst hoursPerDayHalf = 12;\r\nconst minutesPerHour = 60;\r\nconst secondsPerMinute = 60;\r\n\r\nexport function isValidDate(value?: string | Date): boolean {\r\n  if (!value) {\r\n    return false;\r\n  }\r\n\r\n  if (value instanceof Date && isNaN(value.getHours())) {\r\n    return false;\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return isValidDate(new Date(value));\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isValidLimit(controls: TimepickerComponentState, newDate: Date): boolean {\r\n  if (controls.min && newDate < controls.min) {\r\n    return false;\r\n  }\r\n\r\n  if (controls.max && newDate > controls.max) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function toNumber(value: string | number): number {\r\n  if (typeof value === 'number') {\r\n    return value;\r\n  }\r\n\r\n  return parseInt(value, dex);\r\n}\r\n\r\nexport function isNumber(value: string | number): value is number {\r\n  return !isNaN(toNumber(value));\r\n}\r\n\r\nexport function parseHours(\r\n  value: string | number,\r\n  isPM = false\r\n): number {\r\n  const hour = toNumber(value);\r\n  if (\r\n    isNaN(hour) ||\r\n    hour < 0 ||\r\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\r\n  ) {\r\n    return NaN;\r\n  }\r\n\r\n  return hour;\r\n}\r\n\r\nexport function parseMinutes(value: string | number): number {\r\n  const minute = toNumber(value);\r\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\r\n    return NaN;\r\n  }\r\n\r\n  return minute;\r\n}\r\n\r\nexport function parseSeconds(value: string | number): number {\r\n  const seconds = toNumber(value);\r\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\r\n    return NaN;\r\n  }\r\n\r\n  return seconds;\r\n}\r\n\r\nexport function parseTime(value: string | Date): Date {\r\n  if (typeof value === 'string') {\r\n    return new Date(value);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nexport function changeTime(value: Date, diff: Time): Date {\r\n  if (!value) {\r\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\r\n  }\r\n\r\n  let hour = value.getHours();\r\n  let minutes = value.getMinutes();\r\n  let seconds = value.getSeconds();\r\n\r\n  if (diff.hour) {\r\n    hour = hour + toNumber(diff.hour);\r\n  }\r\n\r\n  if (diff.minute) {\r\n    minutes = minutes + toNumber(diff.minute);\r\n  }\r\n\r\n  if (diff.seconds) {\r\n    seconds = seconds + toNumber(diff.seconds);\r\n  }\r\n\r\n  return createDate(value, hour, minutes, seconds);\r\n}\r\n\r\nexport function setTime(value: Date, opts: Time): Date {\r\n  let hour = parseHours(opts.hour);\r\n  const minute = parseMinutes(opts.minute);\r\n  const seconds = parseSeconds(opts.seconds) || 0;\r\n\r\n  if (opts.isPM && hour !== 12) {\r\n    hour += hoursPerDayHalf;\r\n  }\r\n\r\n  if (!value) {\r\n    if (!isNaN(hour) && !isNaN(minute)) {\r\n      return createDate(new Date(), hour, minute, seconds);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  if (isNaN(hour) || isNaN(minute)) {\r\n    return value;\r\n  }\r\n\r\n  return createDate(value, hour, minute, seconds);\r\n}\r\n\r\nexport function createDate(\r\n  value: Date,\r\n  hours: number,\r\n  minutes: number,\r\n  seconds: number\r\n): Date {\r\n  const newValue = new Date(\r\n    value.getFullYear(),\r\n    value.getMonth(),\r\n    value.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n    value.getMilliseconds()\r\n  );\r\n  // #3139 ensure date part remains unchanged\r\n  newValue.setFullYear(value.getFullYear());\r\n  newValue.setMonth(value.getMonth());\r\n  newValue.setDate(value.getDate());\r\n\r\n  return newValue;\r\n}\r\n\r\nexport function padNumber(value: number): string {\r\n  const _value = value.toString();\r\n  if (_value.length > 1) {\r\n    return _value;\r\n  }\r\n\r\n  return `0${_value}`;\r\n}\r\n\r\nexport function isHourInputValid(hours: string, isPM: boolean): boolean {\r\n  return !isNaN(parseHours(hours, isPM));\r\n}\r\n\r\nexport function isMinuteInputValid(minutes: string): boolean {\r\n  return !isNaN(parseMinutes(minutes));\r\n}\r\n\r\nexport function isSecondInputValid(seconds: string): boolean {\r\n  return !isNaN(parseSeconds(seconds));\r\n}\r\n\r\nexport function isInputLimitValid(diff: Time, max: Date, min: Date): boolean {\r\n  const newDate = setTime(new Date(), diff);\r\n\r\n  if (max && newDate > max) {\r\n    return false;\r\n  }\r\n\r\n  if (min && newDate < min) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isInputValid(\r\n  hours: string,\r\n  minutes = '0',\r\n  seconds = '0',\r\n  isPM: boolean\r\n): boolean {\r\n  return isHourInputValid(hours, isPM)\r\n    && isMinuteInputValid(minutes)\r\n    && isSecondInputValid(seconds);\r\n}\r\n"]}