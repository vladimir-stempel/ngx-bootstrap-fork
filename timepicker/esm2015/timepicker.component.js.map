{"version":3,"file":"timepicker.component.js","sourceRoot":"","sources":["../../../../src/timepicker/timepicker.component.ts","../../../../src/timepicker/timepicker.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { TimepickerActions } from './reducer/timepicker.actions';\r\nimport { TimepickerStore } from './reducer/timepicker.store';\r\nimport { getControlsValue } from './timepicker-controls.util';\r\nimport { TimepickerConfig } from './timepicker.config';\r\n\r\nimport {\r\n  TimeChangeSource,\r\n  TimepickerComponentState,\r\n  TimepickerControls\r\n} from './timepicker.models';\r\n\r\nimport {\r\n  isValidDate,\r\n  padNumber,\r\n  parseTime,\r\n  isInputValid,\r\n  isHourInputValid,\r\n  isMinuteInputValid,\r\n  isSecondInputValid,\r\n  isInputLimitValid\r\n} from './timepicker.utils';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ControlValueAccessorModel } from './models';\r\n\r\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: ControlValueAccessorModel = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TimepickerComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'timepicker',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\r\n  templateUrl: './timepicker.component.html',\r\n  styles: [`\r\n    .bs-chevron {\r\n      border-style: solid;\r\n      display: block;\r\n      width: 9px;\r\n      height: 9px;\r\n      position: relative;\r\n      border-width: 3px 0px 0 3px;\r\n    }\r\n\r\n    .bs-chevron-up {\r\n      -webkit-transform: rotate(45deg);\r\n      transform: rotate(45deg);\r\n      top: 2px;\r\n    }\r\n\r\n    .bs-chevron-down {\r\n      -webkit-transform: rotate(-135deg);\r\n      transform: rotate(-135deg);\r\n      top: -2px;\r\n    }\r\n\r\n    .bs-timepicker-field {\r\n      width: 50px;\r\n      padding: .375rem .55rem;\r\n    }\r\n  `],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TimepickerComponent\r\n  implements ControlValueAccessor,\r\n    TimepickerComponentState,\r\n    TimepickerControls,\r\n    OnChanges,\r\n    OnDestroy {\r\n  /** hours change step */\r\n  @Input() hourStep: number;\r\n  /** minutes change step */\r\n  @Input() minuteStep: number;\r\n  /** seconds change step */\r\n  @Input() secondsStep: number;\r\n  /** if true hours and minutes fields will be readonly */\r\n  @Input() readonlyInput: boolean;\r\n  /** if true hours and minutes fields will be disabled */\r\n  @Input() disabled: boolean;\r\n  /** if true scroll inside hours and minutes inputs will change time */\r\n  @Input() mousewheel: boolean;\r\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\r\n  @Input() arrowkeys: boolean;\r\n  /** if true spinner arrows above and below the inputs will be shown */\r\n  @Input() showSpinners: boolean;\r\n  /** if true meridian button will be shown */\r\n  @Input() showMeridian: boolean;\r\n  /** show minutes in timepicker */\r\n  @Input() showMinutes: boolean;\r\n  /** show seconds in timepicker */\r\n  @Input() showSeconds: boolean;\r\n  /** meridian labels based on locale */\r\n  @Input() meridians: string[];\r\n  /** minimum time user can select */\r\n  @Input() min: Date;\r\n  /** maximum time user can select */\r\n  @Input() max: Date;\r\n  /** placeholder for hours field in timepicker */\r\n  @Input() hoursPlaceholder: string;\r\n  /** placeholder for minutes field in timepicker */\r\n  @Input() minutesPlaceholder: string;\r\n  /** placeholder for seconds field in timepicker */\r\n  @Input() secondsPlaceholder: string;\r\n\r\n  /** emits true if value is a valid date */\r\n  @Output() isValid = new EventEmitter<boolean>();\r\n\r\n  // ui variables\r\n  hours: string;\r\n  minutes: string;\r\n  seconds: string;\r\n  meridian: string;\r\n\r\n  /** @deprecated - please use `isEditable` instead */\r\n  get isSpinnersVisible(): boolean {\r\n    return this.showSpinners && !this.readonlyInput;\r\n  }\r\n\r\n  get isEditable(): boolean {\r\n    return !(this.readonlyInput || this.disabled);\r\n  }\r\n\r\n  // min\\max validation for input fields\r\n  invalidHours = false;\r\n  invalidMinutes = false;\r\n  invalidSeconds = false;\r\n\r\n  // aria-label variables\r\n  labelHours: string;\r\n  labelMinutes: string;\r\n  labelSeconds: string;\r\n\r\n  // time picker controls state\r\n  canIncrementHours: boolean;\r\n  canIncrementMinutes: boolean;\r\n  canIncrementSeconds: boolean;\r\n\r\n  canDecrementHours: boolean;\r\n  canDecrementMinutes: boolean;\r\n  canDecrementSeconds: boolean;\r\n\r\n  canToggleMeridian: boolean;\r\n\r\n  // control value accessor methods\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  onChange = Function.prototype;\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  onTouched = Function.prototype;\r\n\r\n  timepickerSub: Subscription;\r\n\r\n  constructor(\r\n    _config: TimepickerConfig,\r\n    private _cd: ChangeDetectorRef,\r\n    private _store: TimepickerStore,\r\n    private _timepickerActions: TimepickerActions\r\n  ) {\r\n    Object.assign(this, _config);\r\n\r\n    this.timepickerSub = _store\r\n      .select(state => state.value)\r\n      .subscribe((value: Date) => {\r\n        // update UI values if date changed\r\n        this._renderTime(value);\r\n        this.onChange(value);\r\n\r\n        this._store.dispatch(\r\n          this._timepickerActions.updateControls(getControlsValue(this))\r\n        );\r\n      });\r\n\r\n    _store\r\n      .select(state => state.controls)\r\n      .subscribe((controlsState: TimepickerControls) => {\r\n        this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\r\n        Object.assign(this, controlsState);\r\n        _cd.markForCheck();\r\n      });\r\n  }\r\n\r\n  resetValidation(): void {\r\n    this.invalidHours = false;\r\n    this.invalidMinutes = false;\r\n    this.invalidSeconds = false;\r\n  }\r\n\r\n  isPM(): boolean {\r\n    return this.showMeridian && this.meridian === this.meridians[1];\r\n  }\r\n\r\n  prevDef($event: Event) {\r\n    $event.preventDefault();\r\n  }\r\n\r\n  wheelSign($event: WheelEventInit): number {\r\n    return Math.sign($event.deltaY) * -1;\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this._store.dispatch(\r\n      this._timepickerActions.updateControls(getControlsValue(this))\r\n    );\r\n  }\r\n\r\n  changeHours(step: number, source: TimeChangeSource = ''): void {\r\n    this.resetValidation();\r\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\r\n  }\r\n\r\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\r\n    this.resetValidation();\r\n    this._store.dispatch(\r\n      this._timepickerActions.changeMinutes({ step, source })\r\n    );\r\n  }\r\n\r\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\r\n    this.resetValidation();\r\n    this._store.dispatch(\r\n      this._timepickerActions.changeSeconds({ step, source })\r\n    );\r\n  }\r\n\r\n  updateHours(hours: string): void {\r\n    this.resetValidation();\r\n    this.hours = hours;\r\n\r\n    const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\r\n\r\n    if (!isValid) {\r\n      this.invalidHours = true;\r\n      this.isValid.emit(false);\r\n      this.onChange(null);\r\n\r\n      return;\r\n    }\r\n\r\n    this._updateTime();\r\n  }\r\n\r\n  updateMinutes(minutes: string) {\r\n    this.resetValidation();\r\n    this.minutes = minutes;\r\n\r\n    const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\r\n\r\n    if (!isValid) {\r\n      this.invalidMinutes = true;\r\n      this.isValid.emit(false);\r\n      this.onChange(null);\r\n\r\n      return;\r\n    }\r\n\r\n    this._updateTime();\r\n  }\r\n\r\n  updateSeconds(seconds: string) {\r\n    this.resetValidation();\r\n    this.seconds = seconds;\r\n\r\n    const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\r\n\r\n    if (!isValid) {\r\n      this.invalidSeconds = true;\r\n      this.isValid.emit(false);\r\n      this.onChange(null);\r\n\r\n      return;\r\n    }\r\n\r\n    this._updateTime();\r\n  }\r\n\r\n  isValidLimit(): boolean {\r\n    return isInputLimitValid({\r\n      hour: this.hours,\r\n      minute: this.minutes,\r\n      seconds: this.seconds,\r\n      isPM: this.isPM()\r\n    }, this.max, this.min);\r\n  }\r\n\r\n  _updateTime() {\r\n    const _seconds = this.showSeconds ? this.seconds : void 0;\r\n    const _minutes = this.showMinutes ? this.minutes : void 0;\r\n    if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\r\n      this.isValid.emit(false);\r\n      this.onChange(null);\r\n\r\n      return;\r\n    }\r\n\r\n    this._store.dispatch(\r\n      this._timepickerActions.setTime({\r\n        hour: this.hours,\r\n        minute: this.minutes,\r\n        seconds: this.seconds,\r\n        isPM: this.isPM()\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleMeridian(): void {\r\n    if (!this.showMeridian || !this.isEditable) {\r\n      return;\r\n    }\r\n\r\n    const _hoursPerDayHalf = 12;\r\n    this._store.dispatch(\r\n      this._timepickerActions.changeHours({\r\n        step: _hoursPerDayHalf,\r\n        source: ''\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Write a new value to the element.\r\n   */\r\n  writeValue(obj: string | null | undefined | Date): void {\r\n    if (isValidDate(obj)) {\r\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\r\n    } else if (obj == null) {\r\n      this._store.dispatch(this._timepickerActions.writeValue(null));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a change event.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  registerOnChange(fn: (_: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a touch event.\r\n   */\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * This function is called when the control status changes to or from \"disabled\".\r\n   * Depending on the value, it will enable or disable the appropriate DOM element.\r\n   *\r\n   * @param isDisabled\r\n   */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._cd.markForCheck();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.timepickerSub.unsubscribe();\r\n  }\r\n\r\n  private _renderTime(value: string | Date): void {\r\n    if (!isValidDate(value)) {\r\n      this.hours = '';\r\n      this.minutes = '';\r\n      this.seconds = '';\r\n      this.meridian = this.meridians[0];\r\n\r\n      return;\r\n    }\r\n\r\n    const _value = parseTime(value);\r\n    const _hoursPerDayHalf = 12;\r\n    let _hours = _value.getHours();\r\n\r\n    if (this.showMeridian) {\r\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\r\n      _hours = _hours % _hoursPerDayHalf;\r\n      // should be 12 PM, not 00 PM\r\n      if (_hours === 0) {\r\n        _hours = _hoursPerDayHalf;\r\n      }\r\n    }\r\n\r\n    this.hours = padNumber(_hours);\r\n    this.minutes = padNumber(_value.getMinutes());\r\n    this.seconds = padNumber(_value.getUTCSeconds());\r\n  }\r\n}\r\n","<table>\r\n  <tbody>\r\n  <tr class=\"text-center\" [hidden]=\"!showSpinners\">\r\n    <!-- increment hours button-->\r\n    <td>\r\n      <a class=\"btn btn-link\" [class.disabled]=\"!canIncrementHours || !isEditable\"\r\n         (click)=\"changeHours(hourStep)\"\r\n      ><span class=\"bs-chevron bs-chevron-up\"></span></a>\r\n    </td>\r\n    <!-- divider -->\r\n    <td *ngIf=\"showMinutes\">&nbsp;&nbsp;&nbsp;</td>\r\n    <!-- increment minutes button -->\r\n    <td *ngIf=\"showMinutes\">\r\n      <a class=\"btn btn-link\" [class.disabled]=\"!canIncrementMinutes || !isEditable\"\r\n         (click)=\"changeMinutes(minuteStep)\"\r\n      ><span class=\"bs-chevron bs-chevron-up\"></span></a>\r\n    </td>\r\n    <!-- divider -->\r\n    <td *ngIf=\"showSeconds\">&nbsp;</td>\r\n    <!-- increment seconds button -->\r\n    <td *ngIf=\"showSeconds\">\r\n      <a class=\"btn btn-link\" [class.disabled]=\"!canIncrementSeconds || !isEditable\"\r\n         (click)=\"changeSeconds(secondsStep)\">\r\n        <span class=\"bs-chevron bs-chevron-up\"></span>\r\n      </a>\r\n    </td>\r\n    <!-- space between -->\r\n    <td *ngIf=\"showMeridian\">&nbsp;&nbsp;&nbsp;</td>\r\n    <!-- meridian placeholder-->\r\n    <td *ngIf=\"showMeridian\"></td>\r\n  </tr>\r\n  <tr>\r\n    <!-- hours -->\r\n    <td class=\"form-group\" [class.has-error]=\"invalidHours\">\r\n      <input type=\"text\" [class.is-invalid]=\"invalidHours\"\r\n             class=\"form-control text-center bs-timepicker-field\"\r\n             [placeholder]=\"hoursPlaceholder\"\r\n             maxlength=\"2\"\r\n             [readonly]=\"readonlyInput\"\r\n             [disabled]=\"disabled\"\r\n             [value]=\"hours\"\r\n             (wheel)=\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\"\r\n             (keydown.ArrowUp)=\"changeHours(hourStep, 'key')\"\r\n             (keydown.ArrowDown)=\"changeHours(-hourStep, 'key')\"\r\n             (change)=\"updateHours($event.target.value)\" [attr.aria-label]=\"labelHours\"></td>\r\n    <!-- divider -->\r\n    <td *ngIf=\"showMinutes\">&nbsp;:&nbsp;</td>\r\n    <!-- minutes -->\r\n    <td class=\"form-group\" *ngIf=\"showMinutes\" [class.has-error]=\"invalidMinutes\">\r\n      <input type=\"text\" [class.is-invalid]=\"invalidMinutes\"\r\n             class=\"form-control text-center bs-timepicker-field\"\r\n             [placeholder]=\"minutesPlaceholder\"\r\n             maxlength=\"2\"\r\n             [readonly]=\"readonlyInput\"\r\n             [disabled]=\"disabled\"\r\n             [value]=\"minutes\"\r\n             (wheel)=\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\"\r\n             (keydown.ArrowUp)=\"changeMinutes(minuteStep, 'key')\"\r\n             (keydown.ArrowDown)=\"changeMinutes(-minuteStep, 'key')\"\r\n             (change)=\"updateMinutes($event.target.value)\" [attr.aria-label]=\"labelMinutes\">\r\n    </td>\r\n    <!-- divider -->\r\n    <td *ngIf=\"showSeconds\">&nbsp;:&nbsp;</td>\r\n    <!-- seconds -->\r\n    <td class=\"form-group\" *ngIf=\"showSeconds\" [class.has-error]=\"invalidSeconds\">\r\n      <input type=\"text\" [class.is-invalid]=\"invalidSeconds\"\r\n             class=\"form-control text-center bs-timepicker-field\"\r\n             [placeholder]=\"secondsPlaceholder\"\r\n             maxlength=\"2\"\r\n             [readonly]=\"readonlyInput\"\r\n             [disabled]=\"disabled\"\r\n             [value]=\"seconds\"\r\n             (wheel)=\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\"\r\n             (keydown.ArrowUp)=\"changeSeconds(secondsStep, 'key')\"\r\n             (keydown.ArrowDown)=\"changeSeconds(-secondsStep, 'key')\"\r\n             (change)=\"updateSeconds($event.target.value)\" [attr.aria-label]=\"labelSeconds\">\r\n    </td>\r\n    <!-- space between -->\r\n    <td *ngIf=\"showMeridian\">&nbsp;&nbsp;&nbsp;</td>\r\n    <!-- meridian -->\r\n    <td *ngIf=\"showMeridian\">\r\n      <button type=\"button\" class=\"btn btn-default text-center\"\r\n              [disabled]=\"!isEditable || !canToggleMeridian\"\r\n              [class.disabled]=\"!isEditable || !canToggleMeridian\"\r\n              (click)=\"toggleMeridian()\"\r\n      >{{ meridian }}\r\n      </button>\r\n    </td>\r\n  </tr>\r\n  <tr class=\"text-center\" [hidden]=\"!showSpinners\">\r\n    <!-- decrement hours button-->\r\n    <td>\r\n      <a class=\"btn btn-link\" [class.disabled]=\"!canDecrementHours || !isEditable\"\r\n         (click)=\"changeHours(-hourStep)\">\r\n        <span class=\"bs-chevron bs-chevron-down\"></span>\r\n      </a>\r\n    </td>\r\n    <!-- divider -->\r\n    <td *ngIf=\"showMinutes\">&nbsp;&nbsp;&nbsp;</td>\r\n    <!-- decrement minutes button-->\r\n    <td *ngIf=\"showMinutes\">\r\n      <a class=\"btn btn-link\" [class.disabled]=\"!canDecrementMinutes || !isEditable\"\r\n         (click)=\"changeMinutes(-minuteStep)\">\r\n        <span class=\"bs-chevron bs-chevron-down\"></span>\r\n      </a>\r\n    </td>\r\n    <!-- divider -->\r\n    <td *ngIf=\"showSeconds\">&nbsp;</td>\r\n    <!-- decrement seconds button-->\r\n    <td *ngIf=\"showSeconds\">\r\n      <a class=\"btn btn-link\" [class.disabled]=\"!canDecrementSeconds || !isEditable\"\r\n         (click)=\"changeSeconds(-secondsStep)\">\r\n        <span class=\"bs-chevron bs-chevron-down\"></span>\r\n      </a>\r\n    </td>\r\n    <!-- space between -->\r\n    <td *ngIf=\"showMeridian\">&nbsp;&nbsp;&nbsp;</td>\r\n    <!-- meridian placeholder-->\r\n    <td *ngIf=\"showMeridian\"></td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n"]}