{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/carousel/utils.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,MAAM,UAAU,aAAa,CAAI,KAAU,EAAE,SAAyD;IACpG,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IAErB,OAAO,CAAC,EAAE,EAAE;QACV,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE;YACjC,OAAO,CAAC,CAAC;SACV;KACF;IAED,OAAO,CAAC,CAAC,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,aAAa,CAAI,KAAU,EAAE,IAAY;IACvD,MAAM,GAAG,GAAG,EAAE,CAAC;IACf,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;IAC3C,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,OAAO,CAAC,GAAG,CAAC,EAAE;QACZ,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CACxB,CAAC,EACD,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAC3D,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,EAAE,CAAC;KACL;IAED,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["/**\r\n * Returns the index of the last element in the array where predicate is true, and -1\r\n * otherwise.\r\n * @param array The source array to search in\r\n * @param predicate find calls predicate once for each element of the array, in descending\r\n * order, until it finds one where predicate returns true. If such an element is found,\r\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\r\n */\r\nexport function findLastIndex<T>(array: T[], predicate: (value: T, index: number, obj: T[]) => boolean): number {\r\n  let l = array.length;\r\n\r\n  while (l--) {\r\n    if (predicate(array[l], l, array)) {\r\n      return l;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nexport function chunkByNumber<T>(array: T[], size: number): T[][] {\r\n  const out = [];\r\n  const n = Math.ceil((array.length) / size);\r\n  let i = 0;\r\n\r\n  while (i < n) {\r\n    const chunk = array.splice(\r\n      0,\r\n      (i === n - 1) && size < array.length ? array.length : size\r\n    );\r\n\r\n    out.push(chunk);\r\n    i++;\r\n  }\r\n\r\n  return out;\r\n}\r\n"]}