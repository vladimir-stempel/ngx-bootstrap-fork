{"version":3,"file":"ngx-bootstrap-progressbar.js","sources":["../../../../src/progressbar/progressbar.config.ts","../../../../src/progressbar/progressbar.component.html","../../../../src/progressbar/progressbar.component.ts","../../../../src/progressbar/bar.component.ts","../../../../src/progressbar/bar.component.html","../../../../src/progressbar/progressbar.module.ts","../../../../src/progressbar/ngx-bootstrap-progressbar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgressbarConfig {\r\n  /** if `true` changing value of progress bar will be animated */\r\n  animate = false;\r\n  /** maximum total value of progress element */\r\n  max = 100;\r\n}\r\n","<bar [type]=\"type\" [value]=\"_value\" [max]=\"_max\" *ngIf=\"!isStacked\">\r\n  <ng-content></ng-content>\r\n</bar>\r\n<ng-template [ngIf]=\"isStacked\">\r\n  <bar *ngFor=\"let item of _value\" [type]=\"item.type\" [value]=\"item.value\" [max]=\"item.max\">{{ item.label }}</bar>\r\n</ng-template>\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { ProgressbarConfig } from './progressbar.config';\r\nimport { ProgressbarType } from './progressbar-type.interface';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\nimport { BarComponent } from './bar.component';\r\n\r\n@Component({\r\n  selector: 'progressbar',\r\n  templateUrl: './progressbar.component.html',\r\n  styles: [\r\n    `\r\n    :host {\r\n      width: 100%;\r\n      display: flex;\r\n    }\r\n  `\r\n  ]\r\n})\r\nexport class ProgressbarComponent {\r\n  /** if `true` changing value of progress bar will be animated */\r\n  @Input()\r\n  set animate(value: boolean) {\r\n    this._animate = value;\r\n    this.bars.forEach((b: BarComponent) => {\r\n      b.animate = value;\r\n    });\r\n  }\r\n  /** If `true`, striped classes are applied */\r\n  @Input()\r\n  set striped(value: boolean) {\r\n    this._striped = value;\r\n    this.bars.forEach((b: BarComponent) => {\r\n      b.striped = value;\r\n    });\r\n  }\r\n\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n  @Input() type: ProgressbarType;\r\n  /** current value of progress bar. Could be a number or array of objects\r\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\r\n   */\r\n  @Input()\r\n  set value(value: number | Record<string, number | string>) {\r\n    this.isStacked = Array.isArray(value);\r\n    this._value = value;\r\n  }\r\n  isStacked = false;\r\n  _striped: boolean;\r\n  _animate: boolean;\r\n  _max = 100;\r\n\r\n  _value: number | Record<string, number | string>;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  /** maximum total value of progress element */\r\n  @HostBinding('attr.max')\r\n  @Input()\r\n  get max(): number {\r\n    return this._max;\r\n  }\r\n\r\n  set max(v: number) {\r\n    this._max = v;\r\n    this.bars.forEach((bar: BarComponent) => {\r\n      bar.recalculatePercentage();\r\n    });\r\n  }\r\n\r\n  @HostBinding('class.progress') addClass = true;\r\n\r\n  bars: BarComponent[] = [];\r\n  constructor(config: ProgressbarConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n  addBar(bar: BarComponent): void {\r\n    bar.animate = this._animate;\r\n    bar.striped = this._striped;\r\n\r\n    this.bars.push(bar);\r\n  }\r\n\r\n  removeBar(bar: BarComponent): void {\r\n    this.bars.splice(this.bars.indexOf(bar), 1);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ElementRef,\r\n  Renderer2, SimpleChanges, OnChanges\r\n} from '@angular/core';\r\n\r\nimport { ProgressbarComponent } from './progressbar.component';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n// todo: number pipe\r\n// todo: use query from progress?\r\n@Component({\r\n  selector: 'bar',\r\n  templateUrl: './bar.component.html',\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: {\r\n    role: 'progressbar',\r\n    'aria-valuemin': '0',\r\n    '[class.progress-bar-animated]': '!isBs3 && animate',\r\n    '[class.progress-bar-striped]': 'striped',\r\n    '[class.active]': 'isBs3 && animate',\r\n    '[attr.aria-valuenow]': 'value',\r\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\r\n    '[attr.aria-valuemax]': 'max',\r\n    '[style.height.%]': '\"100\"'\r\n  }\r\n})\r\nexport class BarComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() max: number;\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n  @Input() type: string;\r\n\r\n  /** current value of progress bar */\r\n  @Input() value: number;\r\n\r\n  @HostBinding('style.width.%')\r\n  get setBarWidth() {\r\n    this.recalculatePercentage();\r\n\r\n    return this.percent;\r\n  }\r\n\r\n  @HostBinding('class.progress-bar') addClass = true;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  striped: boolean;\r\n  animate: boolean;\r\n  percent = 0;\r\n  progress: ProgressbarComponent;\r\n\r\n  private _prevType: string;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    @Host() progress: ProgressbarComponent,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.progress = progress;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.progress.addBar(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.progress.removeBar(this);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (!changes.value.currentValue && changes.value.currentValue !== 0) {\r\n        return;\r\n      }\r\n      this.value = changes.value.currentValue;\r\n      this.recalculatePercentage();\r\n    }\r\n\r\n    if (changes.type) {\r\n      this.type = changes.type.currentValue;\r\n      this.applyTypeClasses();\r\n    }\r\n  }\r\n\r\n  recalculatePercentage(): void {\r\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\r\n\r\n    const totalPercentage = this.progress.bars\r\n      .reduce(function (total: number, bar: BarComponent): number {\r\n        return total + bar.percent;\r\n      }, 0);\r\n\r\n    if (totalPercentage > 100) {\r\n      this.percent -= totalPercentage - 100;\r\n    }\r\n  }\r\n\r\n  private applyTypeClasses(): void {\r\n    if (this._prevType) {\r\n      const barTypeClass = `progress-bar-${this._prevType}`;\r\n      const bgClass = `bg-${this._prevType}`;\r\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\r\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\r\n      this._prevType = null;\r\n    }\r\n\r\n    if (this.type) {\r\n      const barTypeClass = `progress-bar-${this.type}`;\r\n      const bgClass = `bg-${this.type}`;\r\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\r\n      this.renderer.addClass(this.el.nativeElement, bgClass);\r\n      this._prevType = this.type;\r\n    }\r\n  }\r\n}\r\n","<ng-content></ng-content>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { BarComponent } from './bar.component';\r\nimport { ProgressbarComponent } from './progressbar.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [BarComponent, ProgressbarComponent],\r\n  exports: [BarComponent, ProgressbarComponent]\r\n})\r\nexport class ProgressbarModule {\r\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\r\n    return { ngModule: ProgressbarModule, providers: [] };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵprojection","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate"],"mappings":"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"}