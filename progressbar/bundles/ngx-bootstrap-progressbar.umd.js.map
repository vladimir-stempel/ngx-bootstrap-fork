{"version":3,"file":"ngx-bootstrap-progressbar.umd.js","sources":["../../../../src/progressbar/progressbar.config.ts","../../../../src/progressbar/progressbar.component.html","../../../../src/progressbar/progressbar.component.ts","../../../../src/progressbar/bar.component.ts","../../../../src/progressbar/bar.component.html","../../../../src/progressbar/progressbar.module.ts","../../../../src/progressbar/ngx-bootstrap-progressbar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgressbarConfig {\r\n  /** if `true` changing value of progress bar will be animated */\r\n  animate = false;\r\n  /** maximum total value of progress element */\r\n  max = 100;\r\n}\r\n","<bar [type]=\"type\" [value]=\"_value\" [max]=\"_max\" *ngIf=\"!isStacked\">\r\n  <ng-content></ng-content>\r\n</bar>\r\n<ng-template [ngIf]=\"isStacked\">\r\n  <bar *ngFor=\"let item of _value\" [type]=\"item.type\" [value]=\"item.value\" [max]=\"item.max\">{{ item.label }}</bar>\r\n</ng-template>\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { ProgressbarConfig } from './progressbar.config';\r\nimport { ProgressbarType } from './progressbar-type.interface';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\nimport { BarComponent } from './bar.component';\r\n\r\n@Component({\r\n  selector: 'progressbar',\r\n  templateUrl: './progressbar.component.html',\r\n  styles: [\r\n    `\r\n    :host {\r\n      width: 100%;\r\n      display: flex;\r\n    }\r\n  `\r\n  ]\r\n})\r\nexport class ProgressbarComponent {\r\n  /** if `true` changing value of progress bar will be animated */\r\n  @Input()\r\n  set animate(value: boolean) {\r\n    this._animate = value;\r\n    this.bars.forEach((b: BarComponent) => {\r\n      b.animate = value;\r\n    });\r\n  }\r\n  /** If `true`, striped classes are applied */\r\n  @Input()\r\n  set striped(value: boolean) {\r\n    this._striped = value;\r\n    this.bars.forEach((b: BarComponent) => {\r\n      b.striped = value;\r\n    });\r\n  }\r\n\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n  @Input() type: ProgressbarType;\r\n  /** current value of progress bar. Could be a number or array of objects\r\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\r\n   */\r\n  @Input()\r\n  set value(value: number | Record<string, number | string>) {\r\n    this.isStacked = Array.isArray(value);\r\n    this._value = value;\r\n  }\r\n  isStacked = false;\r\n  _striped: boolean;\r\n  _animate: boolean;\r\n  _max = 100;\r\n\r\n  _value: number | Record<string, number | string>;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  /** maximum total value of progress element */\r\n  @HostBinding('attr.max')\r\n  @Input()\r\n  get max(): number {\r\n    return this._max;\r\n  }\r\n\r\n  set max(v: number) {\r\n    this._max = v;\r\n    this.bars.forEach((bar: BarComponent) => {\r\n      bar.recalculatePercentage();\r\n    });\r\n  }\r\n\r\n  @HostBinding('class.progress') addClass = true;\r\n\r\n  bars: BarComponent[] = [];\r\n  constructor(config: ProgressbarConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n  addBar(bar: BarComponent): void {\r\n    bar.animate = this._animate;\r\n    bar.striped = this._striped;\r\n\r\n    this.bars.push(bar);\r\n  }\r\n\r\n  removeBar(bar: BarComponent): void {\r\n    this.bars.splice(this.bars.indexOf(bar), 1);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ElementRef,\r\n  Renderer2, SimpleChanges, OnChanges\r\n} from '@angular/core';\r\n\r\nimport { ProgressbarComponent } from './progressbar.component';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\n\r\n// todo: number pipe\r\n// todo: use query from progress?\r\n@Component({\r\n  selector: 'bar',\r\n  templateUrl: './bar.component.html',\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: {\r\n    role: 'progressbar',\r\n    'aria-valuemin': '0',\r\n    '[class.progress-bar-animated]': '!isBs3 && animate',\r\n    '[class.progress-bar-striped]': 'striped',\r\n    '[class.active]': 'isBs3 && animate',\r\n    '[attr.aria-valuenow]': 'value',\r\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\r\n    '[attr.aria-valuemax]': 'max',\r\n    '[style.height.%]': '\"100\"'\r\n  }\r\n})\r\nexport class BarComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() max: number;\r\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n  @Input() type: string;\r\n\r\n  /** current value of progress bar */\r\n  @Input() value: number;\r\n\r\n  @HostBinding('style.width.%')\r\n  get setBarWidth() {\r\n    this.recalculatePercentage();\r\n\r\n    return this.percent;\r\n  }\r\n\r\n  @HostBinding('class.progress-bar') addClass = true;\r\n\r\n  get isBs3(): boolean {\r\n    return isBs3();\r\n  }\r\n\r\n  striped: boolean;\r\n  animate: boolean;\r\n  percent = 0;\r\n  progress: ProgressbarComponent;\r\n\r\n  private _prevType: string;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    @Host() progress: ProgressbarComponent,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.progress = progress;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.progress.addBar(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.progress.removeBar(this);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (!changes.value.currentValue && changes.value.currentValue !== 0) {\r\n        return;\r\n      }\r\n      this.value = changes.value.currentValue;\r\n      this.recalculatePercentage();\r\n    }\r\n\r\n    if (changes.type) {\r\n      this.type = changes.type.currentValue;\r\n      this.applyTypeClasses();\r\n    }\r\n  }\r\n\r\n  recalculatePercentage(): void {\r\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\r\n\r\n    const totalPercentage = this.progress.bars\r\n      .reduce(function (total: number, bar: BarComponent): number {\r\n        return total + bar.percent;\r\n      }, 0);\r\n\r\n    if (totalPercentage > 100) {\r\n      this.percent -= totalPercentage - 100;\r\n    }\r\n  }\r\n\r\n  private applyTypeClasses(): void {\r\n    if (this._prevType) {\r\n      const barTypeClass = `progress-bar-${this._prevType}`;\r\n      const bgClass = `bg-${this._prevType}`;\r\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\r\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\r\n      this._prevType = null;\r\n    }\r\n\r\n    if (this.type) {\r\n      const barTypeClass = `progress-bar-${this.type}`;\r\n      const bgClass = `bg-${this.type}`;\r\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\r\n      this.renderer.addClass(this.el.nativeElement, bgClass);\r\n      this._prevType = this.type;\r\n    }\r\n  }\r\n}\r\n","<ng-content></ng-content>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { BarComponent } from './bar.component';\r\nimport { ProgressbarComponent } from './progressbar.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [BarComponent, ProgressbarComponent],\r\n  exports: [BarComponent, ProgressbarComponent]\r\n})\r\nexport class ProgressbarModule {\r\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\r\n    return { ngModule: ProgressbarModule, providers: [] };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Injectable","i0.ɵɵelementStart","i0.ɵɵprojection","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","isBs3","Component","Input","HostBinding","Host","CommonModule","NgModule"],"mappings":";;;;;;;QAEA;;YAKE,YAAO,GAAG,KAAK,CAAC;;YAEhB,QAAG,GAAG,GAAG,CAAC;SACX;;;sFALY,iBAAiB;6DAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;gFAEP,iBAAiB;sBAH7BA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;;YCJDC,8BAAoE;YAClEC,kBAAyB;YAC3BC,iBAAM;;;;YAFDC,kCAAa,wBAAA,oBAAA;;;;;YAIhBH,8BAA0F;YAAAI,YAAgB;YAAAF,iBAAM;;;;YAA/EC,mCAAkB,wBAAA,oBAAA;YAAuCE,eAAgB;YAAhBC,mCAAgB;;;;;YAA1GC,mFAAgH;;;;YAA1FJ,uCAAS;;;;;QCsE/B,8BAAY,MAAyB;YA5BrC,cAAS,GAAG,KAAK,CAAC;YAGlB,SAAI,GAAG,GAAG,CAAC;YAsBoB,aAAQ,GAAG,IAAI,CAAC;YAE/C,SAAI,GAAmB,EAAE,CAAC;YAExB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC7B;QAxDD,sBACI,yCAAO;;iBADX,UACY,KAAc;gBACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAe;oBAChC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;iBACnB,CAAC,CAAC;aACJ;;;WAAA;QAED,sBACI,yCAAO;;iBADX,UACY,KAAc;gBACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAe;oBAChC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;iBACnB,CAAC,CAAC;aACJ;;;WAAA;QAOD,sBACI,uCAAK;;;;iBADT,UACU,KAA+C;gBACvD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACtC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;;WAAA;QAQD,sBAAI,uCAAK;iBAAT;gBACE,OAAOK,WAAK,EAAE,CAAC;aAChB;;;WAAA;QAGD,sBAEI,qCAAG;;iBAFP;gBAGE,OAAO,IAAI,CAAC,IAAI,CAAC;aAClB;iBAED,UAAQ,CAAS;gBACf,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAiB;oBAClC,GAAG,CAAC,qBAAqB,EAAE,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;WAPA;QAeD,qCAAM,GAAN,UAAO,GAAiB;YACtB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC5B,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrB;QAED,wCAAS,GAAT,UAAU,GAAiB;YACzB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7C;;;4FApEU,oBAAoB;6DAApB,oBAAoB;;;;;;;;gBDlBjCD,qEAEM;gBACNA,qFAEc;;;gBALoCJ,qCAAgB;gBAGrDE,eAAkB;gBAAlBF,oCAAkB;;;;gFCelB,oBAAoB;sBAZhCM,YAAS;uBAAC;wBACT,QAAQ,EAAE,aAAa;wBACvB,WAAW,EAAE,8BAA8B;wBAC3C,MAAM,EAAE;4BACN,oEAKD;yBACA;qBACF;yEAIK,OAAO;0BADVC,QAAK;oBASF,OAAO;0BADVA,QAAK;oBASG,IAAI;0BAAZA,QAAK;oBAKF,KAAK;0BADRA,QAAK;oBAmBF,GAAG;0BAFNC,cAAW;2BAAC,UAAU;;0BACtBD,QAAK;oBAYyB,QAAQ;0BAAtCC,cAAW;2BAAC,gBAAgB;;;;;ICzD/B;IACA;;QA6CE,sBACU,EAAc,EACd,QAA8B,EAC9B,QAAmB;YAFnB,OAAE,GAAF,EAAE,CAAY;YAEd,aAAQ,GAAR,QAAQ,CAAW;YAhBM,aAAQ,GAAG,IAAI,CAAC;YAQnD,YAAO,GAAG,CAAC,CAAC;YAUV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;QA1BD,sBACI,qCAAW;iBADf;gBAEE,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAE7B,OAAO,IAAI,CAAC,OAAO,CAAC;aACrB;;;WAAA;QAID,sBAAI,+BAAK;iBAAT;gBACE,OAAOH,WAAK,EAAE,CAAC;aAChB;;;WAAA;QAiBD,+BAAQ,GAAR;YACE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;QAED,kCAAW,GAAX;YACE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC/B;QAED,kCAAW,GAAX,UAAY,OAAsB;YAChC,IAAI,OAAO,CAAC,KAAK,EAAE;gBACjB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,KAAK,CAAC,EAAE;oBACnE,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;YAED,IAAI,OAAO,CAAC,IAAI,EAAE;gBAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;gBACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;SACF;QAED,4CAAqB,GAArB;YACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;YAElE,IAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;iBACvC,MAAM,CAAC,UAAU,KAAa,EAAE,GAAiB;gBAChD,OAAO,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;aAC5B,EAAE,CAAC,CAAC,CAAC;YAER,IAAI,eAAe,GAAG,GAAG,EAAE;gBACzB,IAAI,CAAC,OAAO,IAAI,eAAe,GAAG,GAAG,CAAC;aACvC;SACF;QAEO,uCAAgB,GAAhB;YACN,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAM,YAAY,GAAG,kBAAgB,IAAI,CAAC,SAAW,CAAC;gBACtD,IAAM,OAAO,GAAG,QAAM,IAAI,CAAC,SAAW,CAAC;gBACvC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;gBAC/D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;gBAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YAED,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAM,YAAY,GAAG,kBAAgB,IAAI,CAAC,IAAM,CAAC;gBACjD,IAAM,OAAO,GAAG,QAAM,IAAI,CAAC,IAAM,CAAC;gBAClC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;gBAC5D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;gBACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;aAC5B;SACF;;;4EAxFU,YAAY;qDAAZ,YAAY;;;;;;;;;gBChCzBP,kBAAyB;;;;gFDgCZ,YAAY;sBAhBxBQ,YAAS;uBAAC;wBACT,QAAQ,EAAE,KAAK;wBACf,WAAW,EAAE,sBAAsB;;wBAEnC,IAAI,EAAE;4BACJ,IAAI,EAAE,aAAa;4BACnB,eAAe,EAAE,GAAG;4BACpB,+BAA+B,EAAE,mBAAmB;4BACpD,8BAA8B,EAAE,SAAS;4BACzC,gBAAgB,EAAE,kBAAkB;4BACpC,sBAAsB,EAAE,OAAO;4BAC/B,uBAAuB,EAAE,yCAAyC;4BAClE,sBAAsB,EAAE,KAAK;4BAC7B,kBAAkB,EAAE,OAAO;yBAC5B;qBACF;;;kCA+BIG,OAAI;;aA7BE,GAAG;0BAAXF,QAAK;oBAEG,IAAI;0BAAZA,QAAK;oBAGG,KAAK;0BAAbA,QAAK;oBAGF,WAAW;0BADdC,cAAW;2BAAC,eAAe;oBAOO,QAAQ;0BAA1CA,cAAW;2BAAC,oBAAoB;;;;;QEpCnC;;QACS,yBAAO,GAAd;YACE,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;SACvD;;;yDAHU,iBAAiB;qHAAjB,iBAAiB,kBAJnB,CAACE,eAAY,CAAC;4FAIZ,iBAAiB,mBAHb,YAAY,EAAE,oBAAoB,aADvCA,eAAY,aAEZ,YAAY,EAAE,oBAAoB;;gFAEjC,iBAAiB;sBAL7BC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,YAAY,EAAE,oBAAoB,CAAC;wBAClD,OAAO,EAAE,CAAC,YAAY,EAAE,oBAAoB,CAAC;qBAC9C;;;2BAF8B,oBAAoB,YAAlC,YAAY;;ICR7B;;;;;;;;;;;;;;;"}